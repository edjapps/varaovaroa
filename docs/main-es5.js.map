{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_directives/hasRole.directive.ts","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///src/app/_models/pagination.ts","webpack:///src/app/_resolvers/lists.resolver.ts","webpack:///src/app/_resolvers/member-detail.resolver.ts","webpack:///src/app/_resolvers/member-edit.resolver.ts","webpack:///src/app/_resolvers/member-list.resolver.ts","webpack:///src/app/_resolvers/message-list.resolver.ts","webpack:///src/app/_services/Alertify.service.ts","webpack:///src/app/_services/Auth.service.ts","webpack:///src/app/_services/admin.service.ts","webpack:///src/app/_services/error.interceptor.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/admin/admin-panel/admin-panel.component.ts","webpack:///src/app/admin/admin-panel/admin-panel.component.html","webpack:///src/app/admin/photo-management/photo-management.component.ts","webpack:///src/app/admin/photo-management/photo-management.component.html","webpack:///src/app/admin/roles-modal/roles-modal.component.ts","webpack:///src/app/admin/roles-modal/roles-modal.component.html","webpack:///src/app/admin/user-management/user-management.component.ts","webpack:///src/app/admin/user-management/user-management.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/constants.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/lists/lists.component.html","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/members/member-detail/member-detail.component.ts","webpack:///src/app/members/member-detail/member-detail.component.html","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/members/member-messages/member-messages.component.ts","webpack:///src/app/members/member-messages/member-messages.component.html","webpack:///src/app/members/photo-editor/photo-editor.component.ts","webpack:///src/app/members/photo-editor/photo-editor.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/routes.ts","webpack:///src/app/values/values.component.ts","webpack:///src/app/values/values.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","HasRoleDirective","viewContainerRef","templateRef","authService","isVisible","userRoles","decodedToken","role","clear","roleMatch","appHasRole","createEmbeddedView","selector","AuthGuard","router","alertify","next","roles","firstChild","data","match","navigate","error","loggedIn","providedIn","PreventUnsavedChanges","component","editForm","dirty","confirm","PaginatedResult","ListsResolver","userService","pageNumber","pageSize","likesParam","route","getUsers","pipe","DataError","MemberDetailResolver","getUser","params","MemberEditResolver","nameid","MemberListResolver","MessageListResolver","messageContainer","getMessages","AlertifyService","message","okCallback","AuthService","http","helper","baseUrl","apiUrl","photoUrl","model","post","response","user","localStorage","setItem","token","result","JSON","stringify","currentUser","getUsername","decodeToken","getItem","username","unique_name","isTokenExpired","allowedRoles","isMatch","forEach","element","includes","AdminService","get","values","userName","photoId","status","ErrorInterceptor","spinner","show","handle","statusText","applicationError","headers","serverError","modalStateErrors","errors","key","hide","ErrorInterceptorProvider","provide","useClass","multi","UserService","page","itemsPerPage","userParams","likesParams","paginatedResult","append","minAge","maxAge","gender","orderBy","observe","body","pagination","parse","put","userId","recipientId","messageId","subscribe","AdminPanelComponent","templateUrl","styleUrls","PhotoManagementComponent","adminService","alertifyService","getPhotosForApproval","photos","updatePhotoStatus","index","indexOf","find","el","splice","RolesModalComponent","bsModalRef","updateSelectedRoles","emit","onSubmit","UserManagementComponent","modalService","getUsersWithRoles","users","initialState","getRolesArray","content","rolesToUpdate","roleNames","filter","checked","map","name","updateUserRoles","console","log","availableRoles","value","i","length","j","push","AppComponent","title","tokenGetter","AppModule","forRoot","config","whitelistedDomains","blacklistedRoutes","declarations","imports","providers","entryComponents","bootstrap","Constants","apiURL","HomeComponent","showHideRegister","ListsComponent","event","currentPage","loadUsers","pageChanged","MemberCardComponent","sendLike","success","knownAs","MemberDetailComponent","galleryOptions","width","height","thumbnailsColumns","imageAnimation","Slide","breakpoint","imagePercent","thumbnailsPercent","thumbnailsMargin","thumbnailMargin","preview","galleryImages","getImages","queryParams","selectedTab","memberTabs","tabs","active","tabId","images","photo","isApproved","small","url","medium","big","description","selectTab","MemberEditComponent","$event","returnValue","resp","updateUser","reset","MemberListComponent","genderList","display","resetFilters","MemberMessagesComponent","sendMessageForm","sendMessageTxt","required","loadMessages","currentUserId","getMessageThread","messages","isRead","markAsRead","valid","addMessage","unshift","sendMessage","uploader","PhotoEditorComponent","hasBaseDropZoneOver","initializeUploader","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","res","dateAdded","isMain","setMainPhoto","currentMain","p","removeItem","deletePhoto","findIndex","fileOverBase","MessagesComponent","stopPropagation","deleteMessage","m","NavComponent","login","RegisterComponent","fb","emitCancelRegister","colorTheme","bsConfig","Object","assign","containerClass","registerForm","group","dateOfBirth","city","country","password","minLength","maxLength","confirmPassword","validators","passwordMatchValidator","g","register","cancel","appRoutes","path","runGuardsAndResolvers","canActivate","children","canDeactivate","redirectTo","pathMatch","ValuesComponent","getValues","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Directive, Input, ViewContainerRef, TemplateRef, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../_services/Auth.service\";\n\n@Directive({\n  selector: \"[appHasRole]\",\n})\nexport class HasRoleDirective implements OnInit{\n  @Input() appHasRole: string[];\n  isVisible = false;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private authService: AuthService\n  ) {}\n\n    ngOnInit() {\n      const userRoles = this.authService.decodedToken.role as Array<string>;\n\n      // if user has no roles, clear the viewContainerRef\n      if (!userRoles) {\n        this.viewContainerRef.clear();\n      }\n\n      // if user has role needed then render the element\n      if (this.authService.roleMatch(this.appHasRole)) {\n        if (!this.isVisible) {\n          this.isVisible = true;\n          this.viewContainerRef.createEmbeddedView(this.templateRef);\n        } else {\n          this.isVisible = false;\n          this.viewContainerRef.clear();\n        }\n      }\n    }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"../_services/Auth.service\";\r\nimport { Router, CanActivate, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { AlertifyService } from \"../_services/Alertify.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot): boolean {\r\n    const roles = next.firstChild.data[\"roles\"] as Array<string>;\r\n    if (roles) {\r\n      const match = this.authService.roleMatch(roles);\r\n      if (match) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate([\"members\"]);\r\n        this.alertify.error(\"Voce nao tem acesso a essa area!\");\r\n      }\r\n    }\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\r\n    this.alertify.error(\"E preciso estar logado!\");\r\n    this.router.navigate([\"/home\"]);\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return confirm('Are you sure you want to continue? Any unsaved changes will be lost');\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","export interface Pagination {\n    itemsPerPage: number;\n    totalPages: number;\n    currentPage: number;\n    totalItems: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from '../_services/Alertify.service';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { Constants } from '../common/constants';\r\n\r\n@Injectable()\r\n\r\nexport class ListsResolver implements Resolve<PaginatedResult<User[]>> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    likesParam = 'Likers';\r\n\r\n    constructor(private userService: UserService, \r\n                private alertify: AlertifyService, \r\n                private router: Router) {}\r\n                \r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<User[]>> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(Constants.DataError);\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/Alertify.service';\r\nimport { Observable, of} from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Constants } from '../common/constants';\r\n\r\n@Injectable()\r\n\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private alertify: AlertifyService, private router: Router) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(Constants.DataError);\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Router, Resolve } from \"@angular/router\";\r\nimport { User } from \"../_models/user\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { UserService } from \"../_services/user.service\";\r\nimport { AlertifyService } from \"../_services/Alertify.service\";\r\nimport { AuthService } from \"../_services/Auth.service\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n      catchError((error) => {\r\n        this.alertify.error(error);\r\n        this.router.navigate([\"/members\"]);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from '../_services/Alertify.service';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { Constants } from '../common/constants';\r\n\r\n@Injectable()\r\n\r\nexport class MemberListResolver implements Resolve<PaginatedResult<User[]>> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n\r\n    constructor(private userService: UserService, private alertify: AlertifyService, private router: Router) {}\r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<User[]>> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(Constants.DataError);\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Message } from '../_models/Message';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from '../_services/Alertify.service';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { AuthService } from '../_services/Auth.service';\r\nimport { Constants } from '../common/constants';\r\n\r\n@Injectable()\r\n\r\nexport class MessageListResolver implements Resolve<PaginatedResult<Message[]>> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Unread';\r\n\r\n    constructor(private authService: AuthService, private userService: UserService,\r\n                private alertify: AlertifyService, private router: Router) {}\r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<Message[]>> {\r\n        return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n            this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(Constants.DataError);\r\n                this.router.navigate(['/home']);\r\n                \r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\nimport * as alertify from \"alertifyjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, (e: any) => {\n      if (e) {\n        okCallback();\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { map } from \"rxjs/operators\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { User } from \"../_models/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  token: string;\n  helper = new JwtHelperService();\n  decodedToken: any;\n  baseUrl: string = environment.apiUrl;\n  username: string;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>(null);\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + \"auth/login\", model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem(\"token\", user.token.result);\n          localStorage.setItem(\"user\", JSON.stringify(user.user));\n          this.currentUser = user.user;\n          this.getUsername();\n          this.photoUrl.next(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  getUsername() {\n    this.decodedToken = this.helper.decodeToken(localStorage.getItem(\"token\"));\n    if (this.decodedToken) {\n      this.username = this.decodedToken.unique_name;\n    }\n  }\n\n  loggedIn(): boolean {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return !this.helper.isTokenExpired(token);\n    }\n    return false;\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + \"auth/register\", user);\n  }\n\n  roleMatch(allowedRoles: Array<string>): boolean {\n    let isMatch = false;\n    const userRoles = this.decodedToken.role as Array<string>;\n    allowedRoles.forEach((element) => {\n      if (userRoles.includes(element)) {\n        isMatch = true;\n        return;\n      }\n    });\n    return isMatch;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsersWithRoles() {\n    return this.http.get(this.baseUrl + 'admin/usersWithRoles');\n  }\n\n  updateUserRoles(user: User, values: {}) {\n    return this.http.post(this.baseUrl + 'admin/editRoles/' + user.userName, values);\n  }\n\n  getPhotosForApproval() {\n    return this.http.get(this.baseUrl + 'admin/photosForApproval');\n  }\n\n  updatePhotoStatus(photoId: number, status: string) {\n    return this.http.post(this.baseUrl + 'admin/photoStatusUpdate/' + photoId + '/' + status, {});\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { catchError, map, finalize } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private spinner: NgxSpinnerService) {}\r\n\r\n  intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler\r\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n    // Show this spinner for each request\r\n    this.spinner.show();\r\n\r\n    return next.handle(req).pipe(\r\n      catchError((error) => {\r\n        // this is used for 401 Unauthorized error\r\n        if (error.status === 401) {\r\n          return throwError(error.statusText);\r\n        }\r\n\r\n        if (error instanceof HttpErrorResponse) {\r\n          // This is used for 500 type of errors\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            return throwError(applicationError);\r\n          }\r\n\r\n          // This is used for Modal State errors\r\n          const serverError = error.error;\r\n          let modalStateErrors = '';\r\n          if (serverError.errors && typeof serverError.errors === 'object') {\r\n            for (const key in serverError.errors) {\r\n              if (serverError.errors[key]) {\r\n                modalStateErrors += serverError.errors[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n          return throwError(modalStateErrors || serverError || 'serverError');\r\n        }\r\n      }),\r\n      finalize(() => {\r\n        // hide the spinner\r\n        this.spinner.hide();\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true,\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { User } from '../_models/user';\nimport { environment } from 'src/environments/environment';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl: string = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParams?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParams === 'Likers') {\n      params = params.append('Likers', 'true');\n    }\n\n    if (likesParams === 'Likees') {\n      params = params.append('Likees', 'false');\n    }\n\n    return this.http.get<User[]>(this.baseUrl + 'users', { observe: 'response', params})\n      .pipe(\n        map(response => \n        {\n          paginatedResult.result = response.body;\n          \n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put<User>(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?): Observable<PaginatedResult<Message[]>> {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n    \n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/message', { observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/message/thread/' + recipientId);\n  }\n\n  addMessage(userId: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/message/', message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/message/' + id , {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/message/' + messageId + '/read', {})\n      .subscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/_services/Auth.service';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"container mt-5\">\n  <h2>Admin Panel</h2>\n  <div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n      <tab heading=\"User Management\" *appHasRole=\"['Admin']\">\n        <div class=\"container\">\n          <app-user-management></app-user-management>\n        </div>\n      </tab>\n      <tab heading=\"Photo Management\" *appHasRole=\"['Admin','Moderator']\">\n        <div class=\"container\">\n          <app-photo-management></app-photo-management>\n        </div>\n      </tab>\n    </tabset>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { Photo } from 'src/app/_models/photo';\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n  photos: Photo[];\n  constructor(private adminService: AdminService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.getPhotosForApproval();\n  }\n\n  private getPhotosForApproval() {\n    this.adminService.getPhotosForApproval().subscribe((photos: Photo[]) => {\n      this.photos = photos;\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n\n  updatePhotoStatus(photoId: number, status: string) {\n    this.adminService.updatePhotoStatus(photoId, status).subscribe(() => {\n      const index = this.photos.indexOf(this.photos.find(el => el.id === photoId));\n      if (index > -1) {\n        this.photos.splice(index, 1);\n      }\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n      <div class=\"container\" style=\"position:relative\">\n        <img src=\"{{photo.url}}\" alt=\"\" class=\"img-thumbnail\"/>\n      </div>\n    \n    <div class=\"text-center mt-2\">\n      <button class=\"btn btn-sm btn-success mr-1\" (click)=\"updatePhotoStatus(photo.id,'Activate')\">Activate</button>\n      <button class=\"btn btn-sm btn-danger\" (click)=\"updatePhotoStatus(photo.id,'Reject')\">Reject</button>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { User } from \"src/app/_models/user\";\n\n@Component({\n  selector: \"app-roles-modal\",\n  templateUrl: \"./roles-modal.component.html\",\n  styleUrls: [\"./roles-modal.component.css\"],\n})\nexport class RolesModalComponent implements OnInit {\n  @Output() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit Roles for {{user.userName}}</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input type=\"checkbox\" class=\"form-check-input\" value=\"role.name\" \n      [checked]=\"role.checked\"\n      (change)=\"role.checked = !role.checked\"\n      [disabled]=\"user.userName === 'Admin' && role.name === 'Admin'\">\n      <label>{{role.name}}</label>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n  <button type=\"submit\" class=\"btn btn-success\" form=\"rolesForm\">Submit</button>\n</div> ","import { Component, OnInit } from \"@angular/core\";\nimport { AdminService } from \"src/app/_services/admin.service\";\nimport { User } from \"src/app/_models/user\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { RolesModalComponent } from \"../roles-modal/roles-modal.component\";\n\n@Component({\n  selector: \"app-user-management\",\n  templateUrl: \"./user-management.component.html\",\n  styleUrls: [\"./user-management.component.css\"],\n})\nexport class UserManagementComponent implements OnInit {\n  bsModalRef: BsModalRef;\n  users: User[];\n  constructor(\n    private adminService: AdminService,\n    private alertifyService: AlertifyService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles(): void {\n    this.adminService.getUsersWithRoles().subscribe(\n      (users: User[]) => {\n        this.users = users;\n      },\n      (error) => {\n        this.alertifyService.error(error);\n      }\n    );\n  }\n\n  editRolesModal(user: User): void {\n    const initialState = {\n      user,\n      roles: this.getRolesArray(user)\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, {\n      initialState,\n    });\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\n      const rolesToUpdate = {\n        roleNames: [...values.filter( el => el.checked === true).map(el => el.name)]\n      };\n      if (rolesToUpdate) {\n        this.adminService.updateUserRoles(user, rolesToUpdate).subscribe(() => {\n          user.roles = [...rolesToUpdate.roleNames];\n        }, error => {\n          console.log(error);\n        });\n      }\n    });\n  }\n\n  private getRolesArray(user) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: \"Admin\", value: \"Admin\" },\n      { name: \"Moderator\", value: \"Moderator\" },\n      { name: \"Member\", value: \"Member\" },\n      { name: \"VIP\", value: \"VIP\" },\n    ];\n\n    for (let i = 0; i < availableRoles.length; i++) {\n      let isMatch = false;\n      for (let j = 0; j < userRoles.length; j++) {\n        if (availableRoles[i].name === userRoles[j]) {\n          isMatch = true;\n          availableRoles[i].checked = true;\n          roles.push(availableRoles[i]);\n          break;\n        }\n      }\n      if(!isMatch) {\n        availableRoles[i].checked = false;\n        roles.push(availableRoles[i]);\n      }\n    }\n    return roles;\n  }\n}\n","<div class=\"row\">\n  <div class=\"table\">\n    <tr>\n      <th style=\"width: 10%\">User ID</th>\n      <th style=\"width: 30%\">Username</th>\n      <th style=\"width: 40%\">Active roles</th>\n      <th style=\"width: 20%\"></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <td>{{user.id}}</td>\n      <td>{{user.userName}}</td>\n      <td>{{user.roles}}</td>\n      <td><button class=\"btn btn-info\" (click)=\"editRolesModal(user)\">Edit Roles</button></td>\n    </tr>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/Auth.service';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  title = 'DatingApp-SPA';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.getUsername();\n\n    const user: User = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      this.authService.photoUrl.next(user.photoUrl);\n    }\n  }\n}\n","<app-nav></app-nav>\r\n<router-outlet></router-outlet>\r\n<ngx-spinner></ngx-spinner>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { RouterModule } from '@angular/router';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from 'ngx-gallery-9';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { AppComponent } from './app.component';\nimport { ValuesComponent } from './values/values.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessageListResolver } from './_resolvers/message-list.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/hasRole.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './admin/roles-modal/roles-modal.component';\n\nexport function tokenGetter() {\n      return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ValuesComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberListComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      MemberMessagesComponent,\n      AdminPanelComponent,\n      UserManagementComponent,\n      PhotoManagementComponent,\n      RolesModalComponent,\n      HasRoleDirective\n   ],\n   imports: [\n      BrowserModule,\n      RouterModule,\n      BrowserAnimationsModule,\n      BsDropdownModule.forRoot(),\n      HttpClientModule,\n      ButtonsModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      JwtModule.forRoot({\n         config: {\n           tokenGetter: tokenGetter,\n           whitelistedDomains: ['localhost:5000'],\n           blacklistedRoutes: ['localhost:5000/api/auth'],\n         }\n       }),\n      FormsModule,\n      ReactiveFormsModule,\n      TabsModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      TimeagoModule.forRoot(),\n      PaginationModule.forRoot(),\n      NgxGalleryModule,\n      FileUploadModule,\n      ModalModule.forRoot(),\n      NgxSpinnerModule\n   ],\n   providers: [\n      ErrorInterceptorProvider,\n      MemberListResolver,\n      MemberEditResolver,\n      MemberDetailResolver,\n      ListsResolver,\n      MessageListResolver\n   ],\n   entryComponents: [RolesModalComponent],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\n\r\nexport class Constants {\r\n    public static apiURL: string = \"https://itsolutionstuff.com/\";      \r\n    public static DataError: string = \"Erro ao buscar dados, verifique se voce esta Online!\";\r\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  showHideRegister: boolean;\n  constructor(private http: HttpClient, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  toggleRegister() {\n    this.showHideRegister = !this.showHideRegister;\n  }\n}\n","<div class=\"container mt-5\">\n  <div style=\"text-align:center\" *ngIf=\"!showHideRegister\">\n    <h1>Encontre seu Varao / Varoa</h1>\n    <p class=\"lead\">Tudo que voce precisa eh se cadastrar ou efetuar seu login!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"toggleRegister()\">Cadastro</button>\n      <button class=\"btn btn-info btn-lg\">Saiba mais</button>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\" *ngIf=\"showHideRegister\">\n        <app-register (emitCancelRegister)=\"toggleRegister()\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/Auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService, private route: ActivatedRoute,\n              private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n  }\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((response: PaginatedResult<User[]>) => {\n        this.users = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n  </div>\n\n<div class=\"container mt-3\">\n\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\" (click)=\"loadUsers()\">Members who like me</button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\" (click)=\"loadUsers()\">Members who I like</button>\n    </div>\n  </div>\n\n  <br>\n\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\n    >\n\n  </pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\nimport { AuthService } from 'src/app/_services/Auth.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n  constructor(private authService: AuthService, private userService: UserService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(recipientId: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, recipientId).subscribe(response => {\n      this.alertifyService.success('You have liked user: ' + this.user.knownAs);\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.photoUrl}}\" class=\"card-img-top\" alt=\"...\">\n    \n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" routerLinkActive=\"router-link-active\" ><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\"  (click)=\"sendLike(user.id)\"><i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members',user.id]\"  [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\n      \n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>\n      {{user.knownAs}}, {{user.age}}\n    </h6>\n    <p class=\"card-text text-muted text-center\">{{user.city}}</p>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { User } from \"src/app/_models/user\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  NgxGalleryOptions,\n  NgxGalleryImage,\n  NgxGalleryAnimation,\n  NgxGalleryImageSize,\n} from \"ngx-gallery-9\";\nimport { TabsetComponent } from \"ngx-bootstrap/tabs/public_api\";\n\n@Component({\n  selector: \"app-member-detail\",\n  templateUrl: \"./member-detail.component.html\",\n  styleUrls: [\"./member-detail.component.css\"],\n})\nexport class MemberDetailComponent implements OnInit {\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  @ViewChild(\"memberTabs\", { static: true }) memberTabs: TabsetComponent;\n  messageTabVav: boolean;\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe((data) => {\n      this.user = data[\"user\"];\n    });\n    this.galleryOptions = [\n      {\n        width: \"400px\",\n        height: \"400px\",\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n      },\n      // max-width 800\n      {\n        breakpoint: 800,\n        width: \"100%\",\n        height: \"600px\",\n        imagePercent: 80,\n        thumbnailsPercent: 20,\n        thumbnailsMargin: 20,\n        thumbnailMargin: 20,\n      },\n      // max-width 400\n      {\n        breakpoint: 400,\n        preview: false,\n      },\n    ];\n    this.galleryImages = this.getImages();\n\n    this.route.queryParams.subscribe((params) => {\n      const selectedTab = params[\"tab\"];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  getImages() {\n    const images = [];\n    for (const photo of this.user.photos) {\n      if (photo.isApproved) {\n        images.push({\n          small: photo.url,\n          medium: photo.url,\n          big: photo.url,\n          description: photo.description,\n        });\n      }\n    }\n    return images;\n  }\n}\n\n// loadUser() {\n//   debugger;\n//   this.userService.getUser(+this.route.snapshot.params['id']).subscribe((user: User) => {\n//     this.user = user;\n//   }, error => {\n//     this.alertify.error(error);\n//   }, () => {\n\n//   })\n// }\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <h1>{{user.knownAs}}'s Profile</h1>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" >\n        <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Member Since:</strong>\n            <p>{{user.created | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\">Like</button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\"  #memberTabs>\n          <tab heading=\"About {{user?.knownAs}}\" id=\"tab1\">\n            <h4>Description</h4>\n            <p>{{user.introduction}}</p>\n            <h4>Looking For</h4>\n            <p>{{user.lookingFor}}</p>\n          </tab>\n          <tab heading=\"Interests\">\n            <h4>Interests</h4>\n            <p>{{user.interests}}</p>\n          </tab>\n          <tab heading=\"Photos\">\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\n          </tab>\n          <tab heading=\"Messages\">\n            <app-member-messages [recipientId]=\"user.id\"></app-member-messages>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, HostListener } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/_models/user\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AuthService } from \"src/app/_services/Auth.service\";\n\n@Component({\n  selector: \"app-member-edit\",\n  templateUrl: \"./member-edit.component.html\",\n  styleUrls: [\"./member-edit.component.css\"],\n})\nexport class MemberEditComponent implements OnInit {\n  user: User;\n  photoUrl: string;\n  @ViewChild(\"editForm\", { static: true }) editForm: NgForm;\n  @HostListener(\"window:beforeunload\", [\"$event\"])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.authService.photoUrl.subscribe((resp) => {\n      this.photoUrl = resp;\n    });\n    this.route.data.subscribe((data) => {\n      this.user = data[\"user\"];\n    });\n    \n  }\n  updateUser() {\n    this.userService\n      .updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(\n        (response) => {\n          this.alertify.success(\"Profile updated Successfully\");\n          this.editForm.reset(this.user);\n        },\n        (error) => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <h1>Your Profile</h1>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"alert alert-info\" role=\"alert\" *ngIf=\"editForm.dirty\">\n        <strong>Information:</strong> You have made changes. Any unsaved changes will be lost!\n      </div>\n    </div>\n    \n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" >\n        <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Member Since:</strong>\n            <p>{{user.created  | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          \n            <button class=\"btn btn-success btn-block\" form=\"editForm\" [disabled]=\"!editForm.dirty\">Save Changes</button>\n          \n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        \n        <tabset class=\"member-tabset\">\n          <tab heading=\"Edit Profile\">\n            <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\n              <h4>Description</h4>\n              <textarea name=\"introduction\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.introduction\"></textarea>\n\n              <h4>Looking For</h4>\n              <textarea name=\"lookingFor\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.lookingFor\"></textarea>\n\n              <h4>Interests</h4>\n              <textarea name=\"interests\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.interests\"></textarea>\n\n              <h4>Location Details:</h4>\n              <div class=\"form-inline\">\n                <label for=\"city\">City</label>\n                <input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"user.city\">\n\n                <label for=\"country\">Country</label>\n                <input type=\"text\" class=\"form-control\" name=\"country\" [(ngModel)]=\"user.country\">\n              </div>\n\n            </form>\n          </tab>\n          <tab heading=\"Edit Photos\">\n            <app-photo-editor [photos]=\"user.photos\"></app-photo-editor>\n          </tab>\n         \n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { User } from \"src/app/_models/user\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Pagination, PaginatedResult } from \"src/app/_models/pagination\";\n\n@Component({\n  selector: \"app-member-list\",\n  templateUrl: \"./member-list.component.html\",\n  styleUrls: [\"./member-list.component.css\"],\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem(\"user\"));\n  genderList = [\n    { value: \"male\", display: \"Males\" },\n    { value: \"female\", display: \"Females\" },\n  ];\n  userParams: any = {};\n  pagination: Pagination;\n  page: number;\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe((data) => {\n      this.users = data[\"users\"].result;\n      this.pagination = data[\"users\"].pagination;\n    });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe((response: PaginatedResult<User[]>) => {\n        this.users = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2> {{userParams.OrderBy}}\n</div>\n\n<div class=\"container mt-3\">\n  <form #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" class=\"form-inline\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Age From</label>\n      <input type=\"number\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.minAge\" style=\"width: 70px\" id=\"minAge\" name=\"minAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Age To</label>\n      <input type=\"number\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.maxAge\" style=\"width: 70px\" id=\"maxAge\" name=\"maxAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Show: </label>\n      <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\" name=\"gender\" [(ngModel)]=\"userParams.gender\">\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">{{gender.display}}</option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" style=\"margin-left:10px\" (click)=\"resetFilters()\">Reset Filter</button>\n  \n\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" btnRadio=\"lastActive\" [(ngModel)]=\"userParams.orderBy\">Last Active</button>\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" btnRadio=\"created\" [(ngModel)]=\"userParams.orderBy\">Newest Members</button>\n      </div>\n    </div>\n  </form>\n  <br>\n\n  <div class=\"row\">\n    <div class=\"col-lg-2 col-md-3 col-sm-6 inline\" *ngFor=\"let item of users\">\n        <app-member-card [user]=\"item\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n      <pagination \n        [boundaryLinks]=\"true\"\n        [totalItems]=\"pagination.totalItems\" \n        [itemsPerPage]=\"pagination.itemsPerPage\" \n        [(ngModel)]=\"pagination.currentPage\"\n        previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" firstText=\"&raquo;\"\n        (pageChanged)=\"pageChanged($event)\">\n      </pagination>\n </div>\n\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Message } from \"src/app/_models/message\";\nimport { AuthService } from \"src/app/_services/Auth.service\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-member-messages\",\n  templateUrl: \"./member-messages.component.html\",\n  styleUrls: [\"./member-messages.component.css\"],\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  message: any = {};\n  sendMessageForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertifyService: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.sendMessageForm = new FormGroup({\n      sendMessageTxt: new FormControl(\"\", Validators.required),\n    });\n\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService\n      .getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          // tslint:disable-next-line:prefer-for-of\n          for (let i = 0; i < messages.length; i++) {\n            if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(\n        (messages) => {\n          this.messages = messages;\n        },\n        (error) => {\n          this.alertifyService.error(error);\n        }\n      );\n  }\n\n  sendMessage() {\n    if (this.sendMessageForm.valid) {\n      this.message.recipientId = this.recipientId;\n      this.message.content = this.sendMessageForm.get(\"sendMessageTxt\").value;\n\n      this.userService\n        .addMessage(this.authService.decodedToken.nameid, this.message)\n        .subscribe((message: Message) => {\n          debugger;\n          this.messages.unshift(message);\n          this.sendMessageForm.reset();\n        });\n    }\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n      <p>No messages yet... say hi by using the message box below</p>\n    </div>\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        <!-- to them -->\n        <div *ngIf=\"message.senderId == recipientId\">\n          <span class=\"chat-img float-left\">\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{message.senderKnownAs}}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n              </small>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n    \n        <!-- to me -->\n        <div *ngIf=\"message.senderId != recipientId\">\n          <span class=\"chat-img float-right\">\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(unread)</span>\n                <span *ngIf=\"message.isRead\" class=\"text-success\">(Read | {{message.dateRead | timeago}})</span>\n                \n              </small>\n              <strong class=\"primary-font  float-right\">{{message.senderKnownAs}}</strong>\n              \n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-footer\">\n    <form [formGroup]=\"sendMessageForm\">\n      <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control input-sm\" placeholder=\"send a private message\" formControlName=\"sendMessageTxt\"\n        [ngClass]=\"{'is-invalid': sendMessageForm.get('sendMessageTxt').errors && sendMessageForm.get('sendMessageTxt').touched}\"/>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-primary\" (click)=\"sendMessage()\" [disabled]=\"!sendMessageForm.valid\">Send</button>\n        </div>\n\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/Auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\nimport { User } from 'src/app/_models/user';\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl =  environment.apiUrl;\n  currentMain: Photo;\n  constructor(private authService: AuthService, private userService: UserService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain,\n          isApproved: res.isApproved\n        };\n        this.photos.push(photo);\n        if (res.isMain) {\n          this.authService.photoUrl.next(res.url);\n        }\n      }\n    };\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(response => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.photoUrl.next(photo.url);\n\n      const user: User = JSON.parse(localStorage.getItem(\"user\"));\n\n      if (user) {\n        user.photoUrl = photo.url;\n        localStorage.removeItem(\"user\");\n        localStorage.setItem('user', JSON.stringify(user));\n      }\n\n    });\n  }\n\n  deletePhoto(photo: Photo) {\n    this.userService.deletePhoto(this.authService.decodedToken.nameid, photo.id).subscribe(response => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photo.id), 1);\n      this.alertifyService.success('Photo has been deleted');\n    }, error => {\n      this.alertifyService.error('Failed to delete the Photo');\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n      <div class=\"container\" style=\"position:relative;padding-left:0px\">\n        <img src=\"{{photo.url}}\" alt=\"\" class=\"img-thumbnail\" [style.opacity]=\"!photo.isApproved ? '0.4' : '1'\"/>\n        <div class=\"centered\" \n        [ngClass]=\"!photo.isApproved ? 'awaitingApproval' : ''\"\n        *ngIf=\"!photo.isApproved\">Awaiting approval</div>\n      </div>\n    \n    <div class=\"text-center\">\n      <button class=\"btn btn-sm mr-1\" (click)=\"setMainPhoto(photo)\" \n      [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n      [disabled]=\"photo.isMain || !photo.isApproved\">Main</button>\n      <button class=\"btn btn-sm btn-danger\"><i class=\"fa fa-trash-o\"></i></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n          Drop Photos here\n      </div>\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload\n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel\n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Remove\n          </button>\n      </div>\n\n  </div>\n\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/Auth.service';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: \"app-messages\",\n  templateUrl: \"./messages.component.html\",\n  styleUrls: [\"./messages.component.css\"],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\n              private route: ActivatedRoute, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid,\n      this.pagination.currentPage, this.pagination.itemsPerPage, this.messageContainer).subscribe((data: PaginatedResult<Message[]>) => {\n        this.messages = data.result;\n        this.pagination = data.pagination;\n      }, error => {\n        this.alertifyService.error(error);\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n  deleteMessage(id: number, event) {\n    event.stopPropagation();\n    this.alertifyService.confirm('Are you sure you want to delete this message', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(result => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.alertifyService.success('Message has been deleted');\n      }, error => {\n        this.alertifyService.error('Failed to delete the message');\n      });\n    });\n  }\n}\n","<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Unread\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope\"></i> Unread\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Inbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope-open\"></i> Inbox\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Outbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-paper-plane\"></i> Outbox\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length == 0\">\n    <h3>No messages</h3>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer;\">\n      <thead>\n        <tr>\n          <th style=\"width: 40%;\">Message</th>\n          <th style=\"width: 20%;\">From / To</th>\n          <th style=\"width: 20%;\">Sent / Received</th>\n          <th style=\"width: 20%;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr \n          *ngFor=\"let message of messages\"\n          [routerLink]=\"['/members',messageContainer == 'Outbox'? message.recipientId: message.senderId]\"  [queryParams]=\"{tab: 3}\"\n        >\n          <td>{{ message.content }}</td>\n          <td>\n            <div *ngIf=\"messageContainer != 'Outbox'\">\n              <img\n                src=\"{{ message?.senderPhotoUrl }}\"\n                class=\"img-circle rounded-circle mr-1\"\n              />\n              <strong>{{ message.senderKnownAs }}</strong>\n            </div>\n            <div *ngIf=\"messageContainer == 'Outbox'\">\n              <img\n                src=\"{{ message?.recipientPhotoUrl }}\"\n                class=\"img-circle rounded-circle mr-1\"\n              />\n              <strong>{{ message.recipientKnownAs }}</strong>\n            </div>\n          </td>\n          <td>{{ message.messageSent | timeago }}</td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"deleteMessage(message.id, $event)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/Auth.service';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  username: string;\n  photoUrl: string;\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.photoUrl.subscribe(next => {\n      this.photoUrl = next;\n    });\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      this.alertify.success('Login Success');\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertify.message('logout successfull');\n    this.router.navigate(['/home']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary pr-5\">\n  <a class=\"navbar-brand\" href=\"#\">Varao Varoa App</a>\n\n  <ul class=\"navbar-nav mr-auto\">\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\" [routerLink]=\"['/members']\">Curtidas</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\"  [routerLink]=\"['/lists']\">Listas</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\"  [routerLink]=\"['/messages']\">Mensagens</a>\n    </li>\n    <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\"  [routerLink]=\"['/admin']\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"dropdown\" dropdown  *ngIf=\"loggedIn()\">\n    <span class=\"mr-2\">\n      <img src=\"{{ photoUrl || '../../../../assets/user.png'}}\" alt=\"\"/>\n    </span> \n    <a\n      class=\"dropdown-toggle text-light\"\n      *ngIf=\"loggedIn()\"\n      dropdownToggle\n    >\n      Ola, {{ authService.username }}\n    </a>\n\n    <div class=\"dropdown-menu\" *dropdownMenu>\n      <a href=\"#\" class=\"dropdown-item\" [routerLink]=\"['/member/edit']\"\n        ><i class=\"fa fa-user\"></i>Editar Perfil</a\n      >\n      <div class=\"dropdown-divider\"></div>\n      <a href=\"#\" class=\"dropdown-item\" (click)=\"logout()\"\n        ><i class=\"fa fa-sign-out\"></i>Sair</a\n      >\n    </div>\n  </div>\n\n  <form\n    #loginForm=\"ngForm\"\n    *ngIf=\"!loggedIn()\"\n    class=\"form-inline my-2 my-lg-0\"\n    (submit)=\"login()\"\n    autocomplete=\"off\"\n  >\n    <input\n      class=\"form-control mr-sm-2\"\n      name=\"Username\" \n      placeholder=\"Email\"\n      autocomplete=\"off\"\n      type=\"text\"\n      required\n      [(ngModel)]=\"model.Username\"\n    />\n    <input\n      class=\"form-control mr-sm-2\" \n      placeholder=\"Senha\"\n      type=\"password\"\n      name=\"Password\"\n      required\n      [(ngModel)]=\"model.Password\"\n    />\n    <button\n      class=\"btn btn-success my-2 my-sm-0\"\n      type=\"submit\"\n      [disabled]=\"!loginForm.valid\"\n    >\n      Entrar\n    </button>\n  </form>\n</nav>\n\n<!-- <pre>\n  Form Valid: {{loginForm.valid}}\n  Form Touched: {{loginForm.touched}}\n  Form Dirty: {{loginForm.dirty}}\n  Form Values: {{loginForm.value | json}}\n\n  Username Valid: {{username.valid}}\n  Username Touched: {{username.touched}}\n  Username Dirty: {{username.dirty}}\n  Username Values: {{username.value | json}}\n\n  Password Valid: {{password.valid}}\n  Password Touched: {{password.touched}}\n  Password Dirty: {{password.dirty}}\n  Password Values: {{password.value | json}}\n</pre> -->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/Auth.service';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user: User;\n  @Input() valuesFromHome: [];\n  @Output() emitCancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  colorTheme = 'theme-red';\n  bsConfig: Partial<BsDatepickerConfig>;\n  constructor(private router: Router, private authService: AuthService, private alertify: AlertifyService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.bsConfig = Object.assign({}, { containerClass: this.colorTheme });\n    \n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validators: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null :  { 'mismatch' : true};\n  }\n  cancel() {\n    this.emitCancelRegister.emit();\n  }\n\n  register() {\n    this.user = Object.assign({}, this.registerForm.value);\n    this.authService.register(this.user).subscribe(next => {\n      this.alertify.success('Registration Successfull');\n    }, error => {\n      this.alertify.error(error);\n    }, () => {\n      this.authService.login(this.user).subscribe(response => {\n        this.router.navigate(['/members']);\n      }, error => {\n        this.alertify.error(error);\n      });\n    });\n  }\n}\n","<form [formGroup]=\"registerForm\" (submit)=\"register()\" autocomplete=\"off\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr />\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n    </label>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\" placeholder=\"Username\" formControlName=\"username\"/>\n    <div class=\"invalid-feedback\">Please choose a username</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n      placeholder=\"Known as\" formControlName=\"knownAs\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\"  bsDatepicker [bsConfig]=\"bsConfig\" class=\"form-control\"\n      placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" >\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"City\" formControlName=\"city\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Country\" formControlName=\"country\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('password').errors  && registerForm.get('password').touched}\" placeholder=\"Password\" formControlName=\"password\"/>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('required')  && registerForm.get('password').touched\">Password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('minlength')  && registerForm.get('password').touched\">Password must be at least 4 characters</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('maxlength')  && registerForm.get('password').touched\">Password can not exceed 8 characters</div>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\"\n    [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors  && registerForm.get('confirmPassword').touched || \n    registerForm.hasError('mismatch')  && registerForm.get('confirmPassword').touched}\"\n    formControlName=\"confirmPassword\"/>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword').hasError('required')  && registerForm.get('confirmPassword').touched\">Confirm password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('mismatch')  && registerForm.get('confirmPassword').touched\">Passwords must match</div>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n  </div>\n</form>\n<!-- \n<p>Form Value : {{registerForm.value | json}}</p>\n<p>Form State : {{registerForm.status | json}}</p> -->","import { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { Routes } from '@angular/router';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessageListResolver } from './_resolvers/message-list.resolver';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    {path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            { path: 'members', component: MemberListComponent, resolve: { users: MemberListResolver} },\r\n            { path: 'members/:id', component: MemberDetailComponent, resolve: { user: MemberDetailResolver} },\r\n            { path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChanges],\r\n                resolve: { user: MemberEditResolver}},\r\n            { path: 'messages', component: MessagesComponent, resolve: { messages: MessageListResolver} },\r\n            { path: 'lists', component: ListsComponent, resolve: { users: ListsResolver}},\r\n            { path: 'admin', component: AdminPanelComponent, data: {roles: ['Admin', 'Moderator']}}\r\n        ]\r\n    },\r\n    {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Value } from '../_models/Value';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: 'app-values',\n  templateUrl: './values.component.html',\n  styleUrls: ['./values.component.css']\n})\nexport class ValuesComponent implements OnInit {\n  values: Value[];\n  constructor(private http: HttpClient, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n\n  getValues() {\n    this.http.get('http://localhost:5000/api/values').subscribe((response: any) => {\n      this.values = response;\n      this.alertifyService.success('values received');\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n}\n","<p *ngFor=\"let value of values\">\n  {{value.id}}, {{value.name}}\n</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}