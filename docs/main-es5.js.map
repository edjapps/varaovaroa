{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_directives/hasRole.directive.ts","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_models/pagination.ts","webpack:///src/app/_resolvers/lists.resolver.ts","webpack:///src/app/_resolvers/member-detail.resolver.ts","webpack:///src/app/_resolvers/member-edit.resolver.ts","webpack:///src/app/_resolvers/member-list.resolver.ts","webpack:///src/app/_resolvers/message-list.resolver.ts","webpack:///src/app/_services/Alertify.service.ts","webpack:///src/app/_services/Auth.service.ts","webpack:///src/app/_services/error.interceptor.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/constants.ts","webpack:///src/app/contact-us/contact-us.component.ts","webpack:///src/app/contact-us/contact-us.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/lists/lists.component.html","webpack:///src/app/member-reload/member-reload.component.ts","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/members/member-detail/member-detail.component.ts","webpack:///src/app/members/member-detail/member-detail.component.html","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/members/member-messages/member-messages.component.ts","webpack:///src/app/members/member-messages/member-messages.component.html","webpack:///src/app/members/photo-editor/photo-editor.component.ts","webpack:///src/app/members/photo-editor/photo-editor.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/routes.ts","webpack:///src/app/values/values.component.ts","webpack:///src/app/values/values.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","HasRoleDirective","viewContainerRef","templateRef","authService","isVisible","selector","AuthGuard","router","alertify","next","roles","firstChild","data","match","roleMatch","navigate","error","loggedIn","providedIn","PaginatedResult","ListsResolver","userService","pageNumber","pageSize","likesParam","route","getUsers","pipe","GetDataError","MemberDetailResolver","getUser","params","MemberEditResolver","JSON","parse","localStorage","getItem","MemberListResolver","MessageListResolver","messageContainer","getLastChats","getCurrentUser","memberId","AlertifyService","title","message","okCallback","console","log","AuthService","http","helper","photoUrl","model","headers","set","append","Username","Password","get","response","record","records","fields","MainImage","url","username","Name","ID","photoUrl2","user","knownAs","age","Age","userName","email","Email","gender","Gender","created","CreateDate","lastActive","LastAccess","city","City","trim","county","UF","introduction","About","lookingFor","Seek","interests","ActivitiesOfInterest2","toString","split","join","favorites","Favorites","setItem","stringify","httpHeaders","patch","Date","contact","body","name","post","currentUser","token","allowedRoles","isMatch","userRoles","decodedToken","role","forEach","element","includes","ErrorInterceptor","spinner","show","handle","status","statusText","applicationError","serverError","modalStateErrors","errors","key","hide","ErrorInterceptorProvider","provide","useClass","multi","UserService","cache","page","itemsPerPage","userParams","likesParams","paginatedResult","newFavorites","substring","length","ids","search","i","slice","uf","minAge","maxAge","result","Array","memberId4","isLiked","push","updateFavorites","obj","pagination","currentPage","totalPages","totalItems","paramMap","photosArray","OtherImages","photo","description","dateAdded","isApproved","isMain","userId","County","interestsArray","photos","christianTime","ChristianTime","church","Church","baptized","Baptized","connectGroup","ConnectGroup","otherCounty","OtherCounty","otherCountyMove","OtherCountyMove","height","Height","maritalStatus","MaritalStatus","education","Education","haveKids","HaveKids","wantKids","WantKids","churchAttendance","ChurchAttendance","relationship","Relationship","relatioshipWithKids","RelatioshipWithKids","holyFasting","HolyFasting","holyRelatioship","HolyRelatioship","smoke","Smoke","dateOfBirth","DateOfBirth","isActiveUser","toPromise","recipientId","param","msgs","field","Member1Enabled","Member2Enabled","msg","senderId","Member1","Member2Id2","Member1Id2","senderKnownAs","Member2Name","Member1Name","senderPhotoUrl","Member2MainImage","Member1MainImage","recipientKnownAs","recipientPhotoUrl","content","LastMessage","isRead","dateRead","messageSent","LastDate","lastChatId","sort","a","b","Member1Id","Member2Id","Message","chatId","ChatId","messagesTotal","updateLastChat","insertLastChat","subscribe","recipientMemberId","replace","put","messageId","of","arg0","AppComponent","templateUrl","styleUrls","tokenGetter","AppModule","useValue","forRoot","config","whitelistedDomains","blacklistedRoutes","declarations","imports","providers","bootstrap","Constants","SaveDataError","ContactUsComponent","fb","colorTheme","registerForm","group","required","Object","assign","value","contactUs","success","reset","register","HomeComponent","sanitizer","version","appVersion","year","getFullYear","createUrl","bypassSecurityTrustResourceUrl","loading","isLogged","showHideRegister","ListsComponent","users","event","loadUsers","MemberReloadComponent","loginAirtable","MemberCardComponent","alertifyService","saveLike","confirm","MemberDetailComponent","galleryOptions","width","thumbnailsColumns","imageAnimation","Slide","breakpoint","imagePercent","thumbnailsPercent","thumbnailsMargin","thumbnailMargin","preview","galleryImages","getImages","queryParams","selectedTab","memberTabs","tabs","active","tabId","images","small","medium","big","deleteUser","removeItem","editProfile","editUrl","selectTab","MemberEditComponent","$event","MemberListComponent","genderList","display","ufList","orderBy","MemberMessagesComponent","sendMessageForm","sendMessageTxt","loadMessages","currentUserId","getMessages","recipientUser","messages","valid","addMessage","sendMessage","uploader","PhotoEditorComponent","hasBaseDropZoneOver","initializeUploader","options","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","res","setMainPhoto","currentMain","filter","p","deletePhoto","splice","findIndex","fileOverBase","MessagesComponent","stopPropagation","deleteLastChat","result1","deleteChats","test","NavComponent","resp","forgot","warning","checkLoginByEmail","forgotPasswordUpdate","RegisterComponent","emitCancelRegister","bsConfig","containerClass","country","password","minLength","maxLength","confirmPassword","validators","passwordMatchValidator","g","emit","cancel","appRoutes","path","component","runGuardsAndResolvers","canActivate","children","redirectTo","pathMatch","ValuesComponent","getValues","values","environment","production","API_BASE","API_PATH","API_KEY","CREATE_FORM","EDIT_FORM","MAIN_IMAGE","OTHER_IMAGES","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Directive, Input, ViewContainerRef, TemplateRef, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../_services/Auth.service\";\n\n@Directive({\n  selector: \"[appHasRole]\",\n})\nexport class HasRoleDirective implements OnInit{\n  @Input() appHasRole: string[];\n  isVisible = false;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private authService: AuthService\n  ) {}\n\n    ngOnInit() {\n      // const userRoles = this.authService.decodedToken.role as Array<string>;\n\n      // // if user has no roles, clear the viewContainerRef\n      // if (!userRoles) {\n      //   this.viewContainerRef.clear();\n      // }\n\n      // // if user has role needed then render the element\n      // if (this.authService.roleMatch(this.appHasRole)) {\n      //   if (!this.isVisible) {\n      //     this.isVisible = true;\n      //     this.viewContainerRef.createEmbeddedView(this.templateRef);\n      //   } else {\n      //     this.isVisible = false;\n      //     this.viewContainerRef.clear();\n      //   }\n      // }\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { AuthService } from \"../_services/Auth.service\";\nimport { Router, CanActivate, ActivatedRouteSnapshot } from \"@angular/router\";\nimport { AlertifyService } from \"../_services/Alertify.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) {}\n\n  canActivate(next: ActivatedRouteSnapshot): boolean {\n    const roles = next.firstChild.data[\"roles\"] as Array<string>;\n    if (roles) {\n      const match = this.authService.roleMatch(roles);\n      if (match) {\n        return true;\n      } else {\n        this.router.navigate([\"members\"]);\n        this.alertify.error(\"Você não tem acesso a essa área!\");\n      }\n    }\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    this.alertify.error(\"É preciso estar logado!\");\n    this.router.navigate([\"/home\"]);\n    return false;\n  }\n}","export interface Pagination {\n    itemsPerPage: number;\n    totalPages: number;\n    currentPage: number;\n    totalItems: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\nimport { UserService } from '../_services/user.service';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { PaginatedResult } from '../_models/pagination';\nimport { Constants } from '../common/constants';\n\n@Injectable()\n\nexport class ListsResolver implements Resolve<PaginatedResult<User[]>> {\n    pageNumber = 1;\n    pageSize = 5;\n    likesParam = 'Likers';\n\n    constructor(private userService: UserService, \n                private alertify: AlertifyService, \n                private router: Router) {}\n                \n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<User[]>> {\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\n            catchError(error => {\n                this.alertify.error(Constants.GetDataError);\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { Constants } from '../common/constants';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\n\nexport class MemberDetailResolver implements Resolve<User> {\n    constructor(private userService: UserService, private alertify: AlertifyService, private router: Router) { }\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        return this.userService.getUser(route.params['id']).pipe(\n            catchError(error => {\n                this.alertify.error(Constants.GetDataError);\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Router, Resolve } from \"@angular/router\";\nimport { User } from \"../_models/user\";\nimport { Observable, of } from \"rxjs\";\nimport { UserService } from \"../_services/user.service\";\nimport { AlertifyService } from \"../_services/Alertify.service\";\nimport { AuthService } from \"../_services/Auth.service\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable()\nexport class MemberEditResolver implements Resolve<User> {\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\n    const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\n    return this.userService.getUser(id).pipe(\n      catchError((error) => {\n        this.alertify.error(error);\n        this.router.navigate([\"/members\"]);\n        return of(null);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\nimport { UserService } from '../_services/user.service';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { PaginatedResult } from '../_models/pagination';\nimport { Constants } from '../common/constants';\n\n@Injectable()\n\nexport class MemberListResolver implements Resolve<PaginatedResult<User[]>> {\n    pageNumber = 1;\n    pageSize = 5;\n\n    constructor(private userService: UserService, private alertify: AlertifyService, private router: Router) {}\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<User[]>> {\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\n            catchError(error => {\n                this.alertify.error(Constants.GetDataError);\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}","import { Injectable } from '@angular/core';\nimport { Message } from '../_models/Message';\nimport { UserService } from '../_services/user.service';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/Auth.service';\nimport { Constants } from '../common/constants';\n\n@Injectable()\n\nexport class MessageListResolver implements Resolve<PaginatedResult<Message[]>> {\n    pageNumber = 1;\n    pageSize = 5;\n    messageContainer = 'Unread';\n\n    constructor(private authService: AuthService, private userService: UserService,\n        private alertify: AlertifyService, private router: Router) { }\n\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<Message[]>> {\n        return this.userService.getLastChats(this.authService.getCurrentUser().memberId,\n            this.pageNumber, this.pageSize, this.messageContainer)\n            .pipe(\n                catchError(error => {\n                    this.alertify.error(Constants.GetDataError);\n                    this.router.navigate(['/home']);\n                    return of(null);\n                })\n            );\n    }\n}","import { Injectable } from \"@angular/core\";\nimport * as alertify from \"alertifyjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AlertifyService {\n  constructor() { }\n\n  confirm(title: string, message: string, okCallback: () => any) {\n    alertify.confirm(title, message, (e: any) => {\n      if (e) {\n        okCallback();\n      }\n    }, '');\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string, error?: string) {\n    alertify.error(message);\n    if (error) console.log(error);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { API_KEY, API_PATH } from \"src/environments/environment\";\nimport { Contact } from \"../_models/contact\";\nimport { User } from \"../_models/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\n\nexport class AuthService {\n  token: string;\n  helper = new JwtHelperService();\n  decodedToken: any;\n  username: string;\n  id: number;\n  photoUrl2: string;\n  photoUrl = new BehaviorSubject<string>(null);\n\n  constructor(private http: HttpClient) {}\n\n  loginAirtable(model: any) {\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\n\n    let params = new HttpParams();\n    params = params.append('fields[]', 'ID');\n    params = params.append('fields[]', 'Name');\n    params = params.append('fields[]', 'Age');\n    params = params.append('fields[]', 'Email');\n    params = params.append('fields[]', 'Gender');\n    params = params.append('fields[]', 'CreateDate');\n    params = params.append('fields[]', 'LastAccess');\n    params = params.append('fields[]', 'ImageUrl');\n    params = params.append('fields[]', 'City');\n    params = params.append('fields[]', 'UF');\n    params = params.append('fields[]', 'About');\n    params = params.append('fields[]', 'Seek');\n    params = params.append('fields[]', 'ActivitiesOfInterest2');\n    params = params.append('fields[]', 'MainImage');\n    params = params.append('fields[]', 'Favorites');\n\n    if (model){\n      params = params.append('filterByFormula', \"AND({Email}='\" + model.Username + \"',{Password}='\" + model.Password + \"')\");\n    }\n    else{\n      let memberId = this.getCurrentUser().memberId;\n      params = params.append('filterByFormula', `FIND(\"${memberId}\", MemberId) > 0`);\n    }\n    return this.http.get(API_PATH + 'Members', {\n      headers,\n      params\n    }).pipe(\n      map((response: any) => {\n        if (response) {\n          let record = response.records[0].fields;\n          let photoUrl = record.MainImage[0].url;\n\n          this.username = record.Name;\n          this.id = record.ID;\n          this.photoUrl.next(photoUrl);\n          this.photoUrl2 = photoUrl;\n\n          let user: User = {\n            knownAs: record.Name,\n            age: record.Age,\n            id: record.ID,\n            memberId: response.records[0].id,\n            userName: record.Name,\n            email: record.Email,\n            gender: record.Gender,\n            created: record.CreateDate,\n            lastActive: record.LastAccess,\n            photoUrl: photoUrl,\n            city: record.City.trim(),\n            county: record.UF,\n            introduction: record.About,\n            lookingFor: record.Seek,\n            interests: record.ActivitiesOfInterest2?.toString().split(',').join(', '),\n            favorites: record.Favorites\n          };\n          localStorage.setItem(\"currentUser\", JSON.stringify(user));\n          localStorage.setItem(\"favorites\", record.Favorites);\n          localStorage.setItem(\"userId\", record.ID);\n        }\n      })\n    );\n  }\n\n  checkLoginByEmail(username: string): Observable<string> {\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\n\n    let params = new HttpParams();\n    params = params.append('fields[]', 'ID');\n    params = params.append('fields[]', 'Name');    \n    params = params.append('filterByFormula', \"AND({Email}='\" + username + \"')\");\n\n    return this.http.get<any>(API_PATH + 'Members', {\n      headers,\n      params\n    }).pipe(\n      map((response: any) => {\n        if (response) {\n          // console.log(response.records[0].id);\n          return response.records[0].id        \n        }        \n      })\n    );    \n  }\n\n  forgotPasswordUpdate(memberId: string) {\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\n\n    return this.http.patch<any>(API_PATH + 'Members/' + memberId,\n      JSON.stringify({ \"fields\": { \"ForgotPasswordUpdate\": new Date() }, \"typecast\": true }),\n      { headers: httpHeaders });\n  }\n\n  contactUs(contact: Contact) {\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\n\n    const body = JSON.stringify({ \"fields\": { \"UserId\": `${contact.memberId}`, \"Name\": `${contact.name}`, \"Email\": `${contact.email}`, \"Message\": `${contact.message}` } });\n    return this.http.post(API_PATH + 'ContactUs', body, { headers: httpHeaders })\n      .pipe(map((response: any) => {\n        if (response) {\n          const id = response.id;\n        }\n      }));\n  }\n\n  getCurrentUser(): User {\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n    if (currentUser) {\n      this.id = currentUser.id;\n      this.username = currentUser.userName;\n      this.photoUrl.next(currentUser.photoUrl);\n    }\n    return currentUser;\n  }\n\n  loggedIn(): boolean {\n    const token = localStorage.getItem(\"currentUser\");\n    if (token) {\n      return true;\n    }\n    return false;\n  }\n\n  register(user: User) {\n    return this.http.post(API_PATH + \"auth/register\", user);\n  }\n\n  roleMatch(allowedRoles: Array<string>): boolean {\n    let isMatch = false;\n    const userRoles = this.decodedToken.role as Array<string>;\n    allowedRoles.forEach((element) => {\n      if (userRoles.includes(element)) {\n        isMatch = true;\n        return;\n      }\n    });\n    return isMatch;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpErrorResponse,\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n} from '@angular/common/http';\nimport { catchError, map, finalize } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private spinner: NgxSpinnerService) {}\n\n  intercept(\n    req: import('@angular/common/http').HttpRequest<any>,\n    next: import('@angular/common/http').HttpHandler\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\n    // Show this spinner for each request\n    this.spinner.show();\n\n    return next.handle(req).pipe(\n      catchError((error) => {\n        // this is used for 401 Unauthorized error\n        if (error.status === 401) {\n          return throwError(error.statusText);\n        }\n\n        if (error instanceof HttpErrorResponse) {\n          // This is used for 500 type of errors\n          const applicationError = error.headers.get('Application-Error');\n          if (applicationError) {\n            return throwError(applicationError);\n          }\n\n          // This is used for Modal State errors\n          const serverError = error.error;\n          let modalStateErrors = '';\n          if (serverError.errors && typeof serverError.errors === 'object') {\n            for (const key in serverError.errors) {\n              if (serverError.errors[key]) {\n                modalStateErrors += serverError.errors[key] + '\\n';\n              }\n            }\n          }\n          return throwError(modalStateErrors || serverError || 'serverError');\n        }\n      }),\n      finalize(() => {\n        // hide the spinner\n        this.spinner.hide();\n      })\n    );\n  }\n}\n\nexport const ErrorInterceptorProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true,\n};\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { API_KEY, API_PATH } from 'src/environments/environment';\r\nimport { Message } from '../_models/message';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { User } from '../_models/user';\r\nimport { AlertifyService } from './Alertify.service';\r\nimport { AuthService } from './Auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private cache: BehaviorSubject<PaginatedResult<User[]>> = new BehaviorSubject(null);  \r\n\r\n  constructor(private authService: AuthService, private http: HttpClient, private alertify: AlertifyService) { }  \r\n\r\n  getUsers(page?, itemsPerPage?, userParams?, likesParams?): Observable<PaginatedResult<User[]>> {\r\n    // if (this.cache.getValue() !== null) {\r\n    //   return new Observable<PaginatedResult<User[]>>((observer) => {\r\n    //     observer.next(this.cache.getValue());\r\n    //   });\r\n    // }\r\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\r\n    const httpHeaders = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('fields[]', 'ID');\r\n    params = params.append('fields[]', 'Name');\r\n    params = params.append('fields[]', 'Age');\r\n    params = params.append('fields[]', 'City');\r\n    params = params.append('fields[]', 'UF');\r\n    params = params.append('fields[]', 'MainImage');\r\n    params = params.append('sort%5B0%5D%5Bfield%5D', 'EditDate');\r\n    params = params.append('sort%5B0%5D%5Bdirection%5D', 'desc');\r\n\r\n    let favorites = localStorage.getItem(\"favorites\");\r\n    let newFavorites = '';\r\n\r\n    // Quem me curtiu\r\n    if (likesParams === 'Likers') {\r\n      let id = this.authService.getCurrentUser().memberId;\r\n      id = id.substring(id.length - 4);\r\n      params = params.append('filterByFormula', `IF(SEARCH('${id}',Favorites),1,0)>0`);\r\n    }\r\n    // Quem eu curti\r\n    else if (likesParams === 'Likees') {\r\n      let ids = favorites.split(',')\r\n      let search = '';\r\n\r\n      for (var i in ids) {\r\n        if (!ids[i]) continue;\r\n\r\n        search += `FIND(\"${ids[i]}\", MemberId) > 0,`;\r\n      }\r\n      search = `OR(${search.slice(0, -1)})`;\r\n      params = params.append('filterByFormula', search);\r\n    }\r\n    // Listas\r\n    else {\r\n      let gender = localStorage.getItem('gender') == 'Feminino' ? 'Masculino' : 'Feminino';\r\n      let uf = userParams?.uf ? userParams.uf : localStorage.getItem('uf');\r\n      let minAge = userParams?.minAge ? userParams.minAge : localStorage.getItem('minAge');\r\n      let maxAge = userParams?.maxAge ? userParams.maxAge : localStorage.getItem('maxAge');\r\n      params = params.append('filterByFormula', `AND({Gender}='${gender}',{County}='${uf}',{Age}>='${minAge}',{Age}<='${maxAge}',{Enabled}=1)`);\r\n    }\r\n    return this.http.get(API_PATH + 'Members',\r\n      {\r\n        headers: httpHeaders,\r\n        params\r\n      }).pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            paginatedResult.result = new Array();\r\n\r\n            for (var record of response.records) {\r\n              const memberId4 = record.id.substring(record.id.length - 4);\r\n              const isLiked = favorites.includes(memberId4);\r\n\r\n              if (likesParams === 'Likees') {\r\n                newFavorites += `${memberId4},`\r\n              }\r\n              let user: User = {\r\n                knownAs: record.fields.Name,\r\n                age: record.fields.Age,\r\n                id: record.fields.ID,\r\n                memberId: record.id,\r\n                userName: record.fields.Name,\r\n                photoUrl: record.fields.MainImage[0].url,\r\n                city: record.fields.City,\r\n                county: record.fields.UF,\r\n                isLiked: isLiked\r\n              };\r\n              paginatedResult.result.push(user);\r\n            }\r\n            if (likesParams === 'Likees' && favorites === newFavorites) {\r\n              localStorage.setItem(\"favorites\", newFavorites);\r\n              this.updateFavorites(newFavorites)\r\n                .then(obj => console.log(obj))\r\n                .catch(error => console.log(error));\r\n            }\r\n          }\r\n          paginatedResult.pagination = {\r\n            currentPage: page,\r\n            itemsPerPage: 6,\r\n            totalPages: paginatedResult.result.length / 6,\r\n            totalItems: paginatedResult.result.length\r\n          };\r\n          // this.cache.next(paginatedResult);\r\n          // return this.cache.getValue();  \r\n          return paginatedResult;        \r\n        })\r\n      );\r\n  }\r\n\r\n  getUserDetail(user: any): Observable<User> {\r\n    console.log(user.paramMap.get('id'));\r\n    return null;\r\n  }\r\n\r\n  getUser(id: number): Observable<User> {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n    let params = new HttpParams();\r\n    params = params.append('fields[]', 'ID');\r\n    params = params.append('fields[]', 'Name');\r\n    params = params.append('fields[]', 'Age');\r\n    params = params.append('fields[]', 'Email');\r\n    params = params.append('fields[]', 'Gender');\r\n    params = params.append('fields[]', 'CreateDate');\r\n    params = params.append('fields[]', 'LastAccess');\r\n    params = params.append('fields[]', 'City');\r\n    params = params.append('fields[]', 'County');\r\n    params = params.append('fields[]', 'UF');\r\n    params = params.append('fields[]', 'About');\r\n    params = params.append('fields[]', 'Seek');\r\n    params = params.append('fields[]', 'ActivitiesOfInterest2');\r\n    params = params.append('fields[]', 'OtherImages');\r\n    params = params.append('fields[]', 'ChristianTime');\r\n    params = params.append('fields[]', 'Church');\r\n    params = params.append('fields[]', 'Baptized');\r\n    params = params.append('fields[]', 'ConnectGroup');\r\n    params = params.append('fields[]', 'OtherCounty');\r\n    params = params.append('fields[]', 'OtherCountyMove');\r\n    params = params.append('fields[]', 'Height');\r\n    params = params.append('fields[]', 'MaritalStatus');\r\n    params = params.append('fields[]', 'Education');\r\n    params = params.append('fields[]', 'HaveKids');\r\n    params = params.append('fields[]', 'WantKids');\r\n    params = params.append('fields[]', 'ChurchAttendance');\r\n    params = params.append('fields[]', 'Relationship');\r\n    params = params.append('fields[]', 'ActivitiesOfInterest');\r\n    params = params.append('fields[]', 'RelatioshipWithKids');\r\n    params = params.append('fields[]', 'HolyFasting');\r\n    params = params.append('fields[]', 'HolyRelatioship');\r\n    params = params.append('fields[]', 'Smoke');\r\n    params = params.append('fields[]', 'DateOfBirth');\r\n    params = params.append('filterByFormula', `AND({ID}=${id})`);\r\n\r\n    const photosArray: Photo[] = [];\r\n    const favorites = localStorage.getItem(\"favorites\");\r\n\r\n    return this.http.get<User>(API_PATH + 'Members',\r\n      {\r\n        headers,\r\n        params\r\n      }).pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            let record = response.records[0].fields;\r\n\r\n            for (let i = 0; i < record.OtherImages.length; i++) {\r\n              const photo: Photo = {\r\n                id: 0, url: record.OtherImages[i].url, description: record.Name, dateAdded: new Date(), isApproved: true, isMain: true\r\n              };\r\n              photosArray.push(photo);\r\n            }\r\n            const memberId4 = response.records[0].id.substring(response.records[0].id.length - 4);\r\n            const isLiked = favorites.includes(memberId4);\r\n            const userId = localStorage.getItem(\"userId\");\r\n\r\n            let user: User = {\r\n              knownAs: record.Name,\r\n              age: record.Age,\r\n              id: record.ID,\r\n              memberId: response.records[0].id,\r\n              userName: record.Name,\r\n              email: record.Email,\r\n              gender: record.Gender,\r\n              created: record.CreateDate,\r\n              lastActive: record.LastAccess,\r\n              photoUrl: record.OtherImages[0].url,\r\n              city: record.City.trim(),\r\n              uf: record.UF,\r\n              county: record.County,\r\n              introduction: record.About,\r\n              lookingFor: record.Seek,\r\n              interests: record.ActivitiesOfInterest2?.toString().split(',').join(', '),\r\n              interestsArray: record.ActivitiesOfInterest2,\r\n              photos: photosArray,\r\n              isLiked: isLiked,\r\n              christianTime: record.ChristianTime,\r\n              church: record.Church,\r\n              baptized: record.Baptized,\r\n              connectGroup: record.ConnectGroup,\r\n              otherCounty: record.OtherCounty,\r\n              otherCountyMove: record.OtherCountyMove,\r\n              height: record.Height,\r\n              maritalStatus: record.MaritalStatus,\r\n              education: record.Education,\r\n              haveKids: record.HaveKids,\r\n              wantKids: record.WantKids,\r\n              churchAttendance: record.ChurchAttendance,\r\n              relationship: record.Relationship,\r\n              relatioshipWithKids: record.RelatioshipWithKids,\r\n              holyFasting: record.HolyFasting,\r\n              holyRelatioship: record.HolyRelatioship,\r\n              smoke: record.Smoke,\r\n              dateOfBirth: record.DateOfBirth,\r\n              isActiveUser: record.ID.toString() === userId\r\n            };\r\n            return user;\r\n          }\r\n          return null;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateFavorites(newFavorites: string) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    return this.http.patch<any>(API_PATH + 'Members/' + this.authService.getCurrentUser().memberId,\r\n      JSON.stringify({ \"fields\": { \"Favorites\": newFavorites }, \"typecast\": true }),\r\n      { headers: httpHeaders }).toPromise();\r\n  }\r\n\r\n  getLastChats(memberId: string, page?, itemsPerPage?, messageContainer?, recipientId?): Observable<PaginatedResult<Message[]>> {\r\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n    let params = new HttpParams();\r\n    params = params.append('sort%5B0%5D%5Bfield%5D', 'LastDate');\r\n    params = params.append('sort%5B0%5D%5Bdirection%5D', 'desc');\r\n\r\n    // It's not working with OR(AND)\r\n    if (recipientId)\r\n      var param = `AND(OR({Member1Id}='${recipientId}',{Member2Id}='${recipientId}'),OR({Member1Id}='${memberId}',{Member2Id}='${memberId}'))`;\r\n    else\r\n      var param = `OR({Member1Id}='${memberId}',{Member2Id}='${memberId}')`;\r\n\r\n    params = params.append('filterByFormula', `${param}`);\r\n\r\n    return this.http.get<Message[]>(API_PATH + 'LastChat', { headers, params }).pipe(\r\n      map((response: any) => {\r\n        if (response) {\r\n          const msgs: Message[] = [];\r\n\r\n          for (let i = 0; i < response.records.length; i++) {\r\n            let field = response.records[i].fields;\r\n\r\n            if (field.Member1Enabled && field.Member2Enabled) {\r\n              const msg: Message = {\r\n                id: 1,\r\n                senderId: memberId === field.Member1[0] ? field.Member2Id2[0] : field.Member1Id2[0],\r\n                senderKnownAs: memberId === field.Member1[0] ? field.Member2Name[0] : field.Member1Name[0],\r\n                senderPhotoUrl: memberId === field.Member1[0] ? field.Member2MainImage[0].url : field.Member1MainImage[0].url,\r\n                recipientId: memberId === field.Member1[0] ? field.Member1Id2[0] : field.Member2Id2[0],\r\n                recipientKnownAs: memberId === field.Member1[0] ? field.Member1Name[0] : field.Member2Name[0],\r\n                recipientPhotoUrl: memberId === field.Member1[0] ? field.Member1MainImage[0].url : field.Member2MainImage[0].url,\r\n                content: field.LastMessage,\r\n                isRead: true,\r\n                dateRead: new Date(),\r\n                messageSent: field.LastDate,\r\n                lastChatId: response.records[i].id\r\n              };\r\n              msgs.push(msg);\r\n            }\r\n          }\r\n          msgs.sort((a, b) => (a.messageSent > b.messageSent ? -1 : 1)); //Descending\r\n          // msgs.sort((a, b) => (a.messageSent < b.messageSent ? -1 : 1)); //Ascending\r\n          paginatedResult.result = msgs;\r\n          paginatedResult.pagination = {\r\n            currentPage: page,\r\n            itemsPerPage: 6,\r\n            totalPages: paginatedResult.result.length / 6,\r\n            totalItems: paginatedResult.result.length\r\n          };\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMessages(memberId: number, recipientId: number): Observable<Message[]> {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n    const msgs: Message[] = [];\r\n    let params = new HttpParams();\r\n    // params = params.append('sort%5B0%5D%5Bfield%5D', 'CreateDate');\r\n    // params = params.append('sort%5B0%5D%5Bdirection%5D', 'desc');\r\n    params = params.append('filterByFormula', `OR(AND({Member1Id}='${recipientId}',{Member2Id}='${memberId}'),AND({Member1Id}='${memberId}',{Member2Id}='${recipientId}'))`);\r\n\r\n    return this.http.get<Message[]>(API_PATH + 'Chats', { headers, params })\r\n      .pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            for (let i = 0; i < response.records.length; i++) {\r\n              let field = response.records[i].fields;\r\n\r\n              if (field.Member1Id && field.Member2Id) {\r\n                const msg: Message = {\r\n                  id: 1,\r\n                  senderId: field.Member1Id[0],\r\n                  senderKnownAs: field.Member1Name[0],\r\n                  senderPhotoUrl: field.Member1MainImage[0].url,\r\n                  recipientId: field.Member2Id[0],\r\n                  recipientKnownAs: field.Member2Name[0],\r\n                  recipientPhotoUrl: field.Member2MainImage[0].url,\r\n                  content: field.Message,\r\n                  isRead: true,\r\n                  dateRead: new Date(),\r\n                  messageSent: field.CreateDate,\r\n                  chatId: field.ChatId\r\n                };\r\n                msgs.push(msg);\r\n              }\r\n            }\r\n            msgs.sort((a, b) => (a.messageSent < b.messageSent ? -1 : 1));\r\n          }\r\n          return msgs;\r\n        })\r\n      );\r\n  }\r\n\r\n  addMessage(memberId: string, recipientId: string, message: string, messagesTotal: number) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    if (messagesTotal > 0) {\r\n      this.updateLastChat(memberId, recipientId, message);\r\n    }\r\n    else {\r\n      this.insertLastChat(memberId, recipientId, message)\r\n        .subscribe((data: any) => {\r\n          console.log('Sucess!');\r\n        }, error => {\r\n          console.log(error.error.message);\r\n        });\r\n    }\r\n    const body = JSON.stringify({ \"fields\": { \"Member1\": [`${memberId}`], \"Message\": `${message}`, \"Member2\": [`${recipientId}`], } });\r\n    return this.http.post(API_PATH + 'Chats/', body, { headers: httpHeaders })\r\n      .pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            const msg: Message = {\r\n              id: 1,\r\n              senderId: response.fields.Member1Id[0],\r\n              senderKnownAs: response.fields.Member1Name[0],\r\n              senderPhotoUrl: response.fields.Member1MainImage[0].url,\r\n              recipientId: response.fields.Member2Id[0],\r\n              recipientKnownAs: response.fields.Member2Name[0],\r\n              recipientPhotoUrl: response.fields.Member2MainImage[0].url,\r\n              content: response.fields.Message,\r\n              isRead: true,\r\n              dateRead: new Date(),\r\n              messageSent: response.fields.CreateDate,\r\n              chatId: response.fields.ChatId\r\n            };\r\n            return msg;\r\n          }\r\n        }\r\n        ));\r\n  }\r\n\r\n  updateLastChat(memberId: string, recipientId: string, message: string) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    this.getLastChats(memberId, null, null, null, recipientId)\r\n      .subscribe((data: PaginatedResult<Message[]>) => {\r\n        let lastChatId = data.result[0].lastChatId;\r\n\r\n        this.http.patch<any>(API_PATH + 'LastChat/' + lastChatId,\r\n          JSON.stringify({ \"fields\": { \"LastMessage\": `${message}` }, \"typecast\": true }),\r\n          { headers: httpHeaders }).toPromise();\r\n\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  insertLastChat(memberId: string, recipientId: string, message: string) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    const body = JSON.stringify({ \"fields\": { \"Member1\": [`${memberId}`], \"LastDate\": `${new Date()}`, \"LastMessage\": `${message}`, \"Member2\": [`${recipientId}`], } });\r\n    return this.http.post(API_PATH + 'LastChat', body, { headers: httpHeaders })\r\n      .pipe(map((response: any) => {\r\n        if (response) {\r\n          const id = response.id;\r\n        }\r\n      }));\r\n  }\r\n\r\n  deleteLastChat(message: Message) {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n\r\n    return this.http.delete(API_PATH + 'LastChat/' + message.lastChatId, { headers: headers })\r\n      .pipe(map((response: any) => {\r\n        if (response) {\r\n          const id = response.id;\r\n          return true;\r\n        }\r\n        return false;\r\n      }));\r\n  }\r\n\r\n  deleteChats(message: Message) {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n\r\n\r\n    // this.getMessages(message.senderId, message.recipientId)\r\n    //   .subscribe((messages: Message[]) => {\r\n\r\n    //     for (var i in messages) {\r\n    //       const chatId = messages[i].chatId;\r\n\r\n    //       this.http.delete(API_PATH + 'Chats/' + chatId, { headers: headers })\r\n    //         .pipe(map((response2: any) => {\r\n    //           if (response2) {\r\n    //             const id = response2.id;\r\n    //           }\r\n    //         }));\r\n    //     }\r\n    //     return true;\r\n    //   },\r\n    //     (error) => {\r\n    //       return false;\r\n    //     }\r\n    //   );\r\n    //   return false;\r\n    // return this.http.delete(API_PATH + 'Chats/' + 'recRqZwv7uzRWk52E', { headers: headers })\r\n    //   .pipe(map((response: any) => {\r\n    //     if (response) {\r\n    //       const id = response.id;\r\n    //       return true;\r\n    //     }\r\n    //     return false;\r\n    //   }));\r\n  }\r\n\r\n\r\n\r\n\r\n  saveLike(recipientMemberId: string, isLiked: boolean) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    const memberId4 = recipientMemberId.substring(recipientMemberId.length - 4);\r\n    const memberId = this.authService.getCurrentUser().memberId;\r\n\r\n    let favorites = localStorage.getItem(\"favorites\");\r\n\r\n    if (isLiked) {\r\n      favorites += `${memberId4},`;\r\n    }\r\n    else {\r\n      favorites = favorites.replace(`${memberId4},`, \"\");\r\n    }\r\n    localStorage.setItem(\"favorites\", favorites);\r\n\r\n    return this.http.patch<any>(API_PATH + 'Members/' + memberId,\r\n      JSON.stringify({ \"fields\": { \"Favorites\": favorites }, \"typecast\": true }),\r\n      { headers: httpHeaders });\r\n  }\r\n\r\n  deleteUser(memberId: string) {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n\r\n    return this.http.delete(API_PATH + 'Members/' + memberId, { headers: headers })\r\n      .pipe(map((response: any) => {\r\n        if (response) {\r\n          const id = response.id;\r\n          return true;\r\n        }\r\n        return false;\r\n      }));\r\n  }\r\n\r\n  updateUser(id: number, user: User) {\r\n    return this.http.put<User>(API_PATH + 'users/' + id, user);\r\n  }\r\n\r\n  setMainPhoto(userId: number, id: number) {\r\n    return this.http.post(API_PATH + 'users/' + userId + '/photos/' + id + '/setMain', {});\r\n  }\r\n\r\n  deletePhoto(userId: number, id: number) {\r\n    return this.http.delete(API_PATH + 'users/' + userId + '/photos/' + id);\r\n  }\r\n\r\n\r\n\r\n  markAsRead(userId: number, messageId: number) {\r\n    this.http.post(API_PATH + 'users/' + userId + '/message/' + messageId + '/read', {})\r\n      .subscribe();\r\n  }\r\n}\r\nfunction of(arg0: null): Observable<PaginatedResult<Message[]>> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/Auth.service';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  title = 'Varão Varoa App';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.username;//.getUsername();\n\n    // const user: User = JSON.parse(localStorage.getItem(\"user\"));\n    // if (user) {\n    //   this.authService.photoUrl.next(user.photoUrl);\n    // }\n  }\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n<ngx-spinner></ngx-spinner>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from 'ngx-gallery-9';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ValuesComponent } from './values/values.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { appRoutes } from './routes';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessageListResolver } from './_resolvers/message-list.resolver';\r\nimport { HasRoleDirective } from './_directives/hasRole.directive';\r\nimport { LOCALE_ID } from '@angular/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localePt from '@angular/common/locales/pt';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\nimport { MemberReloadComponent } from './member-reload/member-reload.component';\r\n\r\nregisterLocaleData(localePt);\r\n\r\nexport function tokenGetter() {\r\n      return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      ValuesComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      ListsComponent,\r\n      MessagesComponent,\r\n      MemberListComponent,\r\n      MemberCardComponent,\r\n      MemberDetailComponent,\r\n      MemberEditComponent,\r\n      PhotoEditorComponent,\r\n      MemberMessagesComponent,\r\n      HasRoleDirective,\r\n      ContactUsComponent,\r\n      MemberReloadComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      RouterModule,\r\n      BrowserAnimationsModule,\r\n      BsDropdownModule.forRoot(),\r\n      HttpClientModule,\r\n      ButtonsModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      JwtModule.forRoot({\r\n         config: {\r\n           tokenGetter: tokenGetter,\r\n           whitelistedDomains: ['localhost:5000'],\r\n           blacklistedRoutes: ['localhost:5000/api/auth'],\r\n         }\r\n       }),\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      TabsModule.forRoot(),\r\n      BsDatepickerModule.forRoot(),\r\n      TimeagoModule.forRoot(),\r\n      PaginationModule.forRoot(),\r\n      NgxGalleryModule,\r\n      FileUploadModule,\r\n      ModalModule.forRoot(),\r\n      NgxSpinnerModule\r\n   ],\r\n   providers: [\r\n      ErrorInterceptorProvider,\r\n      MemberListResolver,\r\n      MemberEditResolver,\r\n      MemberDetailResolver,\r\n      ListsResolver,\r\n      MessageListResolver,\r\n      { provide: LOCALE_ID, useValue: 'pt-BR' }\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","export class Constants {\n    public static GetDataError: string = \"Erro ao buscar dados, tente novamente depois!\";\n    public static SaveDataError: string = \"Erro ao salvar dados, tente novamente depois!\";\n\n    getShortId() {\n        // let id = localStorage.getItem(\"token2\");\n        // id = id.substring(id.length - 4);\n        // return id;\n    }\n}\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Contact } from '../_models/contact';\nimport { User } from '../_models/user';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { AuthService } from '../_services/Auth.service';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\nexport class ContactUsComponent implements OnInit {\n  contact: Contact;\n  currentUser: User;\n  registerForm: FormGroup;\n  colorTheme = 'theme-red';\n\n  constructor(private router: Router, private authService: AuthService, private alertify: AlertifyService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n    this.registerForm = this.fb.group({\n      name: [this.currentUser.knownAs, Validators.required],\n      email: [this.currentUser.email, Validators.email],\n      message: ['', Validators.required]\n    });\n  }\n\n  register() {\n    this.contact = Object.assign({}, this.registerForm.value);\n    this.contact.memberId = this.currentUser.memberId;\n    this.authService.contactUs(this.contact).subscribe(next => {\n      this.alertify.success('Contato enviado com Sucesso!');\n      this.registerForm.reset()\n    }, error => {\n      console.log(error);\n      this.alertify.error('Erro ao enviar contato! Envie pelo Insta @VaraoVaroa');\n    });\n  }\n}","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-8\">\n            <br>\n            <form [formGroup]=\"registerForm\" (submit)=\"register()\" autocomplete=\"off\">\n                <h2 class=\"text-center text-primary\">Fale Conosco</h2>\n                <hr />\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" \n                        [ngClass]=\"{'is-invalid': registerForm.get('name').errors && registerForm.get('name').touched }\"\n                        placeholder=\"Nome\" formControlName=\"name\" />\n                    <div class=\"invalid-feedback\">Informe seu Nome</div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" \n                        [ngClass]=\"{'is-invalid': registerForm.get('email').errors && registerForm.get('email').touched }\"\n                        placeholder=\"Email\" formControlName=\"email\" />\n                    <div class=\"invalid-feedback\">Informe um Email válido</div>\n                </div>\n                <div class=\"form-group\">\n                    <textarea placeholder=\"Mensagem\" formControlName=\"message\" rows=\"5\" class=\"form-control\"\n                        [ngClass]=\"{'is-invalid': registerForm.get('message').errors && registerForm.get('message').touched }\"></textarea>\n                    <div class=\"invalid-feedback\"\n                        *ngIf=\"registerForm.get('message').hasError('required') && registerForm.get('message').touched\">\n                        Informe uma Mensagem</div>\n                    <div class=\"invalid-feedback\"\n                        *ngIf=\"registerForm.get('message').hasError('minlength') && registerForm.get('message').touched\">\n                        Informe uma Mensagem com pelo menos 10 caracteres</div>\n                </div>\n                <div class=\"form-group text-center\">\n                    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\">Enviar</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CREATE_FORM, environment } from 'src/environments/environment';\r\nimport { AuthService } from '../_services/Auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  showHideRegister: boolean;\r\n  createUrl: SafeResourceUrl;\r\n  loading: boolean;\r\n  version: string = environment.appVersion;\r\n  year: number = new Date().getFullYear();\r\n  \r\n  constructor(public authService: AuthService, private router: Router, private spinner: NgxSpinnerService, private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit() {\r\n    //TODO Não esta acionando o Spinner\r\n    this.createUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`https://airtable.com/embed/${CREATE_FORM}`);\r\n  }\r\n\r\n  hideSpinner() {\r\n    // this.spinner.hide();\r\n    this.loading = false;\r\n  }\r\n\r\n  loggedIn() {\r\n    var isLogged = this.authService.loggedIn();\r\n    return isLogged;\r\n  }\r\n\r\n  toggleRegister() {\r\n    this.showHideRegister = !this.showHideRegister;\r\n    // this.spinner.show();\r\n    if (this.showHideRegister) this.loading = true;\r\n  }\r\n\r\n  toggleLists() {\r\n    this.router.navigate(['/members']);\r\n  }\r\n}\r\n","<div class=\"container mt-5\" *ngIf=\"loggedIn(); then loggedInTemplate else loggedOutTemplate\"></div>\r\n\r\n<ng-template #loggedInTemplate>\r\n  <div style=\"text-align:center\">\r\n    <br />\r\n    <h1>Encontre seu Varão / Varoa</h1>\r\n    <p class=\"lead\">Navegue na Listas de Cristãos, filtre por idade e UF!</p>\r\n    <div class=\"text-center\">\r\n      <button class=\"btn btn-info btn-lg mr-2\" (click)=\"toggleLists()\">Vamos lá!</button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #loggedOutTemplate>\r\n  <div style=\"text-align:center\" *ngIf=\"!showHideRegister\">\r\n    <br />\r\n    <h1>Encontre seu Varão / Varoa</h1>\r\n    <p class=\"lead\">Tudo que você precisa é se cadastrar ou efetuar seu login!</p>\r\n    <div class=\"text-center\">\r\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"toggleRegister()\">Quero me cadastrar!</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"text-align:center\" *ngIf=\"loading\">\r\n    <br />\r\n    <h3>Aguarde! Carregando Formulário...</h3>    \r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-8\" *ngIf=\"showHideRegister\">        \r\n        <iframe (load)=\"hideSpinner()\" class=\"airtable-embed\" [src]=\"createUrl\" frameborder=\"0\" onmousewheel=\"\"\r\n          width=\"100%\" height=\"533\"></iframe>\r\n        <!-- <app-register (emitCancelRegister)=\"toggleRegister()\"></app-register> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"footer\">\r\n  © {{year}} Varão Varoa. Todos os direitos reservados - Versão {{version}}&nbsp;&nbsp;&nbsp;\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PaginatedResult, Pagination } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\n\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string = 'Likers';\n\n  constructor(private userService: UserService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((response: PaginatedResult<User[]>) => {\n        this.users = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n}","<div class=\"text-center mt-3\">\r\n  <h2>{{likesParam === 'Likers' ? 'Quem me curtiu!' : 'Quem eu curti!'}} : {{pagination.totalItems}}</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <div class=\"row\">\r\n    <div class=\"btn-group\">\r\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\" (click)=\"loadUsers()\">\r\n        Quem me curtiu!</button>\r\n      <button class=\"btn btn-info\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\" (click)=\"loadUsers()\">\r\n        Quem eu curti!</button>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"row\">\r\n    <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\r\n      <app-member-card [user]=\"user\"></app-member-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"d-flex justify-content-center\" *ngIf=\"pagination.totalItems > 0\">\r\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\" lastText=\"&raquo;\"></pagination>\r\n</div> -->\r\n\r\n<div style=\"position: absolute; left: 50%; top: 50%;\" *ngIf=\"pagination.totalItems === 0\">\r\n  <div class=\"alert alert-info\" role=\"alert\" style=\"position: relative; left: -50%;\">\r\n    <p><i class=\"fa fa-bell\"></i>\r\n      {{likesParam === 'Likers'\r\n        ? 'Você ainda não recebeu uma curtida, navegue nas listas de Cristãos e entre em contato!'\r\n        : 'Você ainda não curtiu ninguém, veja quem te curtiu ou navegue nas listas de Cristãos!'}}</p>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { AuthService } from '../_services/Auth.service';\n\n@Component({\n  selector: 'app-member-reload',\n  templateUrl: './member-reload.component.html',\n  styleUrls: ['./member-reload.component.css']\n})\nexport class MemberReloadComponent implements OnInit {\n\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.loginAirtable(null).subscribe(next => {\n      this.alertify.success('Dados atualizados e carregados com Sucesso!');\n      this.router.navigate(['/home']);\n    }, error => {\n      this.alertify.error('Falha ao carregar seus dados!');\n    });\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() user: User;\r\n\r\n  constructor(private userService: UserService, private alertifyService: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  sendLike() {\r\n    this.userService.saveLike(this.user.memberId, true).subscribe(response => {\r\n      this.alertifyService.success('Você curtiu ' + this.user.knownAs);\r\n      this.user.isLiked = true;\r\n    }, error => {\r\n      this.alertifyService.error('Erro ao curtir, tente novamente mais tarde!', error);\r\n    });\r\n  }\r\n\r\n  sendDislike() {\r\n    this.alertifyService.confirm('Descurtir?',`Deseja mesmo descurtir ${this.user.knownAs} ?`, () => {\r\n      this.userService.saveLike(this.user.memberId, false).subscribe(response => {\r\n        this.alertifyService.success('Você descurtiu ' + this.user.knownAs);\r\n        this.user.isLiked = false;\r\n      }, error => {\r\n        this.alertifyService.error('Erro ao descurtir, tente novamente mais tarde!', error);\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"card mb-4\">\r\n  <div class=\"card-img-wrapper\">\r\n    <a [routerLink]=\"['/members', user.id]\" routerLinkActive=\"router-link-active\" title=\"Clique para abrir o Perfil!\"\r\n      >\r\n      <img src=\"{{ user.photoUrl || '../../../assets/user.png' }}\" alt=\"...\" class=\"card-img-top\" />\r\n    </a>\r\n\r\n    <button class=\"btn btn-danger member-icon\" *ngIf=\"user.isLiked\" (click)=\"sendDislike()\"\r\n      title=\"Clique para Descurtir!\"><i class=\"fa fa-heart\"></i></button>\r\n\r\n    <ul class=\"list-inline member-icons animate text-center\">\r\n      <li class=\"list-inline-item\">\r\n        <a class=\"btn btn-primary\" [routerLink]=\"['/members', user.id]\" routerLinkActive=\"router-link-active\"\r\n          title=\"Clique para abrir o Perfil!\" >\r\n          <i class=\"fa fa-user\"></i>\r\n        </a>\r\n      </li>\r\n      <li class=\"list-inline-item\" *ngIf=\"!user.isLiked\">\r\n        <button class=\"btn btn-primary\" (click)=\"sendLike()\" title=\"Clique para abrir Curtir!\">\r\n          <i class=\"fa fa-heart\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button class=\"btn btn-primary\" [routerLink]=\"['/members', user.id]\" [queryParams]=\"{ tab: 3 }\"\r\n          title=\"Clique para enviar uma Mensagem!\">\r\n          <i class=\"fa fa-envelope\"></i>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n\r\n  </div>\r\n  <div class=\"card-body p-1\">\r\n    <h6 class=\"card-title text-center mb-1\">\r\n      {{ user.knownAs }}, {{ user.age }}\r\n    </h6>\r\n    <p class=\"card-text text-muted text-center\">\r\n      {{ user.city }} - {{ user.county }}\r\n    </p>\r\n  </div>\r\n</div>","import { EDIT_FORM, MAIN_IMAGE, OTHER_IMAGES } from './../../../environments/environment';\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { TabsetComponent } from \"ngx-bootstrap/tabs/public_api\";\r\nimport {\r\n  NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions\r\n} from \"ngx-gallery-9\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { User } from \"src/app/_models/user\";\r\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\r\nimport { UserService } from \"src/app/_services/user.service\";\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: \"app-member-detail\",\r\n  templateUrl: \"./member-detail.component.html\",\r\n  styleUrls: [\"./member-detail.component.css\"],\r\n})\r\nexport class MemberDetailComponent implements OnInit {\r\n  user: User;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  @ViewChild(\"memberTabs\", { static: true }) memberTabs: TabsetComponent;\r\n  messageTabVav: boolean;\r\n  editProfile: boolean;\r\n  loading: boolean;\r\n  editUrl: SafeResourceUrl;\r\n  fields: string;\r\n\r\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\r\n    private route: ActivatedRoute, private router: Router, private spinner: NgxSpinnerService, private sanitizer: DomSanitizer) { }\r\n\r\n    ngOnInit() {    \r\n    this.route.data.subscribe((data) => {\r\n      this.user = data[\"user\"];\r\n\r\n      if (this.user.isActiveUser) {\r\n        this.fields = `?prefill_MemberIdToUpdate=${this.user.memberId}` +\r\n          `&prefill_Name=${this.user.knownAs}` +\r\n          `&prefill_DateOfBirth=${this.user.dateOfBirth}` +\r\n          `&prefill_County=${this.user.county}` +\r\n          `&prefill_City=${this.user.city}` +\r\n          `&prefill_About=${this.user.introduction}` +\r\n          `&prefill_Seek=${this.user.lookingFor}` +\r\n          `&prefill_ChristianTime=${this.user.christianTime}` +\r\n          `&prefill_Church=${this.user.church}` +\r\n          `&prefill_ConnectGroup=${this.user.connectGroup}` +\r\n          `&prefill_Baptized=${this.user.baptized}` +\r\n          `&prefill_OtherCounty=${this.user.otherCounty}` +\r\n          `&prefill_Height=${this.user.height}` +\r\n          `&prefill_MaritalStatus=${this.user.maritalStatus}` +\r\n          `&prefill_Education=${this.user.education}` +\r\n          `&prefill_HaveKids=${this.user.haveKids}` +\r\n          `&prefill_WantKids=${this.user.wantKids}` +\r\n          `&prefill_ChurchAttendance=${this.user.churchAttendance}` +\r\n          `&prefill_Relationship=${this.user.relationship}` +\r\n          `&prefill_ActivitiesOfInterest2=${this.user.interestsArray}` +\r\n          `&prefill_RelatioshipWithKids=${this.user.relatioshipWithKids}` +\r\n          `&prefill_HolyFasting=${this.user.holyFasting}` +\r\n          `&prefill_HolyRelatioship=${this.user.holyRelatioship}` +\r\n          `&prefill_Smoke=${this.user.smoke}` +\r\n          `&prefill_OtherCountyMove=${this.user.otherCountyMove}` +\r\n          `&prefill_Sexo=${this.user.gender}`;\r\n      }\r\n      this.galleryOptions = [\r\n        {\r\n          width: \"400px\",\r\n          height: \"400px\",\r\n          thumbnailsColumns: 4,\r\n          imageAnimation: NgxGalleryAnimation.Slide,\r\n        },\r\n        {\r\n          breakpoint: 800,\r\n          width: \"100%\",\r\n          height: \"600px\",\r\n          imagePercent: 80,\r\n          thumbnailsPercent: 20,\r\n          thumbnailsMargin: 20,\r\n          thumbnailMargin: 20,\r\n        },\r\n        {\r\n          breakpoint: 400,\r\n          preview: false,\r\n        },\r\n      ];\r\n      this.galleryImages = this.getImages();\r\n    });\r\n    this.route.queryParams.subscribe((params) => {\r\n      const selectedTab = params[\"tab\"];\r\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\r\n    });\r\n  }  \r\n\r\n  sendLike() {\r\n    this.userService.saveLike(this.user.memberId, true).subscribe(response => {\r\n      this.alertifyService.success('Você curtiu ' + this.user.knownAs);\r\n      this.user.isLiked = true;\r\n    }, error => {\r\n      this.alertifyService.error('Erro ao curtir, tente novamente mais tarde!', error);\r\n    });\r\n  }\r\n\r\n  sendDislike() {\r\n    this.alertifyService.confirm('Descurtir?', `Deseja mesmo descurtir ${this.user.knownAs} ?`, () => {\r\n      this.userService.saveLike(this.user.memberId, false).subscribe(response => {\r\n        this.alertifyService.success('Você descurtiu ' + this.user.knownAs);\r\n        this.user.isLiked = false;\r\n      }, error => {\r\n        this.alertifyService.error('Erro ao descurtir, tente novamente mais tarde!', error);\r\n      });\r\n    });\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  getImages() {\r\n    const images = [];\r\n    for (const photo of this.user.photos) {\r\n      if (photo.isApproved) {\r\n        images.push({\r\n          small: photo.url,\r\n          medium: photo.url,\r\n          big: photo.url,\r\n          description: photo.description,\r\n        });\r\n      }\r\n    }\r\n    return images;\r\n  }\r\n  //TODO Continue here\r\n  deleteUser() {\r\n    this.alertifyService.confirm('Deletar?', `Deseja mesmo deletar o seu Perfil? Não prefere apenas desativar e esconder ele? Clique em OK para deletar!`, () => {\r\n      this.userService.deleteUser(this.user.memberId).subscribe(response => {\r\n        this.alertifyService.success('Seu Perfil foi deletado do sistema com sucesso!');\r\n        localStorage.removeItem('currentUser');\r\n        this.router.navigate(['/home']);\r\n      }, error => {\r\n        this.alertifyService.error('Erro ao deletar, tente novamente mais tarde!', error);\r\n      });\r\n    });\r\n  }\r\n\r\n  //TODO Continue here\r\n  disableUser() {\r\n    this.alertifyService.confirm('Desativar?', `Deseja mesmo desativar e esconder o seu Perfil?`, () => {\r\n      this.userService.deleteUser(this.user.memberId).subscribe(response => {\r\n        this.alertifyService.success('Seu Perfil foi desativado do sistema com sucesso!');\r\n        this.router.navigate(['/home']);\r\n      }, error => {\r\n        this.alertifyService.error('Erro ao deletar, tente novamente mais tarde!', error);\r\n      });\r\n    });\r\n  }\r\n\r\n  editUser() {\r\n    this.editProfile = !this.editProfile;\r\n\r\n    if (this.editProfile) {\r\n      this.editUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`https://airtable.com/embed/${EDIT_FORM}${this.fields}`);\r\n      this.loading = true;\r\n      // this.spinner.show();      \r\n    }\r\n  }\r\n\r\n  editMainImage() {\r\n    this.editProfile = !this.editProfile;\r\n\r\n    if (this.editProfile) {\r\n      this.editUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`https://airtable.com/embed/${MAIN_IMAGE}?prefill_MemberIdToUpdate=${this.user.memberId}`);\r\n      this.loading = true;\r\n      // this.spinner.show();      \r\n    }\r\n  }\r\n\r\n  editOtherImages() {\r\n    this.editProfile = !this.editProfile;\r\n\r\n    if (this.editProfile) {\r\n      this.editUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`https://airtable.com/embed/${OTHER_IMAGES}?prefill_MemberIdToUpdate=${this.user.memberId}`);\r\n      this.loading = true;\r\n      // this.spinner.show();      \r\n    }\r\n  }\r\n\r\n  hideSpinner() {\r\n    this.loading = false;\r\n    // this.spinner.hide();\r\n  }\r\n}","<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\" style=\"text-align: center\">\r\n      <h2>{{ user.knownAs }} | {{ user.age }} anos</h2>\r\n    </div>\r\n    <div class=\"col-sm-2\">\r\n      <button class=\"btn btn-info w-100\" onclick=\"history.back()\"><i class=\"fa fa-arrow-left\"></i> Voltar</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n\r\n        <img class=\"card-img-top img-thumbnail\" src=\"{{ user.photoUrl || '../../../assets/user.png' }}\"\r\n          alt=\"{{ user.knownAs }}\" style=\"cursor: pointer;\" (click)=\"selectTab(2)\" />\r\n\r\n        <button class=\"btn btn-danger member-icon\" *ngIf=\"user.isLiked\" (click)=\"sendDislike()\"\r\n          title=\"Clique para Descurtir!\"><i class=\"fa fa-heart\"></i></button>\r\n\r\n        <div class=\"card-body\">\r\n          <div>\r\n            <strong><i class=\"fa fa-map-pin\"></i> Localização:</strong>\r\n            <a href=\"https://www.google.com/maps/place/{{ user.city }}, {{ user.uf }}\" target=\"_blank\"\r\n              title=\"Clique para ver no Mapa!\">\r\n              <p>{{ user.city }}, {{ user.uf }}</p>\r\n            </a>\r\n          </div>\r\n          <!-- <div>\r\n            <strong>Último Acesso:</strong>\r\n            <p>{{user.lastActive | timeago}}</p>\r\n          </div> -->\r\n          <div>\r\n            <strong><i class=\"fa fa-calendar\"></i> Membro Desde:</strong>\r\n            <p>{{ user.created | date: \"mediumDate\" }}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n\r\n          <!-- Other User -->\r\n          <div class=\"btn-group d-flex\" *ngIf=\"!user.isActiveUser\">\r\n            <button class=\"btn btn-primary w-100\" *ngIf=\"!user.isLiked\" (click)=\"sendLike()\"><i class=\"fa fa-heart\"></i>\r\n              Curtir</button>\r\n            <button class=\"btn btn-primary w-100\" *ngIf=\"user.isLiked\" (click)=\"sendDislike()\"><i\r\n                class=\"fa fa-rotate-left\"></i> Descurtir</button>\r\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">\r\n              <i class=\"fa fa-comment\"></i> Mensagem\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Your Profile -->\r\n          <div class=\"btn-group d-flex\" *ngIf=\"user.isActiveUser\">\r\n            <!-- <button class=\"btn btn-danger w-100\" (click)=\"deleteUser()\"><i class=\"fa fa-trash\"></i>\r\n              Deletar</button>\r\n            <button class=\"btn btn-primary w-100\" (click)=\"disableUser()\"><i class=\"fa fa-exclamation\"></i>\r\n              Desativar</button> -->\r\n            <button class=\"btn btn-info w-100\" (click)=\"editUser()\">Editar Dados do Perfil</button>\r\n            <button class=\"btn btn-primary w-100\" (click)=\"editMainImage()\">Editar Foto Principal</button>\r\n            <button class=\"btn btn-success w-100\" (click)=\"editOtherImages()\">Editar Demais Fotos</button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <p *ngIf=\"loading\"><strong>Aguarde! Carregando dados...</strong></p>\r\n\r\n      <div class=\"tab-panel\" *ngIf=\"editProfile\">\r\n        <iframe (load)=\"hideSpinner()\" class=\"airtable-embed\" [src]=\"editUrl\" frameborder=\"0\" onmousewheel=\"\"\r\n          width=\"100%\" height=\"533\"></iframe>\r\n      </div>\r\n\r\n      <!-- *ngIf=\"!editProfile\" -->\r\n      <div class=\"tab-panel\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n\r\n          <tab heading=\"Sobre {{ user?.knownAs }}\">\r\n\r\n            <strong><i class=\"fa fa-address-book\"></i> Sobre mim:</strong>\r\n            <p>{{ user.introduction }}</p>\r\n\r\n            <strong *ngIf=\"user.lookingFor\"><i class=\"fa fa-eye\"></i> O que busco:</strong>\r\n            <p>{{ user.lookingFor }}</p>\r\n\r\n            <strong *ngIf=\"user.church\"><i class=\"fa fa-building\"></i> Igreja que frequenta:</strong>\r\n            <p>{{ user.church }}</p>\r\n\r\n            <strong *ngIf=\"user.christianTime\"><i class=\"fa fa-calendar\"></i> Tempo de Cristã(o):</strong>\r\n            <p>{{ user.christianTime }}</p>\r\n\r\n            <strong *ngIf=\"user.interestsArray\"><i class=\"fa fa-thumbs-up\"></i> Interesses:</strong>\r\n            <p>\r\n              <span class=\"badge rounded-pill bg-primary interests\" *ngFor=\"let interest of user.interestsArray\">{{\r\n                interest }}</span>\r\n            </p>\r\n          </tab>\r\n\r\n          <tab heading=\"Perguntas\">\r\n            <strong>Perguntas e Respostas:</strong>\r\n            <br><br>\r\n            <ul>\r\n              <li *ngIf=\"user.relationship\"><strong>Tipo de Relacionamento?</strong> {{ user.relationship }}</li>\r\n              <li *ngIf=\"user.height\"><strong>Qual a sua altura?</strong> {{ user.height }}</li>\r\n              <li *ngIf=\"user.maritalStatus\"><strong>Estado civil?</strong> {{ user.maritalStatus }}</li>\r\n              <li *ngIf=\"user.education\"><strong>Nível escolar?</strong> {{ user.education }}</li>\r\n              <li *ngIf=\"user.haveKids\"><strong>Tem filhos?</strong> {{ user.haveKids }}</li>\r\n              <li *ngIf=\"user.wantKids\"><strong>Gostaria de ter filhos?</strong> {{ user.wantKids }}</li>\r\n              <li *ngIf=\"user.baptized\"><strong>É Batizada(o) nas águas?</strong> {{ user.baptized }}</li>\r\n              <li *ngIf=\"user.connectGroup\"><strong>Frequenta algum grupo na Igreja?</strong> {{ user.connectGroup }}\r\n              </li>\r\n              <li *ngIf=\"user.churchAttendance\"><strong>Frequência na Igreja?</strong> {{ user.churchAttendance }}</li>\r\n              <li *ngIf=\"user.otherCounty\"><strong>Aceita Cristãos de outros Estados?</strong> {{ user.otherCounty }}\r\n              </li>\r\n              <li *ngIf=\"user.otherCountyMove\"><strong>Caso o namoro vire casamento, você aceitaria se mudar?</strong>\r\n                {{\r\n                user.otherCountyMove }}</li>\r\n              <li *ngIf=\"user.relatioshipWithKids\"><strong>Aceita se relacionar com alguém que tem filhos?</strong> {{\r\n                user.relatioshipWithKids }}</li>\r\n              <li *ngIf=\"user.holyFasting\"><strong>Você tem o hábito de fazer Jejum Santo com propósitos?</strong> {{\r\n                user.holyFasting }}\r\n              </li>\r\n              <li *ngIf=\"user.holyRelatioship\"><strong>Em caso de namoro, você aceitaria um Namoro Santo?</strong> {{\r\n                user.holyRelatioship }}</li>\r\n              <li *ngIf=\"user.smoke\"><strong>Você fuma?</strong> {{ user.smoke }}</li>\r\n            </ul>\r\n          </tab>\r\n\r\n          <tab heading=\"Fotos\">\r\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\r\n          </tab>\r\n\r\n          <tab heading=\"Mensagens\">\r\n            <app-member-messages *ngIf=\"!user.isActiveUser\" [recipientId]=\"user.id\" [recipientUser]=\"user\">\r\n            </app-member-messages>\r\n            <div class=\"alert alert-info\" *ngIf=\"user.isActiveUser\">\r\n              <strong>Todas as mensagens enviadas e recebidas estão no Menu Mensagens\r\n                acima!</strong>\r\n            </div>\r\n          </tab>\r\n\r\n        </tabset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild, HostListener } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { User } from \"src/app/_models/user\";\r\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { UserService } from \"src/app/_services/user.service\";\r\nimport { AuthService } from \"src/app/_services/Auth.service\";\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-member-edit\",\r\n  templateUrl: \"./member-edit.component.html\",\r\n  styleUrls: [\"./member-edit.component.css\"],\r\n})\r\n\r\nexport class MemberEditComponent implements OnInit {\r\n  user: User;\r\n  photoUrl: string;\r\n  // @ViewChild(\"editForm\", { static: true }) editForm: NgForm;\r\n  // @HostListener(\"window:beforeunload\", [\"$event\"])\r\n  // bsConfig: Partial<BsDatepickerConfig>;\r\n  // ufList = [\r\n  //   \"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Distrito Federal\", \"Espírito Santo\", \"Goiás\", \"Maranhão\",\r\n  //   \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\",\r\n  //   \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"\r\n  // ];\r\n\r\n  unloadNotification($event: any) {\r\n    // if (this.editForm.dirty) {\r\n    //   $event.returnValue = true;\r\n    // }\r\n  }\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private alertify: AlertifyService, private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe((data) => {\r\n      this.user = data[\"user\"];\r\n      \r\n    });    \r\n  }\r\n\r\n  hideSpinner() {\r\n    this.spinner.hide();\r\n  }\r\n\r\n  updateUser() {\r\n    // const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\r\n    // this.userService\r\n    //   .updateUser(id, this.user)\r\n    //   .subscribe(\r\n    //     (response) => {\r\n    //       this.alertify.success(\"Perfil atualizado com sucesso!\");\r\n    //       this.editForm.reset(this.user);\r\n    //     },\r\n    //     (error) => {\r\n    //       this.alertify.error(error);\r\n    //     }\r\n    //   );\r\n  }\r\n}\r\n","<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <h1>Seu Perfil</h1>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <!-- <div class=\"alert alert-info\" role=\"alert\" *ngIf=\"editForm.dirty\">\r\n        <strong>Atenção:</strong> Você fez alterações! Qualquer alteração será perdida!\r\n      </div> -->\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n        <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\"\r\n          alt=\"{{user.knownAs}}\">\r\n\r\n        <div class=\"card-body\">\r\n          <div class=\"form-group\">\r\n            <!-- <input bsDatepicker [bsConfig]=\"bsConfig\" class=\"form-control\"\r\n              placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" > -->\r\n            <!-- <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div> -->\r\n          </div>\r\n          <!-- <div>\r\n            <strong>Localização:</strong>\r\n            <p>{{user.city}}, {{user.county}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Idade:</strong>\r\n            <p>{{user.age}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Último Acesso:</strong>\r\n            <p>{{user.lastActive | timeago}}</p>\r\n          </div> -->\r\n          <div>\r\n            <strong>Membro Desde:</strong>\r\n            <p>{{user.created | date: 'mediumDate'}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <!-- <button class=\"btn btn-success btn-block\" form=\"editForm\" [disabled]=\"!editForm.dirty\">Salvar</button> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"tab-panel\">\r\n\r\n        <!-- <iframe (load)=\"hideSpinner()\" class=\"airtable-embed\" src=\"https://airtable.com/embed/shrUgIWgKqFDTNznH?backgroundColor=purple\" \r\n        frameborder=\"0\" onmousewheel=\"\" width=\"100%\" height=\"533\"></iframe> -->\r\n\r\n        <!-- <tabset class=\"member-tabset\">\r\n          <tab heading=\"Editar Perfil\">\r\n\r\n            <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\r\n\r\n              <h5><i class=\"fa fa-address-book\"></i> Sobre você:</h5>\r\n              <textarea name=\"introduction\" cols=\"30\" rows=\"5\" class=\"form-control\"\r\n                [(ngModel)]=\"user.introduction\"></textarea>\r\n\r\n              <br>\r\n              <h5><i class=\"fa fa-eye\"></i> O que busca:</h5>\r\n              <textarea name=\"lookingFor\" cols=\"30\" rows=\"5\" class=\"form-control\"\r\n                [(ngModel)]=\"user.lookingFor\"></textarea>\r\n\r\n              <h5>Interesses:</h5>\r\n              <textarea name=\"interests\" cols=\"30\" rows=\"6\" class=\"form-control\"\r\n                [(ngModel)]=\"user.interests\"></textarea>\r\n\r\n              <br>\r\n              <h5><i class=\"fa fa-map-pin\"></i> Localização:</h5>\r\n              <div class=\"form-inline\">\r\n                <label for=\"city\">Cidade:</label>\r\n                &nbsp;<input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"user.city\">&nbsp;\r\n                <label for=\"country\">Estado (UF): </label>\r\n                &nbsp;\r\n                <select class=\"form-control ml-1\" style=\"width: 180px\" id=\"county\" name=\"county\"\r\n                  [(ngModel)]=\"user.county\" required>\r\n                  <option disabled [ngValue]=\"undefined\">Selecione o UF</option>\r\n                  <option *ngFor=\"let uf of ufList\" [ngValue]=\"user.county\">{{ uf }}</option>\r\n                </select>                \r\n              </div>\r\n\r\n            </form>\r\n\r\n          </tab>\r\n          <tab heading=\"Editar Fotos\">\r\n            <app-photo-editor [photos]=\"user.photos\"></app-photo-editor>\r\n          </tab>\r\n        </tabset> -->\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { UserService } from \"src/app/_services/user.service\";\r\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\r\nimport { User } from \"src/app/_models/user\";\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from \"@angular/router\";\r\nimport { Pagination, PaginatedResult } from \"src/app/_models/pagination\";\r\n\r\n@Component({\r\n  selector: \"app-member-list\",\r\n  templateUrl: \"./member-list.component.html\",\r\n  styleUrls: [\"./member-list.component.css\"],\r\n})\r\n\r\nexport class MemberListComponent implements OnInit {\r\n  // export class MemberListComponent implements OnInit, RouteReuseStrategy {\r\n  // private storedRoutes = new Map<string, DetachedRouteHandle>();\r\n\r\n  // shouldDetach(route: ActivatedRouteSnapshot): boolean {\r\n  //   return route.routeConfig.path === 'list';\r\n  // }\r\n\r\n  // store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\r\n  //   this.storedRoutes.set(route.routeConfig.path, handle);\r\n  // }\r\n\r\n  // shouldAttach(route: ActivatedRouteSnapshot): boolean {\r\n  //   return !!route.routeConfig && !!this.storedRoutes.get(route.routeConfig.path);\r\n  // }\r\n\r\n  // retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\r\n  //   return this.storedRoutes.get(route.routeConfig.path);\r\n  // }\r\n\r\n  // shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\r\n  //   return future.routeConfig === curr.routeConfig;\r\n  // }  \r\n  users: User[];\r\n  user: User = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  genderList = [\r\n    { value: \"masculino\", display: \"Masculino\" },\r\n    { value: \"feminino\", display: \"Feminino\" },\r\n  ];\r\n  ufList = [\r\n    \"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Distrito Federal\", \"Espírito Santo\", \"Goiás\", \"Maranhão\",\r\n    \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\",\r\n    \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"\r\n  ];\r\n  userParams: any = {};\r\n  pagination: Pagination;\r\n  page: number;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe((data) => {\r\n    this.users = data[\"users\"].result;\r\n    this.pagination = data[\"users\"].pagination;\r\n      \r\n    this.userParams.minAge = localStorage.getItem('minAge') ?? 18;\r\n    this.userParams.maxAge = localStorage.getItem('maxAge') ?? 99;\r\n    this.userParams.uf = localStorage.getItem('uf') ?? 'Acre';\r\n    this.userParams.orderBy = 'lastActive';\r\n    });    \r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService\r\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\r\n      .subscribe((response: PaginatedResult<User[]>) => {\r\n        this.users = response.result;\r\n        this.pagination = response.pagination;\r\n      });\r\n      if (this.userParams.minAge) localStorage.setItem('minAge', this.userParams.minAge);\r\n      if (this.userParams.maxAge) localStorage.setItem('maxAge', this.userParams.maxAge);\r\n      if (this.userParams.uf) localStorage.setItem('uf', this.userParams.uf);\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams.uf = 'Santa Catarina'; //TODO Todos depois que acertar a paginação\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.loadUsers();\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\n  <h2>Resultados - {{ pagination.totalItems }} encontrado(s)</h2>\n  {{ userParams.OrderBy }}\n</div>\n\n<div class=\"container mt-3\">\n  <form #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" class=\"form-inline\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Idade De:</label>\n      <input type=\"number\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.minAge\" style=\"width: 70px\" id=\"minAge\"\n        name=\"minAge\" />\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Idade Até:</label>\n      <input type=\"number\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.maxAge\" style=\"width: 70px\" id=\"maxAge\"\n        name=\"maxAge\" />\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Estado (UF): </label>\n      <select class=\"form-control ml-1\" style=\"width: 180px\" id=\"uf\" name=\"uf\" [(ngModel)]=\"userParams.uf\" required>\n        <option disabled [ngValue]=\"undefined\">Selecione o UF</option>\n        <option *ngFor=\"let uf of ufList\" [ngValue]=\"uf\" >{{ uf }}</option>\n      </select>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-info\" style=\"margin-left: 10px\">\n      Aplicar Filtros\n    </button>\n    <!-- <button type=\"button\" class=\"btn btn-info\" style=\"margin-left: 10px\" (click)=\"resetFilters()\">\n      Resetar Filtros\n    </button> -->\n\n    <!-- <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" btnRadio=\"lastActive\"\n          [(ngModel)]=\"userParams.orderBy\">\n          Último Acesso\n        </button>\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" btnRadio=\"created\"\n          [(ngModel)]=\"userParams.orderBy\">\n          Novos Membros\n        </button>\n      </div>\n    </div> -->\n  </form>\n  <br />\n\n  <div class=\"row\">\n    <div class=\"col-lg-2 col-md-3 col-sm-6 inline\" *ngFor=\"let item of users\">\n      <app-member-card [user]=\"item\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\"\n    firstText=\"&raquo;\" (pageChanged)=\"pageChanged($event)\">\n  </pagination>\n</div> -->","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Message } from \"src/app/_models/message\";\nimport { AuthService } from \"src/app/_services/Auth.service\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { User } from \"src/app/_models/user\";\n\n@Component({\n  selector: \"app-member-messages\",\n  templateUrl: \"./member-messages.component.html\",\n  styleUrls: [\"./member-messages.component.css\"],\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientUser: User;\n  @Input() recipientId: number;\n  messages: Message[];\n  message: any = {};\n  sendMessageForm: FormGroup;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.sendMessageForm = new FormGroup({\n      sendMessageTxt: new FormControl(\"\", Validators.required),\n    });\n\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +localStorage.getItem(\"userId\");\n    this.userService\n      .getMessages(currentUserId, this.recipientUser.id)\n      .pipe(\n        tap(messages => {\n          // tslint:disable-next-line:prefer-for-of\n          // for (let i = 0; i < messages.length; i++) {\n          //   if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n          //     this.userService.markAsRead(currentUserId, messages[i].id);\n          //   }\n          // }\n        })\n      )\n      .subscribe(\n        (messages) => {\n          this.messages = messages;\n        },\n        (error) => {\n          this.alertifyService.error(error);\n        }\n      );\n  }\n\n  sendMessage() {\n    if (this.sendMessageForm.valid) {\n      this.userService\n        .addMessage(this.authService.getCurrentUser().memberId, this.recipientUser.memberId,\n          this.sendMessageForm.get(\"sendMessageTxt\").value, this.messages.length)\n        .subscribe((message: Message) => {\n          //debugger; it will always stop here\n          this.messages.push(message);\n          this.sendMessageForm.reset();\n        });\n    }\n  }\n}\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div *ngIf=\"messages?.length === 0\">\r\n      <p>Sem mensagens... mande um Oi usando a caixa de textos abaixo!</p>\r\n    </div>\r\n    <ul class=\"chat\">\r\n      <li *ngFor=\"let message of messages\">\r\n\r\n        <!-- to them -->\r\n        <div *ngIf=\"message.senderId == recipientId\">\r\n          <span class=\"chat-img float-left\" style=\"margin-right: 10px\">\r\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <strong class=\"primary-font\">{{message.senderKnownAs}}</strong>\r\n              <small class=\"text-muted float-right\">\r\n                <span class=\"fa fa-clock-o\"> {{message.messageSent | date: 'short'}}</span>\r\n              </small>\r\n            </div>\r\n            <p>{{message.content}}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- to me -->\r\n        <div *ngIf=\"message.senderId != recipientId\">\r\n          <span class=\"chat-img float-right\" style=\"margin-left: 10px\">\r\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-o\"> {{message.messageSent | date: 'short'}}</span>\r\n                <!-- <span *ngIf=\"!message.isRead\" class=\"text-danger\">(Não lida)</span>\r\n                <span *ngIf=\"message.isRead\" class=\"text-success\">(Lida | {{message.dateRead | timeago}})</span> -->\r\n              </small>\r\n              <strong class=\"primary-font  float-right\">{{message.senderKnownAs}}</strong>\r\n            </div>\r\n            <p>{{message.content}}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <form [formGroup]=\"sendMessageForm\">\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" class=\"form-control input-sm\" placeholder=\"Digite uma mensagem...\"\r\n          formControlName=\"sendMessageTxt\"\r\n          [ngClass]=\"{'is-invalid': sendMessageForm.get('sendMessageTxt').errors && sendMessageForm.get('sendMessageTxt').touched}\" />\r\n\r\n        <div class=\"input-group-append\">\r\n          <button class=\"btn btn-primary\" (click)=\"sendMessage()\" [disabled]=\"!sendMessageForm.valid\">Enviar</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\nimport { AuthService } from 'src/app/_services/Auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { API_KEY, API_PATH } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  currentMain: Photo;\n  constructor(private authService: AuthService, private userService: UserService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  initializeUploader() {\n    const options = { headers: JSON.stringify({ \"fields\": { \"Favorites\": 'favorites' }, \"typecast\": true }) }\n    const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\n    this.uploader = new FileUploader({\n      url: API_PATH + 'Reported/recnUj83aG5O7y55n',  \n      authToken: 'Bearer ' + API_KEY,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain,\n          isApproved: res.isApproved\n        };\n        this.photos.push(photo);\n        if (res.isMain) {\n          this.authService.photoUrl.next(res.url);\n        }\n      }\n    };\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo) {\n    const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\n    this.userService.setMainPhoto(id, photo.id).subscribe(response => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.photoUrl.next(photo.url);\n\n      const user: User = JSON.parse(localStorage.getItem(\"user\"));\n\n      if (user) {\n        user.photoUrl = photo.url;\n        localStorage.removeItem(\"user\");\n        localStorage.setItem('user', JSON.stringify(user));\n      }\n\n    });\n  }\n\n  //TODO this.authService.decodedToken.nameid\n  deletePhoto(photo: Photo) {\n    const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\n    this.userService.deletePhoto(id, photo.id).subscribe(response => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photo.id), 1);\n      this.alertifyService.success('Photo has been deleted');\n    }, error => {\n      this.alertifyService.error('Failed to delete the Photo');\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n      <div class=\"container\" style=\"position:relative;padding-left:0px\">\n        <img src=\"{{photo.url}}\" alt=\"\" class=\"img-thumbnail\" [style.opacity]=\"!photo.isApproved ? '0.4' : '1'\"/>\n        <div class=\"centered\" \n        [ngClass]=\"!photo.isApproved ? 'awaitingApproval' : ''\"\n        *ngIf=\"!photo.isApproved\">Awaiting approval</div>\n      </div>\n    \n    <div class=\"text-center\">\n      <button class=\"btn btn-sm mr-1\" (click)=\"setMainPhoto(photo)\" \n      [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n      [disabled]=\"photo.isMain || !photo.isApproved\">Main</button>\n      <button class=\"btn btn-sm btn-danger\"><i class=\"fa fa-trash-o\"></i></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n          Drop Photos here\n      </div>\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload\n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel\n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Remove\n          </button>\n      </div>\n\n  </div>\n\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/Auth.service';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: \"app-messages\",\n  templateUrl: \"./messages.component.html\",\n  styleUrls: [\"./messages.component.css\"],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\n    private route: ActivatedRoute, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getLastChats(this.authService.getCurrentUser().memberId, this.pagination.currentPage,\n      this.pagination.itemsPerPage, this.messageContainer)\n      .subscribe((data: PaginatedResult<Message[]>) => {\n        this.messages = data.result;\n        this.pagination = data.pagination;\n      }, error => {\n        this.alertifyService.error(error);\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n  deleteMessage(message: Message, event) {\n    event.stopPropagation();\n\n    this.alertifyService.confirm('Deletar Conversa?', 'Tem certeza que deseja deletar toda esta conversa?', () => {\n      this.userService.deleteLastChat(message)\n        .subscribe(result1 => {\n          \n          let result = this.userService.deleteChats(message);\n          let test = result;\n            \n        }, error => {\n          this.alertifyService.error('Falha ao deletar conversa');\n        });\n    });\n  }\n}\n","<div class=\"container mt-5\">\r\n\r\n  <div style=\"position: absolute; left: 50%; top: 50%;\" *ngIf=\"messages.length === 0\">\r\n    <div class=\"alert alert-info\" role=\"alert\" style=\"position: relative; left: -50%;\">\r\n      <p><i class=\"fa fa-bell\"></i> Você ainda não recebeu ou enviou uma mensagem, navegue nas listas de Cristãos e entre em contato!</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\r\n    <table class=\"table table-hover\" style=\"cursor: pointer;\">\r\n      <thead>\r\n        <tr>\r\n          <th style=\"width: 40%;\">Última Mensagem</th>\r\n          <th style=\"width: 20%;\">Conversa com</th>\r\n          <th style=\"width: 20%;\">Enviada em</th>\r\n          <th style=\"width: 20%;\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr \r\n          *ngFor=\"let message of messages\"\r\n          [routerLink]=\"['/members',messageContainer == 'Outbox'? message.recipientId: message.senderId]\" [queryParams]=\"{tab: 3}\"\r\n        >\r\n          <td>{{ message.content }}</td>\r\n          <td>\r\n            <div *ngIf=\"messageContainer != 'Outbox'\">\r\n              <img\r\n                src=\"{{ message?.senderPhotoUrl }}\"\r\n                class=\"img-circle rounded-circle mr-1\"\r\n              />\r\n              <strong>{{ message.senderKnownAs }}</strong>\r\n            </div>\r\n            <div *ngIf=\"messageContainer == 'Outbox'\">\r\n              <img\r\n                src=\"{{ message?.recipientPhotoUrl }}\"\r\n                class=\"img-circle rounded-circle mr-1\"\r\n              />\r\n              <strong>{{ message.recipientKnownAs }}</strong>\r\n            </div>\r\n          </td>\r\n          <td>{{ message.messageSent | date: 'short' }}</td>\r\n          <td>\r\n            <!-- <button class=\"btn btn-danger\" (click)=\"deleteMessage(message, $event)\">Deletar</button> -->\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"d-flex justify-content-center\" *ngIf=\"messages.length > 0\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\">\r\n  </pagination>\r\n</div> -->\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { AuthService } from '../_services/Auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\n\nexport class NavComponent implements OnInit {\n  model: any = {};\n  username: string;\n  photoUrl: string;\n  id: number;\n  forgot: boolean;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getCurrentUser();\n    this.authService.photoUrl.subscribe((resp) => {\n      this.photoUrl = resp;\n    });\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  login() {\n    this.authService.loginAirtable(this.model).subscribe(next => {\n      this.alertify.success('Login efetuado com Sucesso!');\n      this.router.navigate(['/home']);\n    }, error => {\n      this.alertify.confirm('Falha ao Entrar', 'Verifique seu email e senha e tente novamente! Ou clique em Esqueci a Senha para receber sua senha por Email!', () => {\n        this.forgot = true;\n      });\n    });\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.alertify.warning('Você foi desconectado!');\n    this.router.navigate(['/home']);\n  }\n\n  forgotPassword() {\n    this.alertify.confirm('Esqueci a Senha', `Deseja receber sua senha por Email?`, () => {\n\n      this.authService.checkLoginByEmail(this.model.Username)\n        .subscribe((memberId: string) => {\n          if (memberId) {\n            this.authService.forgotPasswordUpdate(memberId).subscribe(response => {\n              this.alertify.success('Sua senha foi enviada com sucesso, verifique seu email!');\n              this.router.navigate(['/home']);\n            }, error => {\n              this.alertify.error('Erro ao enviar sua senha, tente novamente mais tarde!', error);\n            });\n          }\n        }), error => {\n          this.alertify.error('Erro ao enviar sua senha, tente novamente mais tarde!', error);\n        }\n    });\n  }\n}","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary pr-5\">\n  \n  <a class=\"navbar-brand\" href=\"/home\">\n    <div id=\"block1\" style=\"float:left;\">\n      <h1 class=\"varao\">Varão</h1>\n    </div>\n    <div id=\"block2\" style=\"float:left;\">\n      <h1 class=\"varoa\">Varoa</h1>\n    </div>\n  </a>\n\n  <ul class=\"navbar-nav mr-auto\">\n    <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"loggedIn()\">\n      <a class=\"nav-link\" [routerLink]=\"['/members']\">Listas</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"loggedIn()\">\n      <a class=\"nav-link\" [routerLink]=\"['/lists']\">Curtidas</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"loggedIn()\">\n      <a class=\"nav-link\" [routerLink]=\"['/messages']\">Mensagens</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\" [routerLink]=\"['/contactus']\">Fale Conosco</a>\n    </li>\n  </ul>\n\n  <div class=\"dropdown\" dropdown *ngIf=\"loggedIn()\">\n    <span class=\"mr-2\">\n      <img src=\"{{ photoUrl || '../../../../assets/user.png'}}\" alt=\"\" class=\"avatar\" [routerLink]=\"['/members/' + authService.id]\" />\n    </span>\n    <a class=\"dropdown-toggle text-light\" *ngIf=\"loggedIn()\" dropdownToggle>\n      Olá, {{ authService.username }}\n    </a>\n\n    <div class=\"dropdown-menu\" *dropdownMenu>\n      <a href=\"#\" class=\"dropdown-item\" [routerLink]=\"['/members/' + authService.id]\"><i class=\"fa fa-user\"></i> Seu Perfil</a>\n      <div class=\"dropdown-divider\"></div>\n      <!-- <a href=\"#\" class=\"dropdown-item\" [routerLink]=\"['/members/' + authService.id]\"><i class=\"fa fa-send\"></i> Fale Conosco</a>\n      <div class=\"dropdown-divider\"></div> -->\n      <a href=\"#\" class=\"dropdown-item\" (click)=\"logout()\"><i class=\"fa fa-sign-out\"></i> Sair</a>\n    </div>\n  </div>\n\n  <form #loginForm=\"ngForm\" *ngIf=\"!loggedIn()\" class=\"form-inline my-2 my-lg-0\" (submit)=\"login()\" autocomplete=\"off\">\n    <input class=\"form-control mr-sm-2\" name=\"Username\" placeholder=\"Email\" autocomplete=\"off\" type=\"text\" required\n      [(ngModel)]=\"model.Username\" />\n    <input class=\"form-control mr-sm-2\" placeholder=\"Senha\" type=\"password\" name=\"Password\" required\n      [(ngModel)]=\"model.Password\" />\n    <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\" [disabled]=\"!loginForm.valid\">\n      Entrar\n    </button>\n    <!-- *ngIf=\"forgot\" -->\n    <button class=\"btn btn-info my-2 my-sm-0\" style=\"margin-left: 10px;\" type=\"button\"  [disabled]=\"!loginForm.valid\" (click)=\"forgotPassword()\">\n      Enqueci a Senha\n    </button>\n  </form>\n</nav>\n\n<!-- <pre>\n  Form Valid: {{loginForm.valid}}\n  Form Touched: {{loginForm.touched}}\n  Form Dirty: {{loginForm.dirty}}\n  Form Values: {{loginForm.value | json}}\n\n  Username Valid: {{username.valid}}\n  Username Touched: {{username.touched}}\n  Username Dirty: {{username.dirty}}\n  Username Values: {{username.value | json}}\n\n  Password Valid: {{password.valid}}\n  Password Touched: {{password.touched}}\n  Password Dirty: {{password.dirty}}\n  Password Values: {{password.value | json}}\n</pre> -->","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/Auth.service';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user: User;\n  @Input() valuesFromHome: [];\n  @Output() emitCancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  colorTheme = 'theme-red';\n  bsConfig: Partial<BsDatepickerConfig>;\n  constructor(private router: Router, private authService: AuthService, private alertify: AlertifyService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.bsConfig = Object.assign({}, { containerClass: this.colorTheme });\n    \n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validators: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null :  { 'mismatch' : true};\n  }\n  cancel() {\n    this.emitCancelRegister.emit();\n  }\n\n  register() {\n    // this.user = Object.assign({}, this.registerForm.value);\n    // this.authService.register(this.user).subscribe(next => {\n    //   this.alertify.success('Registration Successfull');\n    // }, error => {\n    //   this.alertify.error(error);\n    // }, () => {\n    //   this.authService.login(this.user).subscribe(response => {\n    //     this.router.navigate(['/members']);\n    //   }, error => {\n    //     this.alertify.error(error);\n    //   });\n    // });\n  }\n}\n","<form [formGroup]=\"registerForm\" (submit)=\"register()\" autocomplete=\"off\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr />\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n    </label>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\" placeholder=\"Username\" formControlName=\"username\"/>\n    <div class=\"invalid-feedback\">Please choose a username</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n      placeholder=\"Known as\" formControlName=\"knownAs\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\"  bsDatepicker [bsConfig]=\"bsConfig\" class=\"form-control\"\n      placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" >\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"City\" formControlName=\"city\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Country\" formControlName=\"country\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('password').errors  && registerForm.get('password').touched}\" placeholder=\"Password\" formControlName=\"password\"/>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('required')  && registerForm.get('password').touched\">Password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('minlength')  && registerForm.get('password').touched\">Password must be at least 4 characters</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('maxlength')  && registerForm.get('password').touched\">Password can not exceed 8 characters</div>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\"\n    [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors  && registerForm.get('confirmPassword').touched || \n    registerForm.hasError('mismatch')  && registerForm.get('confirmPassword').touched}\"\n    formControlName=\"confirmPassword\"/>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword').hasError('required')  && registerForm.get('confirmPassword').touched\">Confirm password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('mismatch')  && registerForm.get('confirmPassword').touched\">Passwords must match</div>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n  </div>\n</form>\n<!-- \n<p>Form Value : {{registerForm.value | json}}</p>\n<p>Form State : {{registerForm.status | json}}</p> -->","import { MemberReloadComponent } from './member-reload/member-reload.component';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { Routes } from '@angular/router';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\n// import { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessageListResolver } from './_resolvers/message-list.resolver';\n\nexport const appRoutes: Routes = [\n    {path: '', component: HomeComponent},\n    {path: 'contactus', component: ContactUsComponent},\n    {path: 'reload', component: MemberReloadComponent},\n    {\n        path: '',\n        runGuardsAndResolvers: 'always',\n        canActivate: [AuthGuard],\n        children: [\n            { path: 'members', component: MemberListComponent, resolve: { users: MemberListResolver} },\n            { path: 'members/:id', component: MemberDetailComponent, resolve: { user: MemberDetailResolver} },\n            { path: 'members/:user', component: MemberDetailComponent, resolve: { user: MemberDetailResolver} },\n            // { path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChanges], resolve: { user: MemberEditResolver}},\n            { path: 'member/edit', component: MemberEditComponent, resolve: { user: MemberEditResolver}},\n            { path: 'messages', component: MessagesComponent, resolve: { messages: MessageListResolver} },\n            { path: 'lists', component: ListsComponent, resolve: { users: ListsResolver}}\n        ]\n    },\n    {path: '**', redirectTo: '', pathMatch: 'full'}\n];\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Value } from '../_models/Value';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: 'app-values',\n  templateUrl: './values.component.html',\n  styleUrls: ['./values.component.css']\n})\nexport class ValuesComponent implements OnInit {\n  values: Value[];\n  constructor(private http: HttpClient, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n\n  getValues() {\n    this.http.get('http://localhost:5000/api/values').subscribe((response: any) => {\n      this.values = response;\n      this.alertifyService.success('values received');\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n}\n","<p *ngFor=\"let value of values\">\n  {{value.id}}, {{value.name}}\n</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\ndeclare const require: any;\n\nexport const environment = {\n  production: false,\n  appVersion: require('../../package.json').version + '-dev'\n};\n\nconst API_BASE = \"appWNKSYG2IPWC2n3\" + \"/\"; // Tests\nexport const API_PATH = `https://api.airtable.com/v0/${API_BASE}`;\nexport const API_KEY = \"keyRNWJ9cetyXUJex\";\nexport const CREATE_FORM = \"shruHY6jya6Y0gDjg\";\nexport const EDIT_FORM = \"shrpTrfrJgjva89As\";\nexport const MAIN_IMAGE = \"shriwEGX2lOCbIDgP\";\nexport const OTHER_IMAGES = \"shrJRw7HX4ZvZzjlD\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}