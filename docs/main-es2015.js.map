{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_directives/hasRole.directive.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_models/pagination.ts","./src/app/_resolvers/lists.resolver.ts","./src/app/_resolvers/member-detail.resolver.ts","./src/app/_resolvers/member-edit.resolver.ts","./src/app/_resolvers/member-list.resolver.ts","./src/app/_resolvers/message-list.resolver.ts","./src/app/_services/Alertify.service.ts","./src/app/_services/Auth.service.ts","./src/app/_services/admin.service.ts","./src/app/_services/error.interceptor.ts","./src/app/_services/user.service.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/roles-modal/roles-modal.component.ts","./src/app/admin/roles-modal/roles-modal.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/constants.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/routes.ts","./src/app/values/values.component.ts","./src/app/values/values.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Directive, Input, ViewContainerRef, TemplateRef, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../_services/Auth.service\";\n\n@Directive({\n  selector: \"[appHasRole]\",\n})\nexport class HasRoleDirective implements OnInit{\n  @Input() appHasRole: string[];\n  isVisible = false;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private authService: AuthService\n  ) {}\n\n    ngOnInit() {\n      const userRoles = this.authService.decodedToken.role as Array<string>;\n\n      // if user has no roles, clear the viewContainerRef\n      if (!userRoles) {\n        this.viewContainerRef.clear();\n      }\n\n      // if user has role needed then render the element\n      if (this.authService.roleMatch(this.appHasRole)) {\n        if (!this.isVisible) {\n          this.isVisible = true;\n          this.viewContainerRef.createEmbeddedView(this.templateRef);\n        } else {\n          this.isVisible = false;\n          this.viewContainerRef.clear();\n        }\n      }\n    }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"../_services/Auth.service\";\r\nimport { Router, CanActivate, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { AlertifyService } from \"../_services/Alertify.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot): boolean {\r\n    const roles = next.firstChild.data[\"roles\"] as Array<string>;\r\n    if (roles) {\r\n      const match = this.authService.roleMatch(roles);\r\n      if (match) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate([\"members\"]);\r\n        this.alertify.error(\"Voce nao tem acesso a essa area!\");\r\n      }\r\n    }\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\r\n    this.alertify.error(\"E preciso estar logado!\");\r\n    this.router.navigate([\"/home\"]);\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return confirm('Are you sure you want to continue? Any unsaved changes will be lost');\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","export interface Pagination {\n    itemsPerPage: number;\n    totalPages: number;\n    currentPage: number;\n    totalItems: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from '../_services/Alertify.service';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { Constants } from '../common/constants';\r\n\r\n@Injectable()\r\n\r\nexport class ListsResolver implements Resolve<PaginatedResult<User[]>> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    likesParam = 'Likers';\r\n\r\n    constructor(private userService: UserService, \r\n                private alertify: AlertifyService, \r\n                private router: Router) {}\r\n                \r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<User[]>> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(Constants.DataError);\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/Alertify.service';\r\nimport { Observable, of} from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Constants } from '../common/constants';\r\n\r\n@Injectable()\r\n\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private alertify: AlertifyService, private router: Router) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(Constants.DataError);\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Router, Resolve } from \"@angular/router\";\r\nimport { User } from \"../_models/user\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { UserService } from \"../_services/user.service\";\r\nimport { AlertifyService } from \"../_services/Alertify.service\";\r\nimport { AuthService } from \"../_services/Auth.service\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n      catchError((error) => {\r\n        this.alertify.error(error);\r\n        this.router.navigate([\"/members\"]);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from '../_services/Alertify.service';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { Constants } from '../common/constants';\r\n\r\n@Injectable()\r\n\r\nexport class MemberListResolver implements Resolve<PaginatedResult<User[]>> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n\r\n    constructor(private userService: UserService, private alertify: AlertifyService, private router: Router) {}\r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<User[]>> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(Constants.DataError);\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Message } from '../_models/Message';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from '../_services/Alertify.service';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { AuthService } from '../_services/Auth.service';\r\nimport { Constants } from '../common/constants';\r\n\r\n@Injectable()\r\n\r\nexport class MessageListResolver implements Resolve<PaginatedResult<Message[]>> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Unread';\r\n\r\n    constructor(private authService: AuthService, private userService: UserService,\r\n                private alertify: AlertifyService, private router: Router) {}\r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<Message[]>> {\r\n        return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n            this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(Constants.DataError);\r\n                this.router.navigate(['/home']);\r\n                \r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\nimport * as alertify from \"alertifyjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, (e: any) => {\n      if (e) {\n        okCallback();\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { map } from \"rxjs/operators\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { User } from \"../_models/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  token: string;\n  helper = new JwtHelperService();\n  decodedToken: any;\n  baseUrl: string = environment.apiUrl;\n  username: string;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>(null);\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + \"auth/login\", model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem(\"token\", user.token.result);\n          localStorage.setItem(\"user\", JSON.stringify(user.user));\n          this.currentUser = user.user;\n          this.getUsername();\n          this.photoUrl.next(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  getUsername() {\n    this.decodedToken = this.helper.decodeToken(localStorage.getItem(\"token\"));\n    if (this.decodedToken) {\n      this.username = this.decodedToken.unique_name;\n    }\n  }\n\n  loggedIn(): boolean {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return !this.helper.isTokenExpired(token);\n    }\n    return false;\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + \"auth/register\", user);\n  }\n\n  roleMatch(allowedRoles: Array<string>): boolean {\n    let isMatch = false;\n    const userRoles = this.decodedToken.role as Array<string>;\n    allowedRoles.forEach((element) => {\n      if (userRoles.includes(element)) {\n        isMatch = true;\n        return;\n      }\n    });\n    return isMatch;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsersWithRoles() {\n    return this.http.get(this.baseUrl + 'admin/usersWithRoles');\n  }\n\n  updateUserRoles(user: User, values: {}) {\n    return this.http.post(this.baseUrl + 'admin/editRoles/' + user.userName, values);\n  }\n\n  getPhotosForApproval() {\n    return this.http.get(this.baseUrl + 'admin/photosForApproval');\n  }\n\n  updatePhotoStatus(photoId: number, status: string) {\n    return this.http.post(this.baseUrl + 'admin/photoStatusUpdate/' + photoId + '/' + status, {});\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { catchError, map, finalize } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private spinner: NgxSpinnerService) {}\r\n\r\n  intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler\r\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n    // Show this spinner for each request\r\n    this.spinner.show();\r\n\r\n    return next.handle(req).pipe(\r\n      catchError((error) => {\r\n        // this is used for 401 Unauthorized error\r\n        if (error.status === 401) {\r\n          return throwError(error.statusText);\r\n        }\r\n\r\n        if (error instanceof HttpErrorResponse) {\r\n          // This is used for 500 type of errors\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            return throwError(applicationError);\r\n          }\r\n\r\n          // This is used for Modal State errors\r\n          const serverError = error.error;\r\n          let modalStateErrors = '';\r\n          if (serverError.errors && typeof serverError.errors === 'object') {\r\n            for (const key in serverError.errors) {\r\n              if (serverError.errors[key]) {\r\n                modalStateErrors += serverError.errors[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n          return throwError(modalStateErrors || serverError || 'serverError');\r\n        }\r\n      }),\r\n      finalize(() => {\r\n        // hide the spinner\r\n        this.spinner.hide();\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true,\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { User } from '../_models/user';\nimport { environment } from 'src/environments/environment';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl: string = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParams?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParams === 'Likers') {\n      params = params.append('Likers', 'true');\n    }\n\n    if (likesParams === 'Likees') {\n      params = params.append('Likees', 'false');\n    }\n\n    return this.http.get<User[]>(this.baseUrl + 'users', { observe: 'response', params})\n      .pipe(\n        map(response => \n        {\n          paginatedResult.result = response.body;\n          \n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put<User>(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?): Observable<PaginatedResult<Message[]>> {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n    \n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/message', { observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/message/thread/' + recipientId);\n  }\n\n  addMessage(userId: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/message/', message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/message/' + id , {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/message/' + messageId + '/read', {})\n      .subscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/_services/Auth.service';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"container mt-5\">\n  <h2>Admin Panel</h2>\n  <div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n      <tab heading=\"User Management\" *appHasRole=\"['Admin']\">\n        <div class=\"container\">\n          <app-user-management></app-user-management>\n        </div>\n      </tab>\n      <tab heading=\"Photo Management\" *appHasRole=\"['Admin','Moderator']\">\n        <div class=\"container\">\n          <app-photo-management></app-photo-management>\n        </div>\n      </tab>\n    </tabset>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { Photo } from 'src/app/_models/photo';\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n  photos: Photo[];\n  constructor(private adminService: AdminService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.getPhotosForApproval();\n  }\n\n  private getPhotosForApproval() {\n    this.adminService.getPhotosForApproval().subscribe((photos: Photo[]) => {\n      this.photos = photos;\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n\n  updatePhotoStatus(photoId: number, status: string) {\n    this.adminService.updatePhotoStatus(photoId, status).subscribe(() => {\n      const index = this.photos.indexOf(this.photos.find(el => el.id === photoId));\n      if (index > -1) {\n        this.photos.splice(index, 1);\n      }\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n      <div class=\"container\" style=\"position:relative\">\n        <img src=\"{{photo.url}}\" alt=\"\" class=\"img-thumbnail\"/>\n      </div>\n    \n    <div class=\"text-center mt-2\">\n      <button class=\"btn btn-sm btn-success mr-1\" (click)=\"updatePhotoStatus(photo.id,'Activate')\">Activate</button>\n      <button class=\"btn btn-sm btn-danger\" (click)=\"updatePhotoStatus(photo.id,'Reject')\">Reject</button>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { User } from \"src/app/_models/user\";\n\n@Component({\n  selector: \"app-roles-modal\",\n  templateUrl: \"./roles-modal.component.html\",\n  styleUrls: [\"./roles-modal.component.css\"],\n})\nexport class RolesModalComponent implements OnInit {\n  @Output() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit Roles for {{user.userName}}</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input type=\"checkbox\" class=\"form-check-input\" value=\"role.name\" \n      [checked]=\"role.checked\"\n      (change)=\"role.checked = !role.checked\"\n      [disabled]=\"user.userName === 'Admin' && role.name === 'Admin'\">\n      <label>{{role.name}}</label>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n  <button type=\"submit\" class=\"btn btn-success\" form=\"rolesForm\">Submit</button>\n</div> ","import { Component, OnInit } from \"@angular/core\";\nimport { AdminService } from \"src/app/_services/admin.service\";\nimport { User } from \"src/app/_models/user\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { RolesModalComponent } from \"../roles-modal/roles-modal.component\";\n\n@Component({\n  selector: \"app-user-management\",\n  templateUrl: \"./user-management.component.html\",\n  styleUrls: [\"./user-management.component.css\"],\n})\nexport class UserManagementComponent implements OnInit {\n  bsModalRef: BsModalRef;\n  users: User[];\n  constructor(\n    private adminService: AdminService,\n    private alertifyService: AlertifyService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles(): void {\n    this.adminService.getUsersWithRoles().subscribe(\n      (users: User[]) => {\n        this.users = users;\n      },\n      (error) => {\n        this.alertifyService.error(error);\n      }\n    );\n  }\n\n  editRolesModal(user: User): void {\n    const initialState = {\n      user,\n      roles: this.getRolesArray(user)\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, {\n      initialState,\n    });\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\n      const rolesToUpdate = {\n        roleNames: [...values.filter( el => el.checked === true).map(el => el.name)]\n      };\n      if (rolesToUpdate) {\n        this.adminService.updateUserRoles(user, rolesToUpdate).subscribe(() => {\n          user.roles = [...rolesToUpdate.roleNames];\n        }, error => {\n          console.log(error);\n        });\n      }\n    });\n  }\n\n  private getRolesArray(user) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: \"Admin\", value: \"Admin\" },\n      { name: \"Moderator\", value: \"Moderator\" },\n      { name: \"Member\", value: \"Member\" },\n      { name: \"VIP\", value: \"VIP\" },\n    ];\n\n    for (let i = 0; i < availableRoles.length; i++) {\n      let isMatch = false;\n      for (let j = 0; j < userRoles.length; j++) {\n        if (availableRoles[i].name === userRoles[j]) {\n          isMatch = true;\n          availableRoles[i].checked = true;\n          roles.push(availableRoles[i]);\n          break;\n        }\n      }\n      if(!isMatch) {\n        availableRoles[i].checked = false;\n        roles.push(availableRoles[i]);\n      }\n    }\n    return roles;\n  }\n}\n","<div class=\"row\">\n  <div class=\"table\">\n    <tr>\n      <th style=\"width: 10%\">User ID</th>\n      <th style=\"width: 30%\">Username</th>\n      <th style=\"width: 40%\">Active roles</th>\n      <th style=\"width: 20%\"></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <td>{{user.id}}</td>\n      <td>{{user.userName}}</td>\n      <td>{{user.roles}}</td>\n      <td><button class=\"btn btn-info\" (click)=\"editRolesModal(user)\">Edit Roles</button></td>\n    </tr>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/Auth.service';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  title = 'DatingApp-SPA';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.getUsername();\n\n    const user: User = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      this.authService.photoUrl.next(user.photoUrl);\n    }\n  }\n}\n","<app-nav></app-nav>\r\n<router-outlet></router-outlet>\r\n<ngx-spinner></ngx-spinner>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { RouterModule } from '@angular/router';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from 'ngx-gallery-9';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { AppComponent } from './app.component';\nimport { ValuesComponent } from './values/values.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessageListResolver } from './_resolvers/message-list.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/hasRole.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './admin/roles-modal/roles-modal.component';\n\nexport function tokenGetter() {\n      return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ValuesComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberListComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      MemberMessagesComponent,\n      AdminPanelComponent,\n      UserManagementComponent,\n      PhotoManagementComponent,\n      RolesModalComponent,\n      HasRoleDirective\n   ],\n   imports: [\n      BrowserModule,\n      RouterModule,\n      BrowserAnimationsModule,\n      BsDropdownModule.forRoot(),\n      HttpClientModule,\n      ButtonsModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      JwtModule.forRoot({\n         config: {\n           tokenGetter: tokenGetter,\n           whitelistedDomains: ['localhost:5000'],\n           blacklistedRoutes: ['localhost:5000/api/auth'],\n         }\n       }),\n      FormsModule,\n      ReactiveFormsModule,\n      TabsModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      TimeagoModule.forRoot(),\n      PaginationModule.forRoot(),\n      NgxGalleryModule,\n      FileUploadModule,\n      ModalModule.forRoot(),\n      NgxSpinnerModule\n   ],\n   providers: [\n      ErrorInterceptorProvider,\n      MemberListResolver,\n      MemberEditResolver,\n      MemberDetailResolver,\n      ListsResolver,\n      MessageListResolver\n   ],\n   entryComponents: [RolesModalComponent],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\n\r\nexport class Constants {\r\n    public static apiURL: string = \"https://itsolutionstuff.com/\";      \r\n    public static DataError: string = \"Erro ao buscar dados, verifique se voce esta Online!\";\r\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  showHideRegister: boolean;\n  constructor(private http: HttpClient, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  toggleRegister() {\n    this.showHideRegister = !this.showHideRegister;\n  }\n}\n","<div class=\"container mt-5\">\n  <div style=\"text-align:center\" *ngIf=\"!showHideRegister\">\n    <h1>Encontre seu Varao / Varoa</h1>\n    <p class=\"lead\">Tudo que voce precisa eh se cadastrar ou efetuar seu login!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"toggleRegister()\">Cadastro</button>\n      <button class=\"btn btn-info btn-lg\">Saiba mais</button>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\" *ngIf=\"showHideRegister\">\n        <app-register (emitCancelRegister)=\"toggleRegister()\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/Auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService, private route: ActivatedRoute,\n              private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n  }\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((response: PaginatedResult<User[]>) => {\n        this.users = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n  </div>\n\n<div class=\"container mt-3\">\n\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\" (click)=\"loadUsers()\">Members who like me</button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\" (click)=\"loadUsers()\">Members who I like</button>\n    </div>\n  </div>\n\n  <br>\n\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\n    >\n\n  </pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\nimport { AuthService } from 'src/app/_services/Auth.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n  constructor(private authService: AuthService, private userService: UserService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(recipientId: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, recipientId).subscribe(response => {\n      this.alertifyService.success('You have liked user: ' + this.user.knownAs);\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.photoUrl}}\" class=\"card-img-top\" alt=\"...\">\n    \n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" routerLinkActive=\"router-link-active\" ><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\"  (click)=\"sendLike(user.id)\"><i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members',user.id]\"  [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\n      \n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>\n      {{user.knownAs}}, {{user.age}}\n    </h6>\n    <p class=\"card-text text-muted text-center\">{{user.city}}</p>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { User } from \"src/app/_models/user\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  NgxGalleryOptions,\n  NgxGalleryImage,\n  NgxGalleryAnimation,\n  NgxGalleryImageSize,\n} from \"ngx-gallery-9\";\nimport { TabsetComponent } from \"ngx-bootstrap/tabs/public_api\";\n\n@Component({\n  selector: \"app-member-detail\",\n  templateUrl: \"./member-detail.component.html\",\n  styleUrls: [\"./member-detail.component.css\"],\n})\nexport class MemberDetailComponent implements OnInit {\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  @ViewChild(\"memberTabs\", { static: true }) memberTabs: TabsetComponent;\n  messageTabVav: boolean;\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe((data) => {\n      this.user = data[\"user\"];\n    });\n    this.galleryOptions = [\n      {\n        width: \"400px\",\n        height: \"400px\",\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n      },\n      // max-width 800\n      {\n        breakpoint: 800,\n        width: \"100%\",\n        height: \"600px\",\n        imagePercent: 80,\n        thumbnailsPercent: 20,\n        thumbnailsMargin: 20,\n        thumbnailMargin: 20,\n      },\n      // max-width 400\n      {\n        breakpoint: 400,\n        preview: false,\n      },\n    ];\n    this.galleryImages = this.getImages();\n\n    this.route.queryParams.subscribe((params) => {\n      const selectedTab = params[\"tab\"];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  getImages() {\n    const images = [];\n    for (const photo of this.user.photos) {\n      if (photo.isApproved) {\n        images.push({\n          small: photo.url,\n          medium: photo.url,\n          big: photo.url,\n          description: photo.description,\n        });\n      }\n    }\n    return images;\n  }\n}\n\n// loadUser() {\n//   debugger;\n//   this.userService.getUser(+this.route.snapshot.params['id']).subscribe((user: User) => {\n//     this.user = user;\n//   }, error => {\n//     this.alertify.error(error);\n//   }, () => {\n\n//   })\n// }\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <h1>{{user.knownAs}}'s Profile</h1>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" >\n        <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Member Since:</strong>\n            <p>{{user.created | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\">Like</button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\"  #memberTabs>\n          <tab heading=\"About {{user?.knownAs}}\" id=\"tab1\">\n            <h4>Description</h4>\n            <p>{{user.introduction}}</p>\n            <h4>Looking For</h4>\n            <p>{{user.lookingFor}}</p>\n          </tab>\n          <tab heading=\"Interests\">\n            <h4>Interests</h4>\n            <p>{{user.interests}}</p>\n          </tab>\n          <tab heading=\"Photos\">\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\n          </tab>\n          <tab heading=\"Messages\">\n            <app-member-messages [recipientId]=\"user.id\"></app-member-messages>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, HostListener } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/_models/user\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AuthService } from \"src/app/_services/Auth.service\";\n\n@Component({\n  selector: \"app-member-edit\",\n  templateUrl: \"./member-edit.component.html\",\n  styleUrls: [\"./member-edit.component.css\"],\n})\nexport class MemberEditComponent implements OnInit {\n  user: User;\n  photoUrl: string;\n  @ViewChild(\"editForm\", { static: true }) editForm: NgForm;\n  @HostListener(\"window:beforeunload\", [\"$event\"])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.authService.photoUrl.subscribe((resp) => {\n      this.photoUrl = resp;\n    });\n    this.route.data.subscribe((data) => {\n      this.user = data[\"user\"];\n    });\n    \n  }\n  updateUser() {\n    this.userService\n      .updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(\n        (response) => {\n          this.alertify.success(\"Profile updated Successfully\");\n          this.editForm.reset(this.user);\n        },\n        (error) => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <h1>Your Profile</h1>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"alert alert-info\" role=\"alert\" *ngIf=\"editForm.dirty\">\n        <strong>Information:</strong> You have made changes. Any unsaved changes will be lost!\n      </div>\n    </div>\n    \n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" >\n        <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Member Since:</strong>\n            <p>{{user.created  | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          \n            <button class=\"btn btn-success btn-block\" form=\"editForm\" [disabled]=\"!editForm.dirty\">Save Changes</button>\n          \n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        \n        <tabset class=\"member-tabset\">\n          <tab heading=\"Edit Profile\">\n            <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\n              <h4>Description</h4>\n              <textarea name=\"introduction\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.introduction\"></textarea>\n\n              <h4>Looking For</h4>\n              <textarea name=\"lookingFor\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.lookingFor\"></textarea>\n\n              <h4>Interests</h4>\n              <textarea name=\"interests\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.interests\"></textarea>\n\n              <h4>Location Details:</h4>\n              <div class=\"form-inline\">\n                <label for=\"city\">City</label>\n                <input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"user.city\">\n\n                <label for=\"country\">Country</label>\n                <input type=\"text\" class=\"form-control\" name=\"country\" [(ngModel)]=\"user.country\">\n              </div>\n\n            </form>\n          </tab>\n          <tab heading=\"Edit Photos\">\n            <app-photo-editor [photos]=\"user.photos\"></app-photo-editor>\n          </tab>\n         \n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { User } from \"src/app/_models/user\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Pagination, PaginatedResult } from \"src/app/_models/pagination\";\n\n@Component({\n  selector: \"app-member-list\",\n  templateUrl: \"./member-list.component.html\",\n  styleUrls: [\"./member-list.component.css\"],\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem(\"user\"));\n  genderList = [\n    { value: \"male\", display: \"Males\" },\n    { value: \"female\", display: \"Females\" },\n  ];\n  userParams: any = {};\n  pagination: Pagination;\n  page: number;\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe((data) => {\n      this.users = data[\"users\"].result;\n      this.pagination = data[\"users\"].pagination;\n    });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe((response: PaginatedResult<User[]>) => {\n        this.users = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2> {{userParams.OrderBy}}\n</div>\n\n<div class=\"container mt-3\">\n  <form #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" class=\"form-inline\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Age From</label>\n      <input type=\"number\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.minAge\" style=\"width: 70px\" id=\"minAge\" name=\"minAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Age To</label>\n      <input type=\"number\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.maxAge\" style=\"width: 70px\" id=\"maxAge\" name=\"maxAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Show: </label>\n      <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\" name=\"gender\" [(ngModel)]=\"userParams.gender\">\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">{{gender.display}}</option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" style=\"margin-left:10px\" (click)=\"resetFilters()\">Reset Filter</button>\n  \n\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" btnRadio=\"lastActive\" [(ngModel)]=\"userParams.orderBy\">Last Active</button>\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" btnRadio=\"created\" [(ngModel)]=\"userParams.orderBy\">Newest Members</button>\n      </div>\n    </div>\n  </form>\n  <br>\n\n  <div class=\"row\">\n    <div class=\"col-lg-2 col-md-3 col-sm-6 inline\" *ngFor=\"let item of users\">\n        <app-member-card [user]=\"item\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n      <pagination \n        [boundaryLinks]=\"true\"\n        [totalItems]=\"pagination.totalItems\" \n        [itemsPerPage]=\"pagination.itemsPerPage\" \n        [(ngModel)]=\"pagination.currentPage\"\n        previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" firstText=\"&raquo;\"\n        (pageChanged)=\"pageChanged($event)\">\n      </pagination>\n </div>\n\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Message } from \"src/app/_models/message\";\nimport { AuthService } from \"src/app/_services/Auth.service\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-member-messages\",\n  templateUrl: \"./member-messages.component.html\",\n  styleUrls: [\"./member-messages.component.css\"],\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  message: any = {};\n  sendMessageForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertifyService: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.sendMessageForm = new FormGroup({\n      sendMessageTxt: new FormControl(\"\", Validators.required),\n    });\n\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService\n      .getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          // tslint:disable-next-line:prefer-for-of\n          for (let i = 0; i < messages.length; i++) {\n            if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(\n        (messages) => {\n          this.messages = messages;\n        },\n        (error) => {\n          this.alertifyService.error(error);\n        }\n      );\n  }\n\n  sendMessage() {\n    if (this.sendMessageForm.valid) {\n      this.message.recipientId = this.recipientId;\n      this.message.content = this.sendMessageForm.get(\"sendMessageTxt\").value;\n\n      this.userService\n        .addMessage(this.authService.decodedToken.nameid, this.message)\n        .subscribe((message: Message) => {\n          debugger;\n          this.messages.unshift(message);\n          this.sendMessageForm.reset();\n        });\n    }\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n      <p>No messages yet... say hi by using the message box below</p>\n    </div>\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        <!-- to them -->\n        <div *ngIf=\"message.senderId == recipientId\">\n          <span class=\"chat-img float-left\">\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{message.senderKnownAs}}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n              </small>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n    \n        <!-- to me -->\n        <div *ngIf=\"message.senderId != recipientId\">\n          <span class=\"chat-img float-right\">\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(unread)</span>\n                <span *ngIf=\"message.isRead\" class=\"text-success\">(Read | {{message.dateRead | timeago}})</span>\n                \n              </small>\n              <strong class=\"primary-font  float-right\">{{message.senderKnownAs}}</strong>\n              \n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-footer\">\n    <form [formGroup]=\"sendMessageForm\">\n      <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control input-sm\" placeholder=\"send a private message\" formControlName=\"sendMessageTxt\"\n        [ngClass]=\"{'is-invalid': sendMessageForm.get('sendMessageTxt').errors && sendMessageForm.get('sendMessageTxt').touched}\"/>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-primary\" (click)=\"sendMessage()\" [disabled]=\"!sendMessageForm.valid\">Send</button>\n        </div>\n\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/Auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\nimport { User } from 'src/app/_models/user';\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl =  environment.apiUrl;\n  currentMain: Photo;\n  constructor(private authService: AuthService, private userService: UserService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain,\n          isApproved: res.isApproved\n        };\n        this.photos.push(photo);\n        if (res.isMain) {\n          this.authService.photoUrl.next(res.url);\n        }\n      }\n    };\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(response => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.photoUrl.next(photo.url);\n\n      const user: User = JSON.parse(localStorage.getItem(\"user\"));\n\n      if (user) {\n        user.photoUrl = photo.url;\n        localStorage.removeItem(\"user\");\n        localStorage.setItem('user', JSON.stringify(user));\n      }\n\n    });\n  }\n\n  deletePhoto(photo: Photo) {\n    this.userService.deletePhoto(this.authService.decodedToken.nameid, photo.id).subscribe(response => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photo.id), 1);\n      this.alertifyService.success('Photo has been deleted');\n    }, error => {\n      this.alertifyService.error('Failed to delete the Photo');\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n      <div class=\"container\" style=\"position:relative;padding-left:0px\">\n        <img src=\"{{photo.url}}\" alt=\"\" class=\"img-thumbnail\" [style.opacity]=\"!photo.isApproved ? '0.4' : '1'\"/>\n        <div class=\"centered\" \n        [ngClass]=\"!photo.isApproved ? 'awaitingApproval' : ''\"\n        *ngIf=\"!photo.isApproved\">Awaiting approval</div>\n      </div>\n    \n    <div class=\"text-center\">\n      <button class=\"btn btn-sm mr-1\" (click)=\"setMainPhoto(photo)\" \n      [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n      [disabled]=\"photo.isMain || !photo.isApproved\">Main</button>\n      <button class=\"btn btn-sm btn-danger\"><i class=\"fa fa-trash-o\"></i></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n          Drop Photos here\n      </div>\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload\n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel\n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Remove\n          </button>\n      </div>\n\n  </div>\n\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/Auth.service';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: \"app-messages\",\n  templateUrl: \"./messages.component.html\",\n  styleUrls: [\"./messages.component.css\"],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\n              private route: ActivatedRoute, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid,\n      this.pagination.currentPage, this.pagination.itemsPerPage, this.messageContainer).subscribe((data: PaginatedResult<Message[]>) => {\n        this.messages = data.result;\n        this.pagination = data.pagination;\n      }, error => {\n        this.alertifyService.error(error);\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n  deleteMessage(id: number, event) {\n    event.stopPropagation();\n    this.alertifyService.confirm('Are you sure you want to delete this message', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(result => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.alertifyService.success('Message has been deleted');\n      }, error => {\n        this.alertifyService.error('Failed to delete the message');\n      });\n    });\n  }\n}\n","<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Unread\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope\"></i> Unread\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Inbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope-open\"></i> Inbox\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Outbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-paper-plane\"></i> Outbox\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length == 0\">\n    <h3>No messages</h3>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer;\">\n      <thead>\n        <tr>\n          <th style=\"width: 40%;\">Message</th>\n          <th style=\"width: 20%;\">From / To</th>\n          <th style=\"width: 20%;\">Sent / Received</th>\n          <th style=\"width: 20%;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr \n          *ngFor=\"let message of messages\"\n          [routerLink]=\"['/members',messageContainer == 'Outbox'? message.recipientId: message.senderId]\"  [queryParams]=\"{tab: 3}\"\n        >\n          <td>{{ message.content }}</td>\n          <td>\n            <div *ngIf=\"messageContainer != 'Outbox'\">\n              <img\n                src=\"{{ message?.senderPhotoUrl }}\"\n                class=\"img-circle rounded-circle mr-1\"\n              />\n              <strong>{{ message.senderKnownAs }}</strong>\n            </div>\n            <div *ngIf=\"messageContainer == 'Outbox'\">\n              <img\n                src=\"{{ message?.recipientPhotoUrl }}\"\n                class=\"img-circle rounded-circle mr-1\"\n              />\n              <strong>{{ message.recipientKnownAs }}</strong>\n            </div>\n          </td>\n          <td>{{ message.messageSent | timeago }}</td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"deleteMessage(message.id, $event)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/Auth.service';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  username: string;\n  photoUrl: string;\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.photoUrl.subscribe(next => {\n      this.photoUrl = next;\n    });\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      this.alertify.success('Login Success');\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertify.message('logout successfull');\n    this.router.navigate(['/home']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary pr-5\">\n  <a class=\"navbar-brand\" href=\"#\">Varao Varoa App</a>\n\n  <ul class=\"navbar-nav mr-auto\">\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\" [routerLink]=\"['/members']\">Curtidas</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\"  [routerLink]=\"['/lists']\">Listas</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\"  [routerLink]=\"['/messages']\">Mensagens</a>\n    </li>\n    <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\"  [routerLink]=\"['/admin']\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"dropdown\" dropdown  *ngIf=\"loggedIn()\">\n    <span class=\"mr-2\">\n      <img src=\"{{ photoUrl || '../../../../assets/user.png'}}\" alt=\"\"/>\n    </span> \n    <a\n      class=\"dropdown-toggle text-light\"\n      *ngIf=\"loggedIn()\"\n      dropdownToggle\n    >\n      Ola, {{ authService.username }}\n    </a>\n\n    <div class=\"dropdown-menu\" *dropdownMenu>\n      <a href=\"#\" class=\"dropdown-item\" [routerLink]=\"['/member/edit']\"\n        ><i class=\"fa fa-user\"></i>Editar Perfil</a\n      >\n      <div class=\"dropdown-divider\"></div>\n      <a href=\"#\" class=\"dropdown-item\" (click)=\"logout()\"\n        ><i class=\"fa fa-sign-out\"></i>Sair</a\n      >\n    </div>\n  </div>\n\n  <form\n    #loginForm=\"ngForm\"\n    *ngIf=\"!loggedIn()\"\n    class=\"form-inline my-2 my-lg-0\"\n    (submit)=\"login()\"\n    autocomplete=\"off\"\n  >\n    <input\n      class=\"form-control mr-sm-2\"\n      name=\"Username\" \n      placeholder=\"Email\"\n      autocomplete=\"off\"\n      type=\"text\"\n      required\n      [(ngModel)]=\"model.Username\"\n    />\n    <input\n      class=\"form-control mr-sm-2\" \n      placeholder=\"Senha\"\n      type=\"password\"\n      name=\"Password\"\n      required\n      [(ngModel)]=\"model.Password\"\n    />\n    <button\n      class=\"btn btn-success my-2 my-sm-0\"\n      type=\"submit\"\n      [disabled]=\"!loginForm.valid\"\n    >\n      Entrar\n    </button>\n  </form>\n</nav>\n\n<!-- <pre>\n  Form Valid: {{loginForm.valid}}\n  Form Touched: {{loginForm.touched}}\n  Form Dirty: {{loginForm.dirty}}\n  Form Values: {{loginForm.value | json}}\n\n  Username Valid: {{username.valid}}\n  Username Touched: {{username.touched}}\n  Username Dirty: {{username.dirty}}\n  Username Values: {{username.value | json}}\n\n  Password Valid: {{password.valid}}\n  Password Touched: {{password.touched}}\n  Password Dirty: {{password.dirty}}\n  Password Values: {{password.value | json}}\n</pre> -->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/Auth.service';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user: User;\n  @Input() valuesFromHome: [];\n  @Output() emitCancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  colorTheme = 'theme-red';\n  bsConfig: Partial<BsDatepickerConfig>;\n  constructor(private router: Router, private authService: AuthService, private alertify: AlertifyService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.bsConfig = Object.assign({}, { containerClass: this.colorTheme });\n    \n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validators: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null :  { 'mismatch' : true};\n  }\n  cancel() {\n    this.emitCancelRegister.emit();\n  }\n\n  register() {\n    this.user = Object.assign({}, this.registerForm.value);\n    this.authService.register(this.user).subscribe(next => {\n      this.alertify.success('Registration Successfull');\n    }, error => {\n      this.alertify.error(error);\n    }, () => {\n      this.authService.login(this.user).subscribe(response => {\n        this.router.navigate(['/members']);\n      }, error => {\n        this.alertify.error(error);\n      });\n    });\n  }\n}\n","<form [formGroup]=\"registerForm\" (submit)=\"register()\" autocomplete=\"off\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr />\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n    </label>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\" placeholder=\"Username\" formControlName=\"username\"/>\n    <div class=\"invalid-feedback\">Please choose a username</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n      placeholder=\"Known as\" formControlName=\"knownAs\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\"  bsDatepicker [bsConfig]=\"bsConfig\" class=\"form-control\"\n      placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" >\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"City\" formControlName=\"city\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Country\" formControlName=\"country\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('password').errors  && registerForm.get('password').touched}\" placeholder=\"Password\" formControlName=\"password\"/>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('required')  && registerForm.get('password').touched\">Password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('minlength')  && registerForm.get('password').touched\">Password must be at least 4 characters</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('maxlength')  && registerForm.get('password').touched\">Password can not exceed 8 characters</div>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\"\n    [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors  && registerForm.get('confirmPassword').touched || \n    registerForm.hasError('mismatch')  && registerForm.get('confirmPassword').touched}\"\n    formControlName=\"confirmPassword\"/>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword').hasError('required')  && registerForm.get('confirmPassword').touched\">Confirm password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('mismatch')  && registerForm.get('confirmPassword').touched\">Passwords must match</div>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n  </div>\n</form>\n<!-- \n<p>Form Value : {{registerForm.value | json}}</p>\n<p>Form State : {{registerForm.status | json}}</p> -->","import { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { Routes } from '@angular/router';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessageListResolver } from './_resolvers/message-list.resolver';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    {path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            { path: 'members', component: MemberListComponent, resolve: { users: MemberListResolver} },\r\n            { path: 'members/:id', component: MemberDetailComponent, resolve: { user: MemberDetailResolver} },\r\n            { path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChanges],\r\n                resolve: { user: MemberEditResolver}},\r\n            { path: 'messages', component: MessagesComponent, resolve: { messages: MessageListResolver} },\r\n            { path: 'lists', component: ListsComponent, resolve: { users: ListsResolver}},\r\n            { path: 'admin', component: AdminPanelComponent, data: {roles: ['Admin', 'Moderator']}}\r\n        ]\r\n    },\r\n    {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Value } from '../_models/Value';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: 'app-values',\n  templateUrl: './values.component.html',\n  styleUrls: ['./values.component.css']\n})\nexport class ValuesComponent implements OnInit {\n  values: Value[];\n  constructor(private http: HttpClient, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n\n  getValues() {\n    this.http.get('http://localhost:5000/api/values').subscribe((response: any) => {\n      this.values = response;\n      this.alertifyService.success('values received');\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n}\n","<p *ngFor=\"let value of values\">\n  {{value.id}}, {{value.name}}\n</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}