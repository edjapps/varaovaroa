{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_directives/hasRole.directive.ts","./src/app/_guards/auth.guard.ts","./src/app/_models/pagination.ts","./src/app/_resolvers/lists.resolver.ts","./src/app/_resolvers/member-detail.resolver.ts","./src/app/_resolvers/member-edit.resolver.ts","./src/app/_resolvers/member-list.resolver.ts","./src/app/_resolvers/message-list.resolver.ts","./src/app/_services/Alertify.service.ts","./src/app/_services/Auth.service.ts","./src/app/_services/error.interceptor.ts","./src/app/_services/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/constants.ts","./src/app/contact-us/contact-us.component.ts","./src/app/contact-us/contact-us.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/member-reload/member-reload.component.ts","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/routes.ts","./src/app/values/values.component.ts","./src/app/values/values.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Directive, Input, ViewContainerRef, TemplateRef, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../_services/Auth.service\";\n\n@Directive({\n  selector: \"[appHasRole]\",\n})\nexport class HasRoleDirective implements OnInit{\n  @Input() appHasRole: string[];\n  isVisible = false;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private authService: AuthService\n  ) {}\n\n    ngOnInit() {\n      // const userRoles = this.authService.decodedToken.role as Array<string>;\n\n      // // if user has no roles, clear the viewContainerRef\n      // if (!userRoles) {\n      //   this.viewContainerRef.clear();\n      // }\n\n      // // if user has role needed then render the element\n      // if (this.authService.roleMatch(this.appHasRole)) {\n      //   if (!this.isVisible) {\n      //     this.isVisible = true;\n      //     this.viewContainerRef.createEmbeddedView(this.templateRef);\n      //   } else {\n      //     this.isVisible = false;\n      //     this.viewContainerRef.clear();\n      //   }\n      // }\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { AuthService } from \"../_services/Auth.service\";\nimport { Router, CanActivate, ActivatedRouteSnapshot } from \"@angular/router\";\nimport { AlertifyService } from \"../_services/Alertify.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) {}\n\n  canActivate(next: ActivatedRouteSnapshot): boolean {\n    const roles = next.firstChild.data[\"roles\"] as Array<string>;\n    if (roles) {\n      const match = this.authService.roleMatch(roles);\n      if (match) {\n        return true;\n      } else {\n        this.router.navigate([\"members\"]);\n        this.alertify.error(\"Você não tem acesso a essa área!\");\n      }\n    }\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    this.alertify.error(\"É preciso estar logado!\");\n    this.router.navigate([\"/home\"]);\n    return false;\n  }\n}","export interface Pagination {\n    itemsPerPage: number;\n    totalPages: number;\n    currentPage: number;\n    totalItems: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\nimport { UserService } from '../_services/user.service';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { PaginatedResult } from '../_models/pagination';\nimport { Constants } from '../common/constants';\n\n@Injectable()\n\nexport class ListsResolver implements Resolve<PaginatedResult<User[]>> {\n    pageNumber = 1;\n    pageSize = 5;\n    likesParam = 'Likers';\n\n    constructor(private userService: UserService, \n                private alertify: AlertifyService, \n                private router: Router) {}\n                \n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<User[]>> {\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\n            catchError(error => {\n                this.alertify.error(Constants.GetDataError);\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { Constants } from '../common/constants';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\n\nexport class MemberDetailResolver implements Resolve<User> {\n    constructor(private userService: UserService, private alertify: AlertifyService, private router: Router) { }\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        return this.userService.getUser(route.params['id']).pipe(\n            catchError(error => {\n                this.alertify.error(Constants.GetDataError);\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Router, Resolve } from \"@angular/router\";\nimport { User } from \"../_models/user\";\nimport { Observable, of } from \"rxjs\";\nimport { UserService } from \"../_services/user.service\";\nimport { AlertifyService } from \"../_services/Alertify.service\";\nimport { AuthService } from \"../_services/Auth.service\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable()\nexport class MemberEditResolver implements Resolve<User> {\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\n    const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\n    return this.userService.getUser(id).pipe(\n      catchError((error) => {\n        this.alertify.error(error);\n        this.router.navigate([\"/members\"]);\n        return of(null);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\nimport { UserService } from '../_services/user.service';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { PaginatedResult } from '../_models/pagination';\nimport { Constants } from '../common/constants';\n\n@Injectable()\n\nexport class MemberListResolver implements Resolve<PaginatedResult<User[]>> {\n    pageNumber = 1;\n    pageSize = 5;\n\n    constructor(private userService: UserService, private alertify: AlertifyService, private router: Router) {}\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<User[]>> {\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\n            catchError(error => {\n                this.alertify.error(Constants.GetDataError);\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}","import { Injectable } from '@angular/core';\nimport { Message } from '../_models/Message';\nimport { UserService } from '../_services/user.service';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/Auth.service';\nimport { Constants } from '../common/constants';\n\n@Injectable()\n\nexport class MessageListResolver implements Resolve<PaginatedResult<Message[]>> {\n    pageNumber = 1;\n    pageSize = 5;\n    messageContainer = 'Unread';\n\n    constructor(private authService: AuthService, private userService: UserService,\n        private alertify: AlertifyService, private router: Router) { }\n\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginatedResult<Message[]>> {\n        return this.userService.getLastChats(this.authService.getCurrentUser().memberId,\n            this.pageNumber, this.pageSize, this.messageContainer)\n            .pipe(\n                catchError(error => {\n                    this.alertify.error(Constants.GetDataError);\n                    this.router.navigate(['/home']);\n                    return of(null);\n                })\n            );\n    }\n}","import { Injectable } from \"@angular/core\";\nimport * as alertify from \"alertifyjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AlertifyService {\n  constructor() { }\n\n  confirm(title: string, message: string, okCallback: () => any) {\n    alertify.confirm(title, message, (e: any) => {\n      if (e) {\n        okCallback();\n      }\n    }, '');\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string, error?: string) {\n    alertify.error(message);\n    if (error) console.log(error);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { API_KEY, API_PATH } from \"src/environments/environment\";\nimport { Contact } from \"../_models/contact\";\nimport { User } from \"../_models/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\n\nexport class AuthService {\n  token: string;\n  helper = new JwtHelperService();\n  decodedToken: any;\n  username: string;\n  id: number;\n  photoUrl2: string;\n  photoUrl = new BehaviorSubject<string>(null);\n\n  constructor(private http: HttpClient) {}\n\n  loginAirtable(model: any) {\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\n\n    let params = new HttpParams();\n    params = params.append('fields[]', 'ID');\n    params = params.append('fields[]', 'Name');\n    params = params.append('fields[]', 'Age');\n    params = params.append('fields[]', 'Email');\n    params = params.append('fields[]', 'Gender');\n    params = params.append('fields[]', 'CreateDate');\n    params = params.append('fields[]', 'LastAccess');\n    params = params.append('fields[]', 'ImageUrl');\n    params = params.append('fields[]', 'City');\n    params = params.append('fields[]', 'UF');\n    params = params.append('fields[]', 'About');\n    params = params.append('fields[]', 'Seek');\n    params = params.append('fields[]', 'ActivitiesOfInterest2');\n    params = params.append('fields[]', 'MainImage');\n    params = params.append('fields[]', 'Favorites');\n\n    if (model){\n      params = params.append('filterByFormula', \"AND({Email}='\" + model.Username + \"',{Password}='\" + model.Password + \"')\");\n    }\n    else{\n      let memberId = this.getCurrentUser().memberId;\n      params = params.append('filterByFormula', `FIND(\"${memberId}\", MemberId) > 0`);\n    }\n    return this.http.get(API_PATH + 'Members', {\n      headers,\n      params\n    }).pipe(\n      map((response: any) => {\n        if (response) {\n          let record = response.records[0].fields;\n          let photoUrl = record.MainImage[0].url;\n\n          this.username = record.Name;\n          this.id = record.ID;\n          this.photoUrl.next(photoUrl);\n          this.photoUrl2 = photoUrl;\n\n          let user: User = {\n            knownAs: record.Name,\n            age: record.Age,\n            id: record.ID,\n            memberId: response.records[0].id,\n            userName: record.Name,\n            email: record.Email,\n            gender: record.Gender,\n            created: record.CreateDate,\n            lastActive: record.LastAccess,\n            photoUrl: photoUrl,\n            city: record.City.trim(),\n            county: record.UF,\n            introduction: record.About,\n            lookingFor: record.Seek,\n            interests: record.ActivitiesOfInterest2?.toString().split(',').join(', '),\n            favorites: record.Favorites\n          };\n          localStorage.setItem(\"currentUser\", JSON.stringify(user));\n          localStorage.setItem(\"favorites\", record.Favorites);\n          localStorage.setItem(\"userId\", record.ID);\n        }\n      })\n    );\n  }\n\n  checkLoginByEmail(username: string): Observable<string> {\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\n\n    let params = new HttpParams();\n    params = params.append('fields[]', 'ID');\n    params = params.append('fields[]', 'Name');    \n    params = params.append('filterByFormula', \"AND({Email}='\" + username + \"')\");\n\n    return this.http.get<any>(API_PATH + 'Members', {\n      headers,\n      params\n    }).pipe(\n      map((response: any) => {\n        if (response) {\n          // console.log(response.records[0].id);\n          return response.records[0].id        \n        }        \n      })\n    );    \n  }\n\n  forgotPasswordUpdate(memberId: string) {\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\n\n    return this.http.patch<any>(API_PATH + 'Members/' + memberId,\n      JSON.stringify({ \"fields\": { \"ForgotPasswordUpdate\": new Date() }, \"typecast\": true }),\n      { headers: httpHeaders });\n  }\n\n  contactUs(contact: Contact) {\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\n\n    const body = JSON.stringify({ \"fields\": { \"UserId\": `${contact.memberId}`, \"Name\": `${contact.name}`, \"Email\": `${contact.email}`, \"Message\": `${contact.message}` } });\n    return this.http.post(API_PATH + 'ContactUs', body, { headers: httpHeaders })\n      .pipe(map((response: any) => {\n        if (response) {\n          const id = response.id;\n        }\n      }));\n  }\n\n  getCurrentUser(): User {\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n    if (currentUser) {\n      this.id = currentUser.id;\n      this.username = currentUser.userName;\n      this.photoUrl.next(currentUser.photoUrl);\n    }\n    return currentUser;\n  }\n\n  loggedIn(): boolean {\n    const token = localStorage.getItem(\"currentUser\");\n    if (token) {\n      return true;\n    }\n    return false;\n  }\n\n  register(user: User) {\n    return this.http.post(API_PATH + \"auth/register\", user);\n  }\n\n  roleMatch(allowedRoles: Array<string>): boolean {\n    let isMatch = false;\n    const userRoles = this.decodedToken.role as Array<string>;\n    allowedRoles.forEach((element) => {\n      if (userRoles.includes(element)) {\n        isMatch = true;\n        return;\n      }\n    });\n    return isMatch;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpErrorResponse,\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n} from '@angular/common/http';\nimport { catchError, map, finalize } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private spinner: NgxSpinnerService) {}\n\n  intercept(\n    req: import('@angular/common/http').HttpRequest<any>,\n    next: import('@angular/common/http').HttpHandler\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\n    // Show this spinner for each request\n    this.spinner.show();\n\n    return next.handle(req).pipe(\n      catchError((error) => {\n        // this is used for 401 Unauthorized error\n        if (error.status === 401) {\n          return throwError(error.statusText);\n        }\n\n        if (error instanceof HttpErrorResponse) {\n          // This is used for 500 type of errors\n          const applicationError = error.headers.get('Application-Error');\n          if (applicationError) {\n            return throwError(applicationError);\n          }\n\n          // This is used for Modal State errors\n          const serverError = error.error;\n          let modalStateErrors = '';\n          if (serverError.errors && typeof serverError.errors === 'object') {\n            for (const key in serverError.errors) {\n              if (serverError.errors[key]) {\n                modalStateErrors += serverError.errors[key] + '\\n';\n              }\n            }\n          }\n          return throwError(modalStateErrors || serverError || 'serverError');\n        }\n      }),\n      finalize(() => {\n        // hide the spinner\n        this.spinner.hide();\n      })\n    );\n  }\n}\n\nexport const ErrorInterceptorProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true,\n};\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { API_KEY, API_PATH } from 'src/environments/environment';\r\nimport { Message } from '../_models/message';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { User } from '../_models/user';\r\nimport { AlertifyService } from './Alertify.service';\r\nimport { AuthService } from './Auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private cache: BehaviorSubject<PaginatedResult<User[]>> = new BehaviorSubject(null);  \r\n\r\n  constructor(private authService: AuthService, private http: HttpClient, private alertify: AlertifyService) { }  \r\n\r\n  getUsers(page?, itemsPerPage?, userParams?, likesParams?): Observable<PaginatedResult<User[]>> {\r\n    // if (this.cache.getValue() !== null) {\r\n    //   return new Observable<PaginatedResult<User[]>>((observer) => {\r\n    //     observer.next(this.cache.getValue());\r\n    //   });\r\n    // }\r\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\r\n    const httpHeaders = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('fields[]', 'ID');\r\n    params = params.append('fields[]', 'Name');\r\n    params = params.append('fields[]', 'Age');\r\n    params = params.append('fields[]', 'City');\r\n    params = params.append('fields[]', 'UF');\r\n    params = params.append('fields[]', 'MainImage');\r\n    params = params.append('sort%5B0%5D%5Bfield%5D', 'EditDate');\r\n    params = params.append('sort%5B0%5D%5Bdirection%5D', 'desc');\r\n\r\n    let favorites = localStorage.getItem(\"favorites\");\r\n    let newFavorites = '';\r\n\r\n    // Quem me curtiu\r\n    if (likesParams === 'Likers') {\r\n      let id = this.authService.getCurrentUser().memberId;\r\n      id = id.substring(id.length - 4);\r\n      params = params.append('filterByFormula', `IF(SEARCH('${id}',Favorites),1,0)>0`);\r\n    }\r\n    // Quem eu curti\r\n    else if (likesParams === 'Likees') {\r\n      let ids = favorites.split(',')\r\n      let search = '';\r\n\r\n      for (var i in ids) {\r\n        if (!ids[i]) continue;\r\n\r\n        search += `FIND(\"${ids[i]}\", MemberId) > 0,`;\r\n      }\r\n      search = `OR(${search.slice(0, -1)})`;\r\n      params = params.append('filterByFormula', search);\r\n    }\r\n    // Listas\r\n    else {\r\n      let gender = localStorage.getItem('gender') == 'Feminino' ? 'Masculino' : 'Feminino';\r\n      let uf = userParams?.uf ? userParams.uf : localStorage.getItem('uf');\r\n      let minAge = userParams?.minAge ? userParams.minAge : localStorage.getItem('minAge');\r\n      let maxAge = userParams?.maxAge ? userParams.maxAge : localStorage.getItem('maxAge');\r\n      params = params.append('filterByFormula', `AND({Gender}='${gender}',{County}='${uf}',{Age}>='${minAge}',{Age}<='${maxAge}',{Enabled}=1)`);\r\n    }\r\n    return this.http.get(API_PATH + 'Members',\r\n      {\r\n        headers: httpHeaders,\r\n        params\r\n      }).pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            paginatedResult.result = new Array();\r\n\r\n            for (var record of response.records) {\r\n              const memberId4 = record.id.substring(record.id.length - 4);\r\n              const isLiked = favorites.includes(memberId4);\r\n\r\n              if (likesParams === 'Likees') {\r\n                newFavorites += `${memberId4},`\r\n              }\r\n              let user: User = {\r\n                knownAs: record.fields.Name,\r\n                age: record.fields.Age,\r\n                id: record.fields.ID,\r\n                memberId: record.id,\r\n                userName: record.fields.Name,\r\n                photoUrl: record.fields.MainImage[0].url,\r\n                city: record.fields.City,\r\n                county: record.fields.UF,\r\n                isLiked: isLiked\r\n              };\r\n              paginatedResult.result.push(user);\r\n            }\r\n            if (likesParams === 'Likees' && favorites === newFavorites) {\r\n              localStorage.setItem(\"favorites\", newFavorites);\r\n              this.updateFavorites(newFavorites)\r\n                .then(obj => console.log(obj))\r\n                .catch(error => console.log(error));\r\n            }\r\n          }\r\n          paginatedResult.pagination = {\r\n            currentPage: page,\r\n            itemsPerPage: 6,\r\n            totalPages: paginatedResult.result.length / 6,\r\n            totalItems: paginatedResult.result.length\r\n          };\r\n          // this.cache.next(paginatedResult);\r\n          // return this.cache.getValue();  \r\n          return paginatedResult;        \r\n        })\r\n      );\r\n  }\r\n\r\n  getUserDetail(user: any): Observable<User> {\r\n    console.log(user.paramMap.get('id'));\r\n    return null;\r\n  }\r\n\r\n  getUser(id: number): Observable<User> {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n    let params = new HttpParams();\r\n    params = params.append('fields[]', 'ID');\r\n    params = params.append('fields[]', 'Name');\r\n    params = params.append('fields[]', 'Age');\r\n    params = params.append('fields[]', 'Email');\r\n    params = params.append('fields[]', 'Gender');\r\n    params = params.append('fields[]', 'CreateDate');\r\n    params = params.append('fields[]', 'LastAccess');\r\n    params = params.append('fields[]', 'City');\r\n    params = params.append('fields[]', 'County');\r\n    params = params.append('fields[]', 'UF');\r\n    params = params.append('fields[]', 'About');\r\n    params = params.append('fields[]', 'Seek');\r\n    params = params.append('fields[]', 'ActivitiesOfInterest2');\r\n    params = params.append('fields[]', 'OtherImages');\r\n    params = params.append('fields[]', 'ChristianTime');\r\n    params = params.append('fields[]', 'Church');\r\n    params = params.append('fields[]', 'Baptized');\r\n    params = params.append('fields[]', 'ConnectGroup');\r\n    params = params.append('fields[]', 'OtherCounty');\r\n    params = params.append('fields[]', 'OtherCountyMove');\r\n    params = params.append('fields[]', 'Height');\r\n    params = params.append('fields[]', 'MaritalStatus');\r\n    params = params.append('fields[]', 'Education');\r\n    params = params.append('fields[]', 'HaveKids');\r\n    params = params.append('fields[]', 'WantKids');\r\n    params = params.append('fields[]', 'ChurchAttendance');\r\n    params = params.append('fields[]', 'Relationship');\r\n    params = params.append('fields[]', 'ActivitiesOfInterest');\r\n    params = params.append('fields[]', 'RelatioshipWithKids');\r\n    params = params.append('fields[]', 'HolyFasting');\r\n    params = params.append('fields[]', 'HolyRelatioship');\r\n    params = params.append('fields[]', 'Smoke');\r\n    params = params.append('fields[]', 'DateOfBirth');\r\n    params = params.append('filterByFormula', `AND({ID}=${id})`);\r\n\r\n    const photosArray: Photo[] = [];\r\n    const favorites = localStorage.getItem(\"favorites\");\r\n\r\n    return this.http.get<User>(API_PATH + 'Members',\r\n      {\r\n        headers,\r\n        params\r\n      }).pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            let record = response.records[0].fields;\r\n\r\n            for (let i = 0; i < record.OtherImages.length; i++) {\r\n              const photo: Photo = {\r\n                id: 0, url: record.OtherImages[i].url, description: record.Name, dateAdded: new Date(), isApproved: true, isMain: true\r\n              };\r\n              photosArray.push(photo);\r\n            }\r\n            const memberId4 = response.records[0].id.substring(response.records[0].id.length - 4);\r\n            const isLiked = favorites.includes(memberId4);\r\n            const userId = localStorage.getItem(\"userId\");\r\n\r\n            let user: User = {\r\n              knownAs: record.Name,\r\n              age: record.Age,\r\n              id: record.ID,\r\n              memberId: response.records[0].id,\r\n              userName: record.Name,\r\n              email: record.Email,\r\n              gender: record.Gender,\r\n              created: record.CreateDate,\r\n              lastActive: record.LastAccess,\r\n              photoUrl: record.OtherImages[0].url,\r\n              city: record.City.trim(),\r\n              uf: record.UF,\r\n              county: record.County,\r\n              introduction: record.About,\r\n              lookingFor: record.Seek,\r\n              interests: record.ActivitiesOfInterest2?.toString().split(',').join(', '),\r\n              interestsArray: record.ActivitiesOfInterest2,\r\n              photos: photosArray,\r\n              isLiked: isLiked,\r\n              christianTime: record.ChristianTime,\r\n              church: record.Church,\r\n              baptized: record.Baptized,\r\n              connectGroup: record.ConnectGroup,\r\n              otherCounty: record.OtherCounty,\r\n              otherCountyMove: record.OtherCountyMove,\r\n              height: record.Height,\r\n              maritalStatus: record.MaritalStatus,\r\n              education: record.Education,\r\n              haveKids: record.HaveKids,\r\n              wantKids: record.WantKids,\r\n              churchAttendance: record.ChurchAttendance,\r\n              relationship: record.Relationship,\r\n              relatioshipWithKids: record.RelatioshipWithKids,\r\n              holyFasting: record.HolyFasting,\r\n              holyRelatioship: record.HolyRelatioship,\r\n              smoke: record.Smoke,\r\n              dateOfBirth: record.DateOfBirth,\r\n              isActiveUser: record.ID.toString() === userId\r\n            };\r\n            return user;\r\n          }\r\n          return null;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateFavorites(newFavorites: string) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    return this.http.patch<any>(API_PATH + 'Members/' + this.authService.getCurrentUser().memberId,\r\n      JSON.stringify({ \"fields\": { \"Favorites\": newFavorites }, \"typecast\": true }),\r\n      { headers: httpHeaders }).toPromise();\r\n  }\r\n\r\n  getLastChats(memberId: string, page?, itemsPerPage?, messageContainer?, recipientId?): Observable<PaginatedResult<Message[]>> {\r\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n    let params = new HttpParams();\r\n    params = params.append('sort%5B0%5D%5Bfield%5D', 'LastDate');\r\n    params = params.append('sort%5B0%5D%5Bdirection%5D', 'desc');\r\n\r\n    // It's not working with OR(AND)\r\n    if (recipientId)\r\n      var param = `AND(OR({Member1Id}='${recipientId}',{Member2Id}='${recipientId}'),OR({Member1Id}='${memberId}',{Member2Id}='${memberId}'))`;\r\n    else\r\n      var param = `OR({Member1Id}='${memberId}',{Member2Id}='${memberId}')`;\r\n\r\n    params = params.append('filterByFormula', `${param}`);\r\n\r\n    return this.http.get<Message[]>(API_PATH + 'LastChat', { headers, params }).pipe(\r\n      map((response: any) => {\r\n        if (response) {\r\n          const msgs: Message[] = [];\r\n\r\n          for (let i = 0; i < response.records.length; i++) {\r\n            let field = response.records[i].fields;\r\n\r\n            if (field.Member1Enabled && field.Member2Enabled) {\r\n              const msg: Message = {\r\n                id: 1,\r\n                senderId: memberId === field.Member1[0] ? field.Member2Id2[0] : field.Member1Id2[0],\r\n                senderKnownAs: memberId === field.Member1[0] ? field.Member2Name[0] : field.Member1Name[0],\r\n                senderPhotoUrl: memberId === field.Member1[0] ? field.Member2MainImage[0].url : field.Member1MainImage[0].url,\r\n                recipientId: memberId === field.Member1[0] ? field.Member1Id2[0] : field.Member2Id2[0],\r\n                recipientKnownAs: memberId === field.Member1[0] ? field.Member1Name[0] : field.Member2Name[0],\r\n                recipientPhotoUrl: memberId === field.Member1[0] ? field.Member1MainImage[0].url : field.Member2MainImage[0].url,\r\n                content: field.LastMessage,\r\n                isRead: true,\r\n                dateRead: new Date(),\r\n                messageSent: field.LastDate,\r\n                lastChatId: response.records[i].id\r\n              };\r\n              msgs.push(msg);\r\n            }\r\n          }\r\n          msgs.sort((a, b) => (a.messageSent > b.messageSent ? -1 : 1)); //Descending\r\n          // msgs.sort((a, b) => (a.messageSent < b.messageSent ? -1 : 1)); //Ascending\r\n          paginatedResult.result = msgs;\r\n          paginatedResult.pagination = {\r\n            currentPage: page,\r\n            itemsPerPage: 6,\r\n            totalPages: paginatedResult.result.length / 6,\r\n            totalItems: paginatedResult.result.length\r\n          };\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMessages(memberId: number, recipientId: number): Observable<Message[]> {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n    const msgs: Message[] = [];\r\n    let params = new HttpParams();\r\n    // params = params.append('sort%5B0%5D%5Bfield%5D', 'CreateDate');\r\n    // params = params.append('sort%5B0%5D%5Bdirection%5D', 'desc');\r\n    params = params.append('filterByFormula', `OR(AND({Member1Id}='${recipientId}',{Member2Id}='${memberId}'),AND({Member1Id}='${memberId}',{Member2Id}='${recipientId}'))`);\r\n\r\n    return this.http.get<Message[]>(API_PATH + 'Chats', { headers, params })\r\n      .pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            for (let i = 0; i < response.records.length; i++) {\r\n              let field = response.records[i].fields;\r\n\r\n              if (field.Member1Id && field.Member2Id) {\r\n                const msg: Message = {\r\n                  id: 1,\r\n                  senderId: field.Member1Id[0],\r\n                  senderKnownAs: field.Member1Name[0],\r\n                  senderPhotoUrl: field.Member1MainImage[0].url,\r\n                  recipientId: field.Member2Id[0],\r\n                  recipientKnownAs: field.Member2Name[0],\r\n                  recipientPhotoUrl: field.Member2MainImage[0].url,\r\n                  content: field.Message,\r\n                  isRead: true,\r\n                  dateRead: new Date(),\r\n                  messageSent: field.CreateDate,\r\n                  chatId: field.ChatId\r\n                };\r\n                msgs.push(msg);\r\n              }\r\n            }\r\n            msgs.sort((a, b) => (a.messageSent < b.messageSent ? -1 : 1));\r\n          }\r\n          return msgs;\r\n        })\r\n      );\r\n  }\r\n\r\n  addMessage(memberId: string, recipientId: string, message: string, messagesTotal: number) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    if (messagesTotal > 0) {\r\n      this.updateLastChat(memberId, recipientId, message);\r\n    }\r\n    else {\r\n      this.insertLastChat(memberId, recipientId, message)\r\n        .subscribe((data: any) => {\r\n          console.log('Sucess!');\r\n        }, error => {\r\n          console.log(error.error.message);\r\n        });\r\n    }\r\n    const body = JSON.stringify({ \"fields\": { \"Member1\": [`${memberId}`], \"Message\": `${message}`, \"Member2\": [`${recipientId}`], } });\r\n    return this.http.post(API_PATH + 'Chats/', body, { headers: httpHeaders })\r\n      .pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            const msg: Message = {\r\n              id: 1,\r\n              senderId: response.fields.Member1Id[0],\r\n              senderKnownAs: response.fields.Member1Name[0],\r\n              senderPhotoUrl: response.fields.Member1MainImage[0].url,\r\n              recipientId: response.fields.Member2Id[0],\r\n              recipientKnownAs: response.fields.Member2Name[0],\r\n              recipientPhotoUrl: response.fields.Member2MainImage[0].url,\r\n              content: response.fields.Message,\r\n              isRead: true,\r\n              dateRead: new Date(),\r\n              messageSent: response.fields.CreateDate,\r\n              chatId: response.fields.ChatId\r\n            };\r\n            return msg;\r\n          }\r\n        }\r\n        ));\r\n  }\r\n\r\n  updateLastChat(memberId: string, recipientId: string, message: string) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    this.getLastChats(memberId, null, null, null, recipientId)\r\n      .subscribe((data: PaginatedResult<Message[]>) => {\r\n        let lastChatId = data.result[0].lastChatId;\r\n\r\n        this.http.patch<any>(API_PATH + 'LastChat/' + lastChatId,\r\n          JSON.stringify({ \"fields\": { \"LastMessage\": `${message}` }, \"typecast\": true }),\r\n          { headers: httpHeaders }).toPromise();\r\n\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  insertLastChat(memberId: string, recipientId: string, message: string) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    const body = JSON.stringify({ \"fields\": { \"Member1\": [`${memberId}`], \"LastDate\": `${new Date()}`, \"LastMessage\": `${message}`, \"Member2\": [`${recipientId}`], } });\r\n    return this.http.post(API_PATH + 'LastChat', body, { headers: httpHeaders })\r\n      .pipe(map((response: any) => {\r\n        if (response) {\r\n          const id = response.id;\r\n        }\r\n      }));\r\n  }\r\n\r\n  deleteLastChat(message: Message) {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n\r\n    return this.http.delete(API_PATH + 'LastChat/' + message.lastChatId, { headers: headers })\r\n      .pipe(map((response: any) => {\r\n        if (response) {\r\n          const id = response.id;\r\n          return true;\r\n        }\r\n        return false;\r\n      }));\r\n  }\r\n\r\n  deleteChats(message: Message) {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n\r\n\r\n    // this.getMessages(message.senderId, message.recipientId)\r\n    //   .subscribe((messages: Message[]) => {\r\n\r\n    //     for (var i in messages) {\r\n    //       const chatId = messages[i].chatId;\r\n\r\n    //       this.http.delete(API_PATH + 'Chats/' + chatId, { headers: headers })\r\n    //         .pipe(map((response2: any) => {\r\n    //           if (response2) {\r\n    //             const id = response2.id;\r\n    //           }\r\n    //         }));\r\n    //     }\r\n    //     return true;\r\n    //   },\r\n    //     (error) => {\r\n    //       return false;\r\n    //     }\r\n    //   );\r\n    //   return false;\r\n    // return this.http.delete(API_PATH + 'Chats/' + 'recRqZwv7uzRWk52E', { headers: headers })\r\n    //   .pipe(map((response: any) => {\r\n    //     if (response) {\r\n    //       const id = response.id;\r\n    //       return true;\r\n    //     }\r\n    //     return false;\r\n    //   }));\r\n  }\r\n\r\n\r\n\r\n\r\n  saveLike(recipientMemberId: string, isLiked: boolean) {\r\n    const httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + API_KEY });\r\n\r\n    const memberId4 = recipientMemberId.substring(recipientMemberId.length - 4);\r\n    const memberId = this.authService.getCurrentUser().memberId;\r\n\r\n    let favorites = localStorage.getItem(\"favorites\");\r\n\r\n    if (isLiked) {\r\n      favorites += `${memberId4},`;\r\n    }\r\n    else {\r\n      favorites = favorites.replace(`${memberId4},`, \"\");\r\n    }\r\n    localStorage.setItem(\"favorites\", favorites);\r\n\r\n    return this.http.patch<any>(API_PATH + 'Members/' + memberId,\r\n      JSON.stringify({ \"fields\": { \"Favorites\": favorites }, \"typecast\": true }),\r\n      { headers: httpHeaders });\r\n  }\r\n\r\n  deleteUser(memberId: string) {\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + API_KEY);\r\n\r\n    return this.http.delete(API_PATH + 'Members/' + memberId, { headers: headers })\r\n      .pipe(map((response: any) => {\r\n        if (response) {\r\n          const id = response.id;\r\n          return true;\r\n        }\r\n        return false;\r\n      }));\r\n  }\r\n\r\n  updateUser(id: number, user: User) {\r\n    return this.http.put<User>(API_PATH + 'users/' + id, user);\r\n  }\r\n\r\n  setMainPhoto(userId: number, id: number) {\r\n    return this.http.post(API_PATH + 'users/' + userId + '/photos/' + id + '/setMain', {});\r\n  }\r\n\r\n  deletePhoto(userId: number, id: number) {\r\n    return this.http.delete(API_PATH + 'users/' + userId + '/photos/' + id);\r\n  }\r\n\r\n\r\n\r\n  markAsRead(userId: number, messageId: number) {\r\n    this.http.post(API_PATH + 'users/' + userId + '/message/' + messageId + '/read', {})\r\n      .subscribe();\r\n  }\r\n}\r\nfunction of(arg0: null): Observable<PaginatedResult<Message[]>> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/Auth.service';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  title = 'Varão Varoa App';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.username;//.getUsername();\n\n    // const user: User = JSON.parse(localStorage.getItem(\"user\"));\n    // if (user) {\n    //   this.authService.photoUrl.next(user.photoUrl);\n    // }\n  }\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n<ngx-spinner></ngx-spinner>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from 'ngx-gallery-9';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ValuesComponent } from './values/values.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { appRoutes } from './routes';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessageListResolver } from './_resolvers/message-list.resolver';\r\nimport { HasRoleDirective } from './_directives/hasRole.directive';\r\nimport { LOCALE_ID } from '@angular/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localePt from '@angular/common/locales/pt';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\nimport { MemberReloadComponent } from './member-reload/member-reload.component';\r\n\r\nregisterLocaleData(localePt);\r\n\r\nexport function tokenGetter() {\r\n      return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      ValuesComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      ListsComponent,\r\n      MessagesComponent,\r\n      MemberListComponent,\r\n      MemberCardComponent,\r\n      MemberDetailComponent,\r\n      MemberEditComponent,\r\n      PhotoEditorComponent,\r\n      MemberMessagesComponent,\r\n      HasRoleDirective,\r\n      ContactUsComponent,\r\n      MemberReloadComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      RouterModule,\r\n      BrowserAnimationsModule,\r\n      BsDropdownModule.forRoot(),\r\n      HttpClientModule,\r\n      ButtonsModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      JwtModule.forRoot({\r\n         config: {\r\n           tokenGetter: tokenGetter,\r\n           whitelistedDomains: ['localhost:5000'],\r\n           blacklistedRoutes: ['localhost:5000/api/auth'],\r\n         }\r\n       }),\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      TabsModule.forRoot(),\r\n      BsDatepickerModule.forRoot(),\r\n      TimeagoModule.forRoot(),\r\n      PaginationModule.forRoot(),\r\n      NgxGalleryModule,\r\n      FileUploadModule,\r\n      ModalModule.forRoot(),\r\n      NgxSpinnerModule\r\n   ],\r\n   providers: [\r\n      ErrorInterceptorProvider,\r\n      MemberListResolver,\r\n      MemberEditResolver,\r\n      MemberDetailResolver,\r\n      ListsResolver,\r\n      MessageListResolver,\r\n      { provide: LOCALE_ID, useValue: 'pt-BR' }\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","export class Constants {\n    public static GetDataError: string = \"Erro ao buscar dados, tente novamente depois!\";\n    public static SaveDataError: string = \"Erro ao salvar dados, tente novamente depois!\";\n\n    getShortId() {\n        // let id = localStorage.getItem(\"token2\");\n        // id = id.substring(id.length - 4);\n        // return id;\n    }\n}\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Contact } from '../_models/contact';\nimport { User } from '../_models/user';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { AuthService } from '../_services/Auth.service';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\nexport class ContactUsComponent implements OnInit {\n  contact: Contact;\n  currentUser: User;\n  registerForm: FormGroup;\n  colorTheme = 'theme-red';\n\n  constructor(private router: Router, private authService: AuthService, private alertify: AlertifyService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n    this.registerForm = this.fb.group({\n      name: [this.currentUser.knownAs, Validators.required],\n      email: [this.currentUser.email, Validators.email],\n      message: ['', Validators.required]\n    });\n  }\n\n  register() {\n    this.contact = Object.assign({}, this.registerForm.value);\n    this.contact.memberId = this.currentUser.memberId;\n    this.authService.contactUs(this.contact).subscribe(next => {\n      this.alertify.success('Contato enviado com Sucesso!');\n      this.registerForm.reset()\n    }, error => {\n      console.log(error);\n      this.alertify.error('Erro ao enviar contato! Envie pelo Insta @VaraoVaroa');\n    });\n  }\n}","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-8\">\n            <br>\n            <form [formGroup]=\"registerForm\" (submit)=\"register()\" autocomplete=\"off\">\n                <h2 class=\"text-center text-primary\">Fale Conosco</h2>\n                <hr />\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" \n                        [ngClass]=\"{'is-invalid': registerForm.get('name').errors && registerForm.get('name').touched }\"\n                        placeholder=\"Nome\" formControlName=\"name\" />\n                    <div class=\"invalid-feedback\">Informe seu Nome</div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" \n                        [ngClass]=\"{'is-invalid': registerForm.get('email').errors && registerForm.get('email').touched }\"\n                        placeholder=\"Email\" formControlName=\"email\" />\n                    <div class=\"invalid-feedback\">Informe um Email válido</div>\n                </div>\n                <div class=\"form-group\">\n                    <textarea placeholder=\"Mensagem\" formControlName=\"message\" rows=\"5\" class=\"form-control\"\n                        [ngClass]=\"{'is-invalid': registerForm.get('message').errors && registerForm.get('message').touched }\"></textarea>\n                    <div class=\"invalid-feedback\"\n                        *ngIf=\"registerForm.get('message').hasError('required') && registerForm.get('message').touched\">\n                        Informe uma Mensagem</div>\n                    <div class=\"invalid-feedback\"\n                        *ngIf=\"registerForm.get('message').hasError('minlength') && registerForm.get('message').touched\">\n                        Informe uma Mensagem com pelo menos 10 caracteres</div>\n                </div>\n                <div class=\"form-group text-center\">\n                    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\">Enviar</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CREATE_FORM, environment } from 'src/environments/environment';\r\nimport { AuthService } from '../_services/Auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  showHideRegister: boolean;\r\n  createUrl: SafeResourceUrl;\r\n  loading: boolean;\r\n  version: string = environment.appVersion;\r\n  year: number = new Date().getFullYear();\r\n  \r\n  constructor(public authService: AuthService, private router: Router, private spinner: NgxSpinnerService, private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit() {\r\n    //TODO Não esta acionando o Spinner\r\n    this.createUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`https://airtable.com/embed/${CREATE_FORM}`);\r\n  }\r\n\r\n  hideSpinner() {\r\n    // this.spinner.hide();\r\n    this.loading = false;\r\n  }\r\n\r\n  loggedIn() {\r\n    var isLogged = this.authService.loggedIn();\r\n    return isLogged;\r\n  }\r\n\r\n  toggleRegister() {\r\n    this.showHideRegister = !this.showHideRegister;\r\n    // this.spinner.show();\r\n    if (this.showHideRegister) this.loading = true;\r\n  }\r\n\r\n  toggleLists() {\r\n    this.router.navigate(['/members']);\r\n  }\r\n}\r\n","<div class=\"container mt-5\" *ngIf=\"loggedIn(); then loggedInTemplate else loggedOutTemplate\"></div>\r\n\r\n<ng-template #loggedInTemplate>\r\n  <div style=\"text-align:center\">\r\n    <br />\r\n    <h1>Encontre seu Varão / Varoa</h1>\r\n    <p class=\"lead\">Navegue na Listas de Cristãos, filtre por idade e UF!</p>\r\n    <div class=\"text-center\">\r\n      <button class=\"btn btn-info btn-lg mr-2\" (click)=\"toggleLists()\">Vamos lá!</button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #loggedOutTemplate>\r\n  <div style=\"text-align:center\" *ngIf=\"!showHideRegister\">\r\n    <br />\r\n    <h1>Encontre seu Varão / Varoa</h1>\r\n    <p class=\"lead\">Tudo que você precisa é se cadastrar ou efetuar seu login!</p>\r\n    <div class=\"text-center\">\r\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"toggleRegister()\">Quero me cadastrar!</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"text-align:center\" *ngIf=\"loading\">\r\n    <br />\r\n    <h3>Aguarde! Carregando Formulário...</h3>    \r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-8\" *ngIf=\"showHideRegister\">        \r\n        <iframe (load)=\"hideSpinner()\" class=\"airtable-embed\" [src]=\"createUrl\" frameborder=\"0\" onmousewheel=\"\"\r\n          width=\"100%\" height=\"533\"></iframe>\r\n        <!-- <app-register (emitCancelRegister)=\"toggleRegister()\"></app-register> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"footer\">\r\n  © {{year}} Varão Varoa. Todos os direitos reservados - Versão {{version}}&nbsp;&nbsp;&nbsp;\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PaginatedResult, Pagination } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\n\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string = 'Likers';\n\n  constructor(private userService: UserService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((response: PaginatedResult<User[]>) => {\n        this.users = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n}","<div class=\"text-center mt-3\">\r\n  <h2>{{likesParam === 'Likers' ? 'Quem me curtiu!' : 'Quem eu curti!'}} : {{pagination.totalItems}}</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <div class=\"row\">\r\n    <div class=\"btn-group\">\r\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\" (click)=\"loadUsers()\">\r\n        Quem me curtiu!</button>\r\n      <button class=\"btn btn-info\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\" (click)=\"loadUsers()\">\r\n        Quem eu curti!</button>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"row\">\r\n    <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\r\n      <app-member-card [user]=\"user\"></app-member-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"d-flex justify-content-center\" *ngIf=\"pagination.totalItems > 0\">\r\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\" lastText=\"&raquo;\"></pagination>\r\n</div> -->\r\n\r\n<div style=\"position: absolute; left: 50%; top: 50%;\" *ngIf=\"pagination.totalItems === 0\">\r\n  <div class=\"alert alert-info\" role=\"alert\" style=\"position: relative; left: -50%;\">\r\n    <p><i class=\"fa fa-bell\"></i>\r\n      {{likesParam === 'Likers'\r\n        ? 'Você ainda não recebeu uma curtida, navegue nas listas de Cristãos e entre em contato!'\r\n        : 'Você ainda não curtiu ninguém, veja quem te curtiu ou navegue nas listas de Cristãos!'}}</p>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { AuthService } from '../_services/Auth.service';\n\n@Component({\n  selector: 'app-member-reload',\n  templateUrl: './member-reload.component.html',\n  styleUrls: ['./member-reload.component.css']\n})\nexport class MemberReloadComponent implements OnInit {\n\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.loginAirtable(null).subscribe(next => {\n      this.alertify.success('Dados atualizados e carregados com Sucesso!');\n      this.router.navigate(['/home']);\n    }, error => {\n      this.alertify.error('Falha ao carregar seus dados!');\n    });\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() user: User;\r\n\r\n  constructor(private userService: UserService, private alertifyService: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  sendLike() {\r\n    this.userService.saveLike(this.user.memberId, true).subscribe(response => {\r\n      this.alertifyService.success('Você curtiu ' + this.user.knownAs);\r\n      this.user.isLiked = true;\r\n    }, error => {\r\n      this.alertifyService.error('Erro ao curtir, tente novamente mais tarde!', error);\r\n    });\r\n  }\r\n\r\n  sendDislike() {\r\n    this.alertifyService.confirm('Descurtir?',`Deseja mesmo descurtir ${this.user.knownAs} ?`, () => {\r\n      this.userService.saveLike(this.user.memberId, false).subscribe(response => {\r\n        this.alertifyService.success('Você descurtiu ' + this.user.knownAs);\r\n        this.user.isLiked = false;\r\n      }, error => {\r\n        this.alertifyService.error('Erro ao descurtir, tente novamente mais tarde!', error);\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"card mb-4\">\r\n  <div class=\"card-img-wrapper\">\r\n    <a [routerLink]=\"['/members', user.id]\" routerLinkActive=\"router-link-active\" title=\"Clique para abrir o Perfil!\"\r\n      >\r\n      <img src=\"{{ user.photoUrl || '../../../assets/user.png' }}\" alt=\"...\" class=\"card-img-top\" />\r\n    </a>\r\n\r\n    <button class=\"btn btn-danger member-icon\" *ngIf=\"user.isLiked\" (click)=\"sendDislike()\"\r\n      title=\"Clique para Descurtir!\"><i class=\"fa fa-heart\"></i></button>\r\n\r\n    <ul class=\"list-inline member-icons animate text-center\">\r\n      <li class=\"list-inline-item\">\r\n        <a class=\"btn btn-primary\" [routerLink]=\"['/members', user.id]\" routerLinkActive=\"router-link-active\"\r\n          title=\"Clique para abrir o Perfil!\" >\r\n          <i class=\"fa fa-user\"></i>\r\n        </a>\r\n      </li>\r\n      <li class=\"list-inline-item\" *ngIf=\"!user.isLiked\">\r\n        <button class=\"btn btn-primary\" (click)=\"sendLike()\" title=\"Clique para abrir Curtir!\">\r\n          <i class=\"fa fa-heart\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button class=\"btn btn-primary\" [routerLink]=\"['/members', user.id]\" [queryParams]=\"{ tab: 3 }\"\r\n          title=\"Clique para enviar uma Mensagem!\">\r\n          <i class=\"fa fa-envelope\"></i>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n\r\n  </div>\r\n  <div class=\"card-body p-1\">\r\n    <h6 class=\"card-title text-center mb-1\">\r\n      {{ user.knownAs }}, {{ user.age }}\r\n    </h6>\r\n    <p class=\"card-text text-muted text-center\">\r\n      {{ user.city }} - {{ user.county }}\r\n    </p>\r\n  </div>\r\n</div>","import { EDIT_FORM, MAIN_IMAGE, OTHER_IMAGES } from './../../../environments/environment';\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { TabsetComponent } from \"ngx-bootstrap/tabs/public_api\";\r\nimport {\r\n  NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions\r\n} from \"ngx-gallery-9\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { User } from \"src/app/_models/user\";\r\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\r\nimport { UserService } from \"src/app/_services/user.service\";\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: \"app-member-detail\",\r\n  templateUrl: \"./member-detail.component.html\",\r\n  styleUrls: [\"./member-detail.component.css\"],\r\n})\r\nexport class MemberDetailComponent implements OnInit {\r\n  user: User;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  @ViewChild(\"memberTabs\", { static: true }) memberTabs: TabsetComponent;\r\n  messageTabVav: boolean;\r\n  editProfile: boolean;\r\n  loading: boolean;\r\n  editUrl: SafeResourceUrl;\r\n  fields: string;\r\n\r\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\r\n    private route: ActivatedRoute, private router: Router, private spinner: NgxSpinnerService, private sanitizer: DomSanitizer) { }\r\n\r\n    ngOnInit() {    \r\n    this.route.data.subscribe((data) => {\r\n      this.user = data[\"user\"];\r\n\r\n      if (this.user.isActiveUser) {\r\n        this.fields = `?prefill_MemberIdToUpdate=${this.user.memberId}` +\r\n          `&prefill_Name=${this.user.knownAs}` +\r\n          `&prefill_DateOfBirth=${this.user.dateOfBirth}` +\r\n          `&prefill_County=${this.user.county}` +\r\n          `&prefill_City=${this.user.city}` +\r\n          `&prefill_About=${this.user.introduction}` +\r\n          `&prefill_Seek=${this.user.lookingFor}` +\r\n          `&prefill_ChristianTime=${this.user.christianTime}` +\r\n          `&prefill_Church=${this.user.church}` +\r\n          `&prefill_ConnectGroup=${this.user.connectGroup}` +\r\n          `&prefill_Baptized=${this.user.baptized}` +\r\n          `&prefill_OtherCounty=${this.user.otherCounty}` +\r\n          `&prefill_Height=${this.user.height}` +\r\n          `&prefill_MaritalStatus=${this.user.maritalStatus}` +\r\n          `&prefill_Education=${this.user.education}` +\r\n          `&prefill_HaveKids=${this.user.haveKids}` +\r\n          `&prefill_WantKids=${this.user.wantKids}` +\r\n          `&prefill_ChurchAttendance=${this.user.churchAttendance}` +\r\n          `&prefill_Relationship=${this.user.relationship}` +\r\n          `&prefill_ActivitiesOfInterest2=${this.user.interestsArray}` +\r\n          `&prefill_RelatioshipWithKids=${this.user.relatioshipWithKids}` +\r\n          `&prefill_HolyFasting=${this.user.holyFasting}` +\r\n          `&prefill_HolyRelatioship=${this.user.holyRelatioship}` +\r\n          `&prefill_Smoke=${this.user.smoke}` +\r\n          `&prefill_OtherCountyMove=${this.user.otherCountyMove}` +\r\n          `&prefill_Sexo=${this.user.gender}`;\r\n      }\r\n      this.galleryOptions = [\r\n        {\r\n          width: \"400px\",\r\n          height: \"400px\",\r\n          thumbnailsColumns: 4,\r\n          imageAnimation: NgxGalleryAnimation.Slide,\r\n        },\r\n        {\r\n          breakpoint: 800,\r\n          width: \"100%\",\r\n          height: \"600px\",\r\n          imagePercent: 80,\r\n          thumbnailsPercent: 20,\r\n          thumbnailsMargin: 20,\r\n          thumbnailMargin: 20,\r\n        },\r\n        {\r\n          breakpoint: 400,\r\n          preview: false,\r\n        },\r\n      ];\r\n      this.galleryImages = this.getImages();\r\n    });\r\n    this.route.queryParams.subscribe((params) => {\r\n      const selectedTab = params[\"tab\"];\r\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\r\n    });\r\n  }  \r\n\r\n  sendLike() {\r\n    this.userService.saveLike(this.user.memberId, true).subscribe(response => {\r\n      this.alertifyService.success('Você curtiu ' + this.user.knownAs);\r\n      this.user.isLiked = true;\r\n    }, error => {\r\n      this.alertifyService.error('Erro ao curtir, tente novamente mais tarde!', error);\r\n    });\r\n  }\r\n\r\n  sendDislike() {\r\n    this.alertifyService.confirm('Descurtir?', `Deseja mesmo descurtir ${this.user.knownAs} ?`, () => {\r\n      this.userService.saveLike(this.user.memberId, false).subscribe(response => {\r\n        this.alertifyService.success('Você descurtiu ' + this.user.knownAs);\r\n        this.user.isLiked = false;\r\n      }, error => {\r\n        this.alertifyService.error('Erro ao descurtir, tente novamente mais tarde!', error);\r\n      });\r\n    });\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  getImages() {\r\n    const images = [];\r\n    for (const photo of this.user.photos) {\r\n      if (photo.isApproved) {\r\n        images.push({\r\n          small: photo.url,\r\n          medium: photo.url,\r\n          big: photo.url,\r\n          description: photo.description,\r\n        });\r\n      }\r\n    }\r\n    return images;\r\n  }\r\n  //TODO Continue here\r\n  deleteUser() {\r\n    this.alertifyService.confirm('Deletar?', `Deseja mesmo deletar o seu Perfil? Não prefere apenas desativar e esconder ele? Clique em OK para deletar!`, () => {\r\n      this.userService.deleteUser(this.user.memberId).subscribe(response => {\r\n        this.alertifyService.success('Seu Perfil foi deletado do sistema com sucesso!');\r\n        localStorage.removeItem('currentUser');\r\n        this.router.navigate(['/home']);\r\n      }, error => {\r\n        this.alertifyService.error('Erro ao deletar, tente novamente mais tarde!', error);\r\n      });\r\n    });\r\n  }\r\n\r\n  //TODO Continue here\r\n  disableUser() {\r\n    this.alertifyService.confirm('Desativar?', `Deseja mesmo desativar e esconder o seu Perfil?`, () => {\r\n      this.userService.deleteUser(this.user.memberId).subscribe(response => {\r\n        this.alertifyService.success('Seu Perfil foi desativado do sistema com sucesso!');\r\n        this.router.navigate(['/home']);\r\n      }, error => {\r\n        this.alertifyService.error('Erro ao deletar, tente novamente mais tarde!', error);\r\n      });\r\n    });\r\n  }\r\n\r\n  editUser() {\r\n    this.editProfile = !this.editProfile;\r\n\r\n    if (this.editProfile) {\r\n      this.editUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`https://airtable.com/embed/${EDIT_FORM}${this.fields}`);\r\n      this.loading = true;\r\n      // this.spinner.show();      \r\n    }\r\n  }\r\n\r\n  editMainImage() {\r\n    this.editProfile = !this.editProfile;\r\n\r\n    if (this.editProfile) {\r\n      this.editUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`https://airtable.com/embed/${MAIN_IMAGE}?prefill_MemberIdToUpdate=${this.user.memberId}`);\r\n      this.loading = true;\r\n      // this.spinner.show();      \r\n    }\r\n  }\r\n\r\n  editOtherImages() {\r\n    this.editProfile = !this.editProfile;\r\n\r\n    if (this.editProfile) {\r\n      this.editUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`https://airtable.com/embed/${OTHER_IMAGES}?prefill_MemberIdToUpdate=${this.user.memberId}`);\r\n      this.loading = true;\r\n      // this.spinner.show();      \r\n    }\r\n  }\r\n\r\n  hideSpinner() {\r\n    this.loading = false;\r\n    // this.spinner.hide();\r\n  }\r\n}","<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\" style=\"text-align: center\">\r\n      <h2>{{ user.knownAs }} | {{ user.age }} anos</h2>\r\n    </div>\r\n    <div class=\"col-sm-2\">\r\n      <button class=\"btn btn-info w-100\" onclick=\"history.back()\"><i class=\"fa fa-arrow-left\"></i> Voltar</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n\r\n        <img class=\"card-img-top img-thumbnail\" src=\"{{ user.photoUrl || '../../../assets/user.png' }}\"\r\n          alt=\"{{ user.knownAs }}\" style=\"cursor: pointer;\" (click)=\"selectTab(2)\" />\r\n\r\n        <button class=\"btn btn-danger member-icon\" *ngIf=\"user.isLiked\" (click)=\"sendDislike()\"\r\n          title=\"Clique para Descurtir!\"><i class=\"fa fa-heart\"></i></button>\r\n\r\n        <div class=\"card-body\">\r\n          <div>\r\n            <strong><i class=\"fa fa-map-pin\"></i> Localização:</strong>\r\n            <a href=\"https://www.google.com/maps/place/{{ user.city }}, {{ user.uf }}\" target=\"_blank\"\r\n              title=\"Clique para ver no Mapa!\">\r\n              <p>{{ user.city }}, {{ user.uf }}</p>\r\n            </a>\r\n          </div>\r\n          <!-- <div>\r\n            <strong>Último Acesso:</strong>\r\n            <p>{{user.lastActive | timeago}}</p>\r\n          </div> -->\r\n          <div>\r\n            <strong><i class=\"fa fa-calendar\"></i> Membro Desde:</strong>\r\n            <p>{{ user.created | date: \"mediumDate\" }}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n\r\n          <!-- Other User -->\r\n          <div class=\"btn-group d-flex\" *ngIf=\"!user.isActiveUser\">\r\n            <button class=\"btn btn-primary w-100\" *ngIf=\"!user.isLiked\" (click)=\"sendLike()\"><i class=\"fa fa-heart\"></i>\r\n              Curtir</button>\r\n            <button class=\"btn btn-primary w-100\" *ngIf=\"user.isLiked\" (click)=\"sendDislike()\"><i\r\n                class=\"fa fa-rotate-left\"></i> Descurtir</button>\r\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">\r\n              <i class=\"fa fa-comment\"></i> Mensagem\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Your Profile -->\r\n          <div class=\"btn-group d-flex\" *ngIf=\"user.isActiveUser\">\r\n            <!-- <button class=\"btn btn-danger w-100\" (click)=\"deleteUser()\"><i class=\"fa fa-trash\"></i>\r\n              Deletar</button>\r\n            <button class=\"btn btn-primary w-100\" (click)=\"disableUser()\"><i class=\"fa fa-exclamation\"></i>\r\n              Desativar</button> -->\r\n            <button class=\"btn btn-info w-100\" (click)=\"editUser()\">Editar Dados do Perfil</button>\r\n            <button class=\"btn btn-primary w-100\" (click)=\"editMainImage()\">Editar Foto Principal</button>\r\n            <button class=\"btn btn-success w-100\" (click)=\"editOtherImages()\">Editar Demais Fotos</button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <p *ngIf=\"loading\"><strong>Aguarde! Carregando dados...</strong></p>\r\n\r\n      <div class=\"tab-panel\" *ngIf=\"editProfile\">\r\n        <iframe (load)=\"hideSpinner()\" class=\"airtable-embed\" [src]=\"editUrl\" frameborder=\"0\" onmousewheel=\"\"\r\n          width=\"100%\" height=\"533\"></iframe>\r\n      </div>\r\n\r\n      <!-- *ngIf=\"!editProfile\" -->\r\n      <div class=\"tab-panel\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n\r\n          <tab heading=\"Sobre {{ user?.knownAs }}\">\r\n\r\n            <strong><i class=\"fa fa-address-book\"></i> Sobre mim:</strong>\r\n            <p>{{ user.introduction }}</p>\r\n\r\n            <strong *ngIf=\"user.lookingFor\"><i class=\"fa fa-eye\"></i> O que busco:</strong>\r\n            <p>{{ user.lookingFor }}</p>\r\n\r\n            <strong *ngIf=\"user.church\"><i class=\"fa fa-building\"></i> Igreja que frequenta:</strong>\r\n            <p>{{ user.church }}</p>\r\n\r\n            <strong *ngIf=\"user.christianTime\"><i class=\"fa fa-calendar\"></i> Tempo de Cristã(o):</strong>\r\n            <p>{{ user.christianTime }}</p>\r\n\r\n            <strong *ngIf=\"user.interestsArray\"><i class=\"fa fa-thumbs-up\"></i> Interesses:</strong>\r\n            <p>\r\n              <span class=\"badge rounded-pill bg-primary interests\" *ngFor=\"let interest of user.interestsArray\">{{\r\n                interest }}</span>\r\n            </p>\r\n          </tab>\r\n\r\n          <tab heading=\"Perguntas\">\r\n            <strong>Perguntas e Respostas:</strong>\r\n            <br><br>\r\n            <ul>\r\n              <li *ngIf=\"user.relationship\"><strong>Tipo de Relacionamento?</strong> {{ user.relationship }}</li>\r\n              <li *ngIf=\"user.height\"><strong>Qual a sua altura?</strong> {{ user.height }}</li>\r\n              <li *ngIf=\"user.maritalStatus\"><strong>Estado civil?</strong> {{ user.maritalStatus }}</li>\r\n              <li *ngIf=\"user.education\"><strong>Nível escolar?</strong> {{ user.education }}</li>\r\n              <li *ngIf=\"user.haveKids\"><strong>Tem filhos?</strong> {{ user.haveKids }}</li>\r\n              <li *ngIf=\"user.wantKids\"><strong>Gostaria de ter filhos?</strong> {{ user.wantKids }}</li>\r\n              <li *ngIf=\"user.baptized\"><strong>É Batizada(o) nas águas?</strong> {{ user.baptized }}</li>\r\n              <li *ngIf=\"user.connectGroup\"><strong>Frequenta algum grupo na Igreja?</strong> {{ user.connectGroup }}\r\n              </li>\r\n              <li *ngIf=\"user.churchAttendance\"><strong>Frequência na Igreja?</strong> {{ user.churchAttendance }}</li>\r\n              <li *ngIf=\"user.otherCounty\"><strong>Aceita Cristãos de outros Estados?</strong> {{ user.otherCounty }}\r\n              </li>\r\n              <li *ngIf=\"user.otherCountyMove\"><strong>Caso o namoro vire casamento, você aceitaria se mudar?</strong>\r\n                {{\r\n                user.otherCountyMove }}</li>\r\n              <li *ngIf=\"user.relatioshipWithKids\"><strong>Aceita se relacionar com alguém que tem filhos?</strong> {{\r\n                user.relatioshipWithKids }}</li>\r\n              <li *ngIf=\"user.holyFasting\"><strong>Você tem o hábito de fazer Jejum Santo com propósitos?</strong> {{\r\n                user.holyFasting }}\r\n              </li>\r\n              <li *ngIf=\"user.holyRelatioship\"><strong>Em caso de namoro, você aceitaria um Namoro Santo?</strong> {{\r\n                user.holyRelatioship }}</li>\r\n              <li *ngIf=\"user.smoke\"><strong>Você fuma?</strong> {{ user.smoke }}</li>\r\n            </ul>\r\n          </tab>\r\n\r\n          <tab heading=\"Fotos\">\r\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\r\n          </tab>\r\n\r\n          <tab heading=\"Mensagens\">\r\n            <app-member-messages *ngIf=\"!user.isActiveUser\" [recipientId]=\"user.id\" [recipientUser]=\"user\">\r\n            </app-member-messages>\r\n            <div class=\"alert alert-info\" *ngIf=\"user.isActiveUser\">\r\n              <strong>Todas as mensagens enviadas e recebidas estão no Menu Mensagens\r\n                acima!</strong>\r\n            </div>\r\n          </tab>\r\n\r\n        </tabset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild, HostListener } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { User } from \"src/app/_models/user\";\r\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { UserService } from \"src/app/_services/user.service\";\r\nimport { AuthService } from \"src/app/_services/Auth.service\";\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-member-edit\",\r\n  templateUrl: \"./member-edit.component.html\",\r\n  styleUrls: [\"./member-edit.component.css\"],\r\n})\r\n\r\nexport class MemberEditComponent implements OnInit {\r\n  user: User;\r\n  photoUrl: string;\r\n  // @ViewChild(\"editForm\", { static: true }) editForm: NgForm;\r\n  // @HostListener(\"window:beforeunload\", [\"$event\"])\r\n  // bsConfig: Partial<BsDatepickerConfig>;\r\n  // ufList = [\r\n  //   \"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Distrito Federal\", \"Espírito Santo\", \"Goiás\", \"Maranhão\",\r\n  //   \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\",\r\n  //   \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"\r\n  // ];\r\n\r\n  unloadNotification($event: any) {\r\n    // if (this.editForm.dirty) {\r\n    //   $event.returnValue = true;\r\n    // }\r\n  }\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private alertify: AlertifyService, private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe((data) => {\r\n      this.user = data[\"user\"];\r\n      \r\n    });    \r\n  }\r\n\r\n  hideSpinner() {\r\n    this.spinner.hide();\r\n  }\r\n\r\n  updateUser() {\r\n    // const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\r\n    // this.userService\r\n    //   .updateUser(id, this.user)\r\n    //   .subscribe(\r\n    //     (response) => {\r\n    //       this.alertify.success(\"Perfil atualizado com sucesso!\");\r\n    //       this.editForm.reset(this.user);\r\n    //     },\r\n    //     (error) => {\r\n    //       this.alertify.error(error);\r\n    //     }\r\n    //   );\r\n  }\r\n}\r\n","<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <h1>Seu Perfil</h1>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <!-- <div class=\"alert alert-info\" role=\"alert\" *ngIf=\"editForm.dirty\">\r\n        <strong>Atenção:</strong> Você fez alterações! Qualquer alteração será perdida!\r\n      </div> -->\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n        <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\"\r\n          alt=\"{{user.knownAs}}\">\r\n\r\n        <div class=\"card-body\">\r\n          <div class=\"form-group\">\r\n            <!-- <input bsDatepicker [bsConfig]=\"bsConfig\" class=\"form-control\"\r\n              placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" > -->\r\n            <!-- <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div> -->\r\n          </div>\r\n          <!-- <div>\r\n            <strong>Localização:</strong>\r\n            <p>{{user.city}}, {{user.county}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Idade:</strong>\r\n            <p>{{user.age}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Último Acesso:</strong>\r\n            <p>{{user.lastActive | timeago}}</p>\r\n          </div> -->\r\n          <div>\r\n            <strong>Membro Desde:</strong>\r\n            <p>{{user.created | date: 'mediumDate'}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <!-- <button class=\"btn btn-success btn-block\" form=\"editForm\" [disabled]=\"!editForm.dirty\">Salvar</button> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"tab-panel\">\r\n\r\n        <!-- <iframe (load)=\"hideSpinner()\" class=\"airtable-embed\" src=\"https://airtable.com/embed/shrUgIWgKqFDTNznH?backgroundColor=purple\" \r\n        frameborder=\"0\" onmousewheel=\"\" width=\"100%\" height=\"533\"></iframe> -->\r\n\r\n        <!-- <tabset class=\"member-tabset\">\r\n          <tab heading=\"Editar Perfil\">\r\n\r\n            <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\r\n\r\n              <h5><i class=\"fa fa-address-book\"></i> Sobre você:</h5>\r\n              <textarea name=\"introduction\" cols=\"30\" rows=\"5\" class=\"form-control\"\r\n                [(ngModel)]=\"user.introduction\"></textarea>\r\n\r\n              <br>\r\n              <h5><i class=\"fa fa-eye\"></i> O que busca:</h5>\r\n              <textarea name=\"lookingFor\" cols=\"30\" rows=\"5\" class=\"form-control\"\r\n                [(ngModel)]=\"user.lookingFor\"></textarea>\r\n\r\n              <h5>Interesses:</h5>\r\n              <textarea name=\"interests\" cols=\"30\" rows=\"6\" class=\"form-control\"\r\n                [(ngModel)]=\"user.interests\"></textarea>\r\n\r\n              <br>\r\n              <h5><i class=\"fa fa-map-pin\"></i> Localização:</h5>\r\n              <div class=\"form-inline\">\r\n                <label for=\"city\">Cidade:</label>\r\n                &nbsp;<input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"user.city\">&nbsp;\r\n                <label for=\"country\">Estado (UF): </label>\r\n                &nbsp;\r\n                <select class=\"form-control ml-1\" style=\"width: 180px\" id=\"county\" name=\"county\"\r\n                  [(ngModel)]=\"user.county\" required>\r\n                  <option disabled [ngValue]=\"undefined\">Selecione o UF</option>\r\n                  <option *ngFor=\"let uf of ufList\" [ngValue]=\"user.county\">{{ uf }}</option>\r\n                </select>                \r\n              </div>\r\n\r\n            </form>\r\n\r\n          </tab>\r\n          <tab heading=\"Editar Fotos\">\r\n            <app-photo-editor [photos]=\"user.photos\"></app-photo-editor>\r\n          </tab>\r\n        </tabset> -->\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { UserService } from \"src/app/_services/user.service\";\r\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\r\nimport { User } from \"src/app/_models/user\";\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from \"@angular/router\";\r\nimport { Pagination, PaginatedResult } from \"src/app/_models/pagination\";\r\n\r\n@Component({\r\n  selector: \"app-member-list\",\r\n  templateUrl: \"./member-list.component.html\",\r\n  styleUrls: [\"./member-list.component.css\"],\r\n})\r\n\r\nexport class MemberListComponent implements OnInit {\r\n  // export class MemberListComponent implements OnInit, RouteReuseStrategy {\r\n  // private storedRoutes = new Map<string, DetachedRouteHandle>();\r\n\r\n  // shouldDetach(route: ActivatedRouteSnapshot): boolean {\r\n  //   return route.routeConfig.path === 'list';\r\n  // }\r\n\r\n  // store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\r\n  //   this.storedRoutes.set(route.routeConfig.path, handle);\r\n  // }\r\n\r\n  // shouldAttach(route: ActivatedRouteSnapshot): boolean {\r\n  //   return !!route.routeConfig && !!this.storedRoutes.get(route.routeConfig.path);\r\n  // }\r\n\r\n  // retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\r\n  //   return this.storedRoutes.get(route.routeConfig.path);\r\n  // }\r\n\r\n  // shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\r\n  //   return future.routeConfig === curr.routeConfig;\r\n  // }  \r\n  users: User[];\r\n  user: User = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  genderList = [\r\n    { value: \"masculino\", display: \"Masculino\" },\r\n    { value: \"feminino\", display: \"Feminino\" },\r\n  ];\r\n  ufList = [\r\n    \"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Distrito Federal\", \"Espírito Santo\", \"Goiás\", \"Maranhão\",\r\n    \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\",\r\n    \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"\r\n  ];\r\n  userParams: any = {};\r\n  pagination: Pagination;\r\n  page: number;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe((data) => {\r\n    this.users = data[\"users\"].result;\r\n    this.pagination = data[\"users\"].pagination;\r\n      \r\n    this.userParams.minAge = localStorage.getItem('minAge') ?? 18;\r\n    this.userParams.maxAge = localStorage.getItem('maxAge') ?? 99;\r\n    this.userParams.uf = localStorage.getItem('uf') ?? 'Acre';\r\n    this.userParams.orderBy = 'lastActive';\r\n    });    \r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService\r\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\r\n      .subscribe((response: PaginatedResult<User[]>) => {\r\n        this.users = response.result;\r\n        this.pagination = response.pagination;\r\n      });\r\n      if (this.userParams.minAge) localStorage.setItem('minAge', this.userParams.minAge);\r\n      if (this.userParams.maxAge) localStorage.setItem('maxAge', this.userParams.maxAge);\r\n      if (this.userParams.uf) localStorage.setItem('uf', this.userParams.uf);\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams.uf = 'Santa Catarina'; //TODO Todos depois que acertar a paginação\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.loadUsers();\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\n  <h2>Resultados - {{ pagination.totalItems }} encontrado(s)</h2>\n  {{ userParams.OrderBy }}\n</div>\n\n<div class=\"container mt-3\">\n  <form #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" class=\"form-inline\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Idade De:</label>\n      <input type=\"number\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.minAge\" style=\"width: 70px\" id=\"minAge\"\n        name=\"minAge\" />\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Idade Até:</label>\n      <input type=\"number\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.maxAge\" style=\"width: 70px\" id=\"maxAge\"\n        name=\"maxAge\" />\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Estado (UF): </label>\n      <select class=\"form-control ml-1\" style=\"width: 180px\" id=\"uf\" name=\"uf\" [(ngModel)]=\"userParams.uf\" required>\n        <option disabled [ngValue]=\"undefined\">Selecione o UF</option>\n        <option *ngFor=\"let uf of ufList\" [ngValue]=\"uf\" >{{ uf }}</option>\n      </select>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-info\" style=\"margin-left: 10px\">\n      Aplicar Filtros\n    </button>\n    <!-- <button type=\"button\" class=\"btn btn-info\" style=\"margin-left: 10px\" (click)=\"resetFilters()\">\n      Resetar Filtros\n    </button> -->\n\n    <!-- <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" btnRadio=\"lastActive\"\n          [(ngModel)]=\"userParams.orderBy\">\n          Último Acesso\n        </button>\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" btnRadio=\"created\"\n          [(ngModel)]=\"userParams.orderBy\">\n          Novos Membros\n        </button>\n      </div>\n    </div> -->\n  </form>\n  <br />\n\n  <div class=\"row\">\n    <div class=\"col-lg-2 col-md-3 col-sm-6 inline\" *ngFor=\"let item of users\">\n      <app-member-card [user]=\"item\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\"\n    firstText=\"&raquo;\" (pageChanged)=\"pageChanged($event)\">\n  </pagination>\n</div> -->","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Message } from \"src/app/_models/message\";\nimport { AuthService } from \"src/app/_services/Auth.service\";\nimport { UserService } from \"src/app/_services/user.service\";\nimport { AlertifyService } from \"src/app/_services/Alertify.service\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { User } from \"src/app/_models/user\";\n\n@Component({\n  selector: \"app-member-messages\",\n  templateUrl: \"./member-messages.component.html\",\n  styleUrls: [\"./member-messages.component.css\"],\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientUser: User;\n  @Input() recipientId: number;\n  messages: Message[];\n  message: any = {};\n  sendMessageForm: FormGroup;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.sendMessageForm = new FormGroup({\n      sendMessageTxt: new FormControl(\"\", Validators.required),\n    });\n\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +localStorage.getItem(\"userId\");\n    this.userService\n      .getMessages(currentUserId, this.recipientUser.id)\n      .pipe(\n        tap(messages => {\n          // tslint:disable-next-line:prefer-for-of\n          // for (let i = 0; i < messages.length; i++) {\n          //   if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n          //     this.userService.markAsRead(currentUserId, messages[i].id);\n          //   }\n          // }\n        })\n      )\n      .subscribe(\n        (messages) => {\n          this.messages = messages;\n        },\n        (error) => {\n          this.alertifyService.error(error);\n        }\n      );\n  }\n\n  sendMessage() {\n    if (this.sendMessageForm.valid) {\n      this.userService\n        .addMessage(this.authService.getCurrentUser().memberId, this.recipientUser.memberId,\n          this.sendMessageForm.get(\"sendMessageTxt\").value, this.messages.length)\n        .subscribe((message: Message) => {\n          //debugger; it will always stop here\n          this.messages.push(message);\n          this.sendMessageForm.reset();\n        });\n    }\n  }\n}\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div *ngIf=\"messages?.length === 0\">\r\n      <p>Sem mensagens... mande um Oi usando a caixa de textos abaixo!</p>\r\n    </div>\r\n    <ul class=\"chat\">\r\n      <li *ngFor=\"let message of messages\">\r\n\r\n        <!-- to them -->\r\n        <div *ngIf=\"message.senderId == recipientId\">\r\n          <span class=\"chat-img float-left\" style=\"margin-right: 10px\">\r\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <strong class=\"primary-font\">{{message.senderKnownAs}}</strong>\r\n              <small class=\"text-muted float-right\">\r\n                <span class=\"fa fa-clock-o\"> {{message.messageSent | date: 'short'}}</span>\r\n              </small>\r\n            </div>\r\n            <p>{{message.content}}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- to me -->\r\n        <div *ngIf=\"message.senderId != recipientId\">\r\n          <span class=\"chat-img float-right\" style=\"margin-left: 10px\">\r\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-o\"> {{message.messageSent | date: 'short'}}</span>\r\n                <!-- <span *ngIf=\"!message.isRead\" class=\"text-danger\">(Não lida)</span>\r\n                <span *ngIf=\"message.isRead\" class=\"text-success\">(Lida | {{message.dateRead | timeago}})</span> -->\r\n              </small>\r\n              <strong class=\"primary-font  float-right\">{{message.senderKnownAs}}</strong>\r\n            </div>\r\n            <p>{{message.content}}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <form [formGroup]=\"sendMessageForm\">\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" class=\"form-control input-sm\" placeholder=\"Digite uma mensagem...\"\r\n          formControlName=\"sendMessageTxt\"\r\n          [ngClass]=\"{'is-invalid': sendMessageForm.get('sendMessageTxt').errors && sendMessageForm.get('sendMessageTxt').touched}\" />\r\n\r\n        <div class=\"input-group-append\">\r\n          <button class=\"btn btn-primary\" (click)=\"sendMessage()\" [disabled]=\"!sendMessageForm.valid\">Enviar</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AlertifyService } from 'src/app/_services/Alertify.service';\nimport { AuthService } from 'src/app/_services/Auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { API_KEY, API_PATH } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  currentMain: Photo;\n  constructor(private authService: AuthService, private userService: UserService, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  initializeUploader() {\n    const options = { headers: JSON.stringify({ \"fields\": { \"Favorites\": 'favorites' }, \"typecast\": true }) }\n    const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\n    this.uploader = new FileUploader({\n      url: API_PATH + 'Reported/recnUj83aG5O7y55n',  \n      authToken: 'Bearer ' + API_KEY,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain,\n          isApproved: res.isApproved\n        };\n        this.photos.push(photo);\n        if (res.isMain) {\n          this.authService.photoUrl.next(res.url);\n        }\n      }\n    };\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo) {\n    const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\n    this.userService.setMainPhoto(id, photo.id).subscribe(response => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.photoUrl.next(photo.url);\n\n      const user: User = JSON.parse(localStorage.getItem(\"user\"));\n\n      if (user) {\n        user.photoUrl = photo.url;\n        localStorage.removeItem(\"user\");\n        localStorage.setItem('user', JSON.stringify(user));\n      }\n\n    });\n  }\n\n  //TODO this.authService.decodedToken.nameid\n  deletePhoto(photo: Photo) {\n    const id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\n    this.userService.deletePhoto(id, photo.id).subscribe(response => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photo.id), 1);\n      this.alertifyService.success('Photo has been deleted');\n    }, error => {\n      this.alertifyService.error('Failed to delete the Photo');\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n      <div class=\"container\" style=\"position:relative;padding-left:0px\">\n        <img src=\"{{photo.url}}\" alt=\"\" class=\"img-thumbnail\" [style.opacity]=\"!photo.isApproved ? '0.4' : '1'\"/>\n        <div class=\"centered\" \n        [ngClass]=\"!photo.isApproved ? 'awaitingApproval' : ''\"\n        *ngIf=\"!photo.isApproved\">Awaiting approval</div>\n      </div>\n    \n    <div class=\"text-center\">\n      <button class=\"btn btn-sm mr-1\" (click)=\"setMainPhoto(photo)\" \n      [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n      [disabled]=\"photo.isMain || !photo.isApproved\">Main</button>\n      <button class=\"btn btn-sm btn-danger\"><i class=\"fa fa-trash-o\"></i></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n          Drop Photos here\n      </div>\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload\n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel\n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Remove\n          </button>\n      </div>\n\n  </div>\n\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/Auth.service';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: \"app-messages\",\n  templateUrl: \"./messages.component.html\",\n  styleUrls: [\"./messages.component.css\"],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\n    private route: ActivatedRoute, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getLastChats(this.authService.getCurrentUser().memberId, this.pagination.currentPage,\n      this.pagination.itemsPerPage, this.messageContainer)\n      .subscribe((data: PaginatedResult<Message[]>) => {\n        this.messages = data.result;\n        this.pagination = data.pagination;\n      }, error => {\n        this.alertifyService.error(error);\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n  deleteMessage(message: Message, event) {\n    event.stopPropagation();\n\n    this.alertifyService.confirm('Deletar Conversa?', 'Tem certeza que deseja deletar toda esta conversa?', () => {\n      this.userService.deleteLastChat(message)\n        .subscribe(result1 => {\n          \n          let result = this.userService.deleteChats(message);\n          let test = result;\n            \n        }, error => {\n          this.alertifyService.error('Falha ao deletar conversa');\n        });\n    });\n  }\n}\n","<div class=\"container mt-5\">\r\n\r\n  <div style=\"position: absolute; left: 50%; top: 50%;\" *ngIf=\"messages.length === 0\">\r\n    <div class=\"alert alert-info\" role=\"alert\" style=\"position: relative; left: -50%;\">\r\n      <p><i class=\"fa fa-bell\"></i> Você ainda não recebeu ou enviou uma mensagem, navegue nas listas de Cristãos e entre em contato!</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\r\n    <table class=\"table table-hover\" style=\"cursor: pointer;\">\r\n      <thead>\r\n        <tr>\r\n          <th style=\"width: 40%;\">Última Mensagem</th>\r\n          <th style=\"width: 20%;\">Conversa com</th>\r\n          <th style=\"width: 20%;\">Enviada em</th>\r\n          <th style=\"width: 20%;\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr \r\n          *ngFor=\"let message of messages\"\r\n          [routerLink]=\"['/members',messageContainer == 'Outbox'? message.recipientId: message.senderId]\" [queryParams]=\"{tab: 3}\"\r\n        >\r\n          <td>{{ message.content }}</td>\r\n          <td>\r\n            <div *ngIf=\"messageContainer != 'Outbox'\">\r\n              <img\r\n                src=\"{{ message?.senderPhotoUrl }}\"\r\n                class=\"img-circle rounded-circle mr-1\"\r\n              />\r\n              <strong>{{ message.senderKnownAs }}</strong>\r\n            </div>\r\n            <div *ngIf=\"messageContainer == 'Outbox'\">\r\n              <img\r\n                src=\"{{ message?.recipientPhotoUrl }}\"\r\n                class=\"img-circle rounded-circle mr-1\"\r\n              />\r\n              <strong>{{ message.recipientKnownAs }}</strong>\r\n            </div>\r\n          </td>\r\n          <td>{{ message.messageSent | date: 'short' }}</td>\r\n          <td>\r\n            <!-- <button class=\"btn btn-danger\" (click)=\"deleteMessage(message, $event)\">Deletar</button> -->\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"d-flex justify-content-center\" *ngIf=\"messages.length > 0\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\">\r\n  </pagination>\r\n</div> -->\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { AuthService } from '../_services/Auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\n\nexport class NavComponent implements OnInit {\n  model: any = {};\n  username: string;\n  photoUrl: string;\n  id: number;\n  forgot: boolean;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getCurrentUser();\n    this.authService.photoUrl.subscribe((resp) => {\n      this.photoUrl = resp;\n    });\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  login() {\n    this.authService.loginAirtable(this.model).subscribe(next => {\n      this.alertify.success('Login efetuado com Sucesso!');\n      this.router.navigate(['/home']);\n    }, error => {\n      this.alertify.confirm('Falha ao Entrar', 'Verifique seu email e senha e tente novamente! Ou clique em Esqueci a Senha para receber sua senha por Email!', () => {\n        this.forgot = true;\n      });\n    });\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.alertify.warning('Você foi desconectado!');\n    this.router.navigate(['/home']);\n  }\n\n  forgotPassword() {\n    this.alertify.confirm('Esqueci a Senha', `Deseja receber sua senha por Email?`, () => {\n\n      this.authService.checkLoginByEmail(this.model.Username)\n        .subscribe((memberId: string) => {\n          if (memberId) {\n            this.authService.forgotPasswordUpdate(memberId).subscribe(response => {\n              this.alertify.success('Sua senha foi enviada com sucesso, verifique seu email!');\n              this.router.navigate(['/home']);\n            }, error => {\n              this.alertify.error('Erro ao enviar sua senha, tente novamente mais tarde!', error);\n            });\n          }\n        }), error => {\n          this.alertify.error('Erro ao enviar sua senha, tente novamente mais tarde!', error);\n        }\n    });\n  }\n}","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary pr-5\">\n  \n  <a class=\"navbar-brand\" href=\"/home\">\n    <div id=\"block1\" style=\"float:left;\">\n      <h1 class=\"varao\">Varão</h1>\n    </div>\n    <div id=\"block2\" style=\"float:left;\">\n      <h1 class=\"varoa\">Varoa</h1>\n    </div>\n  </a>\n\n  <ul class=\"navbar-nav mr-auto\">\n    <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"loggedIn()\">\n      <a class=\"nav-link\" [routerLink]=\"['/members']\">Listas</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"loggedIn()\">\n      <a class=\"nav-link\" [routerLink]=\"['/lists']\">Curtidas</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"loggedIn()\">\n      <a class=\"nav-link\" [routerLink]=\"['/messages']\">Mensagens</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\" [routerLink]=\"['/contactus']\">Fale Conosco</a>\n    </li>\n  </ul>\n\n  <div class=\"dropdown\" dropdown *ngIf=\"loggedIn()\">\n    <span class=\"mr-2\">\n      <img src=\"{{ photoUrl || '../../../../assets/user.png'}}\" alt=\"\" class=\"avatar\" [routerLink]=\"['/members/' + authService.id]\" />\n    </span>\n    <a class=\"dropdown-toggle text-light\" *ngIf=\"loggedIn()\" dropdownToggle>\n      Olá, {{ authService.username }}\n    </a>\n\n    <div class=\"dropdown-menu\" *dropdownMenu>\n      <a href=\"#\" class=\"dropdown-item\" [routerLink]=\"['/members/' + authService.id]\"><i class=\"fa fa-user\"></i> Seu Perfil</a>\n      <div class=\"dropdown-divider\"></div>\n      <!-- <a href=\"#\" class=\"dropdown-item\" [routerLink]=\"['/members/' + authService.id]\"><i class=\"fa fa-send\"></i> Fale Conosco</a>\n      <div class=\"dropdown-divider\"></div> -->\n      <a href=\"#\" class=\"dropdown-item\" (click)=\"logout()\"><i class=\"fa fa-sign-out\"></i> Sair</a>\n    </div>\n  </div>\n\n  <form #loginForm=\"ngForm\" *ngIf=\"!loggedIn()\" class=\"form-inline my-2 my-lg-0\" (submit)=\"login()\" autocomplete=\"off\">\n    <input class=\"form-control mr-sm-2\" name=\"Username\" placeholder=\"Email\" autocomplete=\"off\" type=\"text\" required\n      [(ngModel)]=\"model.Username\" />\n    <input class=\"form-control mr-sm-2\" placeholder=\"Senha\" type=\"password\" name=\"Password\" required\n      [(ngModel)]=\"model.Password\" />\n    <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\" [disabled]=\"!loginForm.valid\">\n      Entrar\n    </button>\n    <!-- *ngIf=\"forgot\" -->\n    <button class=\"btn btn-info my-2 my-sm-0\" style=\"margin-left: 10px;\" type=\"button\"  [disabled]=\"!loginForm.valid\" (click)=\"forgotPassword()\">\n      Enqueci a Senha\n    </button>\n  </form>\n</nav>\n\n<!-- <pre>\n  Form Valid: {{loginForm.valid}}\n  Form Touched: {{loginForm.touched}}\n  Form Dirty: {{loginForm.dirty}}\n  Form Values: {{loginForm.value | json}}\n\n  Username Valid: {{username.valid}}\n  Username Touched: {{username.touched}}\n  Username Dirty: {{username.dirty}}\n  Username Values: {{username.value | json}}\n\n  Password Valid: {{password.valid}}\n  Password Touched: {{password.touched}}\n  Password Dirty: {{password.dirty}}\n  Password Values: {{password.value | json}}\n</pre> -->","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/Auth.service';\nimport { AlertifyService } from '../_services/Alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user: User;\n  @Input() valuesFromHome: [];\n  @Output() emitCancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  colorTheme = 'theme-red';\n  bsConfig: Partial<BsDatepickerConfig>;\n  constructor(private router: Router, private authService: AuthService, private alertify: AlertifyService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.bsConfig = Object.assign({}, { containerClass: this.colorTheme });\n    \n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validators: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null :  { 'mismatch' : true};\n  }\n  cancel() {\n    this.emitCancelRegister.emit();\n  }\n\n  register() {\n    // this.user = Object.assign({}, this.registerForm.value);\n    // this.authService.register(this.user).subscribe(next => {\n    //   this.alertify.success('Registration Successfull');\n    // }, error => {\n    //   this.alertify.error(error);\n    // }, () => {\n    //   this.authService.login(this.user).subscribe(response => {\n    //     this.router.navigate(['/members']);\n    //   }, error => {\n    //     this.alertify.error(error);\n    //   });\n    // });\n  }\n}\n","<form [formGroup]=\"registerForm\" (submit)=\"register()\" autocomplete=\"off\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr />\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n    </label>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\" placeholder=\"Username\" formControlName=\"username\"/>\n    <div class=\"invalid-feedback\">Please choose a username</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n      placeholder=\"Known as\" formControlName=\"knownAs\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\"  bsDatepicker [bsConfig]=\"bsConfig\" class=\"form-control\"\n      placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" >\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"City\" formControlName=\"city\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Country\" formControlName=\"country\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('password').errors  && registerForm.get('password').touched}\" placeholder=\"Password\" formControlName=\"password\"/>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('required')  && registerForm.get('password').touched\">Password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('minlength')  && registerForm.get('password').touched\">Password must be at least 4 characters</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('maxlength')  && registerForm.get('password').touched\">Password can not exceed 8 characters</div>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\"\n    [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors  && registerForm.get('confirmPassword').touched || \n    registerForm.hasError('mismatch')  && registerForm.get('confirmPassword').touched}\"\n    formControlName=\"confirmPassword\"/>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword').hasError('required')  && registerForm.get('confirmPassword').touched\">Confirm password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('mismatch')  && registerForm.get('confirmPassword').touched\">Passwords must match</div>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n  </div>\n</form>\n<!-- \n<p>Form Value : {{registerForm.value | json}}</p>\n<p>Form State : {{registerForm.status | json}}</p> -->","import { MemberReloadComponent } from './member-reload/member-reload.component';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { Routes } from '@angular/router';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\n// import { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessageListResolver } from './_resolvers/message-list.resolver';\n\nexport const appRoutes: Routes = [\n    {path: '', component: HomeComponent},\n    {path: 'contactus', component: ContactUsComponent},\n    {path: 'reload', component: MemberReloadComponent},\n    {\n        path: '',\n        runGuardsAndResolvers: 'always',\n        canActivate: [AuthGuard],\n        children: [\n            { path: 'members', component: MemberListComponent, resolve: { users: MemberListResolver} },\n            { path: 'members/:id', component: MemberDetailComponent, resolve: { user: MemberDetailResolver} },\n            { path: 'members/:user', component: MemberDetailComponent, resolve: { user: MemberDetailResolver} },\n            // { path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChanges], resolve: { user: MemberEditResolver}},\n            { path: 'member/edit', component: MemberEditComponent, resolve: { user: MemberEditResolver}},\n            { path: 'messages', component: MessagesComponent, resolve: { messages: MessageListResolver} },\n            { path: 'lists', component: ListsComponent, resolve: { users: ListsResolver}}\n        ]\n    },\n    {path: '**', redirectTo: '', pathMatch: 'full'}\n];\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Value } from '../_models/Value';\nimport { AlertifyService } from '../_services/Alertify.service';\n\n@Component({\n  selector: 'app-values',\n  templateUrl: './values.component.html',\n  styleUrls: ['./values.component.css']\n})\nexport class ValuesComponent implements OnInit {\n  values: Value[];\n  constructor(private http: HttpClient, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n\n  getValues() {\n    this.http.get('http://localhost:5000/api/values').subscribe((response: any) => {\n      this.values = response;\n      this.alertifyService.success('values received');\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n}\n","<p *ngFor=\"let value of values\">\n  {{value.id}}, {{value.name}}\n</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\ndeclare const require: any;\n\nexport const environment = {\n  production: false,\n  appVersion: require('../../package.json').version + '-dev'\n};\n\nconst API_BASE = \"appWNKSYG2IPWC2n3\" + \"/\"; // Tests\nexport const API_PATH = `https://api.airtable.com/v0/${API_BASE}`;\nexport const API_KEY = \"keyRNWJ9cetyXUJex\";\nexport const CREATE_FORM = \"shruHY6jya6Y0gDjg\";\nexport const EDIT_FORM = \"shrpTrfrJgjva89As\";\nexport const MAIN_IMAGE = \"shriwEGX2lOCbIDgP\";\nexport const OTHER_IMAGES = \"shrJRw7HX4ZvZzjlD\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}